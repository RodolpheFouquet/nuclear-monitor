{"version":3,"sources":["utils/svg-icons.js","api/index.js","store/productions.js","store/unavailabilities.js","store/reactors.js","store/plants.js","store/mix.js","store/rivers.js","store/index.js","components/Link.jsx","views/HomeView/index.jsx","views/AboutView/index.jsx","utils/index.js","store/otherSelectors.js","views/MixView/components/config.js","views/MixView/components/MixComponent.jsx","views/MixView/index.jsx","views/PlantView/components/ReactorIndicator.jsx","views/PlantView/components/ReactorLoadChart.jsx","views/PlantView/components/ReactorDetails.jsx","views/PlantView/components/PlantPictures.jsx","views/PlantView/index.jsx","components/PlantMap.jsx","components/DatePicker.jsx","HOC/buildLoader.js","components/AppLayout.jsx","components/AnalyticsComponent.jsx","App.jsx","serviceWorker.js","index.js","utils/types.js"],"names":["L","DivIcon","SVGIcon","extend","options","point","initialize","Util","setOptions","this","iconSize","circleAnchor","Number","x","circleColor","color","circleFillOpacity","opacity","circleOpacity","circleWeight","weight","fillColor","fontSize","iconAnchor","y","popupAnchor","html","_createSVG","_createCircle","cx","cy","radius","circleRatio","fill","circleFillColor","fillOpacity","stroke","strokeOpacity","strokeWidth","className","_createPathDescription","height","width","margin","_createPath","pathDescription","path","circle","text","_createText","style","fontWeight","lineHeight","circleText","fontColor","replace","fontOpacity","divIcon","svgIcon","Marker","SVGMarker","latlng","icon","iconFactory","iconOptions","_latlng","onAdd","map","prototype","call","setStyle","_icon","children","iconBody","iconCircle","setAttribute","setOpacity","setIcon","marker","svgMarker","IndicatorIcon","circum","Math","PI","pieSize","loadRate","notif","pie","REACT_APP_NUCLEAR_MONITOR_API","process","doFetch","a","fetch","res","ok","Error","Promise","all","river","then","json","name","data","date","qs","stringify","mix","length","rest","Array","from","NaN","concat","PRODUCTIONS_LOAD_ACTION","PRODUCTIONS_RECEIVE_ACTION","receiveProductionsAction","errors","type","initialState","productionsLoadedSelector","state","inputDate","moment","format","productions","loaded","productionsReducer","action","loading","indexBy","prop","UNAVAILABILITIES_LOAD_ACTION","UNAVAILABILITIES_RECEIVE_ACTION","receiveUnavailabilitiesAction","unavailabilitiesLoadedSelector","unavailabilities","unavailabilitiesReducer","REACTORS_LOAD_ACTION","REACTORS_RECEIVE_ACTION","receiveReactorsAction","reactorsLoadedSelector","reactors","getStatus","unavailability","availablePower_MW","reactorSelector","eicCode","reactor","dayProductions","values","endOfDay","value","d","max","productionSelector","unavalabilitySelector","status","reactorsOfPlantSelector","plantId","Object","filter","sortBy","INIT_DATA","availablePower","totalPower","availableCount","partiallyUnavailableCount","totallyUnavailableCount","reactorSetIndicatorsSelector","dateString","slotIndex","startOf","add","reactorsSelector","reduce","res2","partially","totally","isAfter","startDate","isBefore","endDate","power_MW","reactorByPlantAndIndexSelector","reactorIndex","reacto","find","reactorsReducer","PLANTS_LOAD_ACTION","PLANTS_RECEIVE_ACTION","receivePlantsAction","plantsLoadedSelector","plants","plantSelector","plantsSelector","plant","id","plantsReducer","MIX_LOAD_ACTION","MIX_RECEIVE_ACTION","receiveMixAction","mixLoadedSelector","mixSelector","mixReducer","RIVERS_LOAD_ACTION","RIVERS_RECEIVE_ACTION","receiveRiversAction","riversLoadedSelector","rivers","riversSelector","riversReducer","rootReducer","combineReducers","enhancers","applyMiddleware","thunk","enhancer","composeWithDevTools","store","createStore","Link","to","location","pathname","search","Title","HomeView","level","Content","href","target","rel","AboutView","avatar","src","content","accordion","bordered","Panel","header","key","title","frameBorder","allow","allowFullScreen","testScreenType","size","windowWidth","window","innerWidth","getWindowHeight","body","document","documentElement","scrollHeight","offsetHeight","clientHeight","v","isNaN","HEADER_HEIGHT","DRAWER_WIDTH","getCurrentDate","parse","substr","toISOString","META","hydroPumped","label","stackId","bioenergy","wind","solar","nuclear","hydro","gas","coal","oil","exports","imports","GRAPH_ORDER","HEADER_ORDER","EMISSION_FACTORS","MixComponent","setSlotIndex","currentDate","backgroundColor","abs","consumption","ceil","keys","sum","e","total","computeCo2","axisLine","mirror","dataKey","activeDot","dot","min","defaultValue","onChange","debounce","tipFormatter","withStateEnhancer","withState","props","isSame","hours","mixEnhancer","connect","indicatorsEnhancer","reactorSetIndicators","floor","compose","available","availabilityRate","prodAvailableRate","availableSize","hour","minutes","span","subtract","theme","display","require","ReactorType","StatusIndicator","twoToneColor","ReactorIndicator","prods","hourIndex","lastIndex","last","i","currentProd","absLoad","part","background","TICKS","tickFormatter","ReactorLoadChart","useState","indexSelected","setSelected","prod","onClick","activeTooltipIndex","domain","ticks","index","ReactorDetails","column","Item","exploitationStartYear","stage","marginTop","reason","PlantPictures","pictures","picture","alt","ReactorDetailsContainer","match","params","currentPlant","goTo","url","history","push","Option","marginLeft","coolingType","marginRight","overlay","wikiLink","asnLink","trigger","placement","coolingPlace","component","props2","ICON_OPTIONS","hasNotif","plantRatio","r","PlantMap","currentPlantId","onPlantClick","drawerHeight","isSmallScreen","Map","center","zoom","zoomControl","ZoomControl","position","TileLayer","attribution","coords","Leaflet","GeoJSON","defaultProps","ConnectedPlantMap","MIN_DATE","toDate","MAX_DATE","endOf","DesktopDatePickerContainer","isOpen","setIsOpen","onDate","role","tabIndex","onKeyDown","open","disabledDate","current","showTime","minuteStep","secondStep","onOk","DatePicker","check","navigator","userAgent","vendor","opera","test","isMobileOrTablet","locale","okText","dismissText","DatePickerLocale","year","month","day","minute","onDismiss","minDate","maxDate","Loader","load","prevProps","prevOtherProps","omit","otherProps","equals","Component","buildLoader","loadFunction","PlantsLoader","dispatch","getPlants","catch","console","error","ReactorsLoader","getReactors","ProductionsLoader","getState","resolve","loadProductionsAction","getProductions","MixLoader","loadMixAction","getMix","UnavailabilitiesLoader","loadUnavailabilitiesAction","getUnavailabilities","RiversLoader","getRivers","AppLayout","isLoaded","currentLocation","isFullPage","spinning","indicator","visible","mask","closable","bodyStyle","padding","drawerStyle","transition","exact","MixView","PlantView","Header","mode","selectable","SubMenu","popupClassName","withRouter","matchPlantPath","matchPath","mixError","mixErrorSelector","prodError","productionsErrorSelector","unavailabilitiesError","unavailabilitiesErrorSelector","withSearch","tracker","ga","siteSpeedSampleRate","AnalyticsComponent","trackPage","set","pageview","withProps","tz","setDefault","App","Boolean","hostname","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister","ProductionType","PropTypes","shape","string","isRequired","updatedDate","number","PlantType","arrayOf","hasCoolingTower","bool","buildStartYear","gridLinkYear","MixType","biomass"],"mappings":"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","file":"static/js/main.c036d34b.chunk.js","sourcesContent":["/* eslint-disable */\n//Leaflet-SVGIcon\n//SVG icon for any marker class\n//Ilya Atkin\n//ilya.atkin@unh.edu\nimport Leaflet from 'leaflet';\n\nL.DivIcon.SVGIcon = L.DivIcon.extend({\n  options: {\n      \"circleText\": \"\",\n      \"className\": \"svg-icon\",\n      \"circleAnchor\": null, //defaults to [iconSize.x/2, iconSize.x/2]\n      \"circleColor\": null, //defaults to color\n      \"circleOpacity\": null, // defaults to opacity\n      \"circleFillColor\": \"rgb(255,255,255)\",\n      \"circleFillOpacity\": null, //default to opacity\n      \"circleRatio\": 0.5,\n      \"circleWeight\": null, //defaults to weight\n      \"color\": \"rgb(0,102,255)\",\n      \"fillColor\": null, // defaults to color\n      \"fillOpacity\": 0.4,\n      \"fontColor\": \"rgb(0, 0, 0)\",\n      \"fontOpacity\": \"1\",\n      \"fontSize\": null, // defaults to iconSize.x/4\n      \"fontWeight\": \"normal\",\n      \"iconAnchor\": null, //defaults to [iconSize.x/2, iconSize.y] (point tip)\n      \"iconSize\": L.point(32,48),\n      \"opacity\": 1,\n      \"popupAnchor\": null,\n      \"weight\": 2\n  },\n  initialize: function(options) {\n      options = L.Util.setOptions(this, options)\n\n      //iconSize needs to be converted to a Point object if it is not passed as one\n      options.iconSize = L.point(options.iconSize)\n\n      //in addition to setting option dependant defaults, Point-based options are converted to Point objects\n      if (!options.circleAnchor) {\n          options.circleAnchor = L.point(Number(options.iconSize.x)/2, Number(options.iconSize.x)/2)\n      }\n      else {\n          options.circleAnchor = L.point(options.circleAnchor)\n      }\n      if (!options.circleColor) {\n          options.circleColor = options.color\n      }\n      if (!options.circleFillOpacity) {\n          options.circleFillOpacity = options.opacity\n      }\n      if (!options.circleOpacity) {\n          options.circleOpacity = options.opacity\n      }\n      if (!options.circleWeight) {\n          options.circleWeight = options.weight\n      }\n      if (!options.fillColor) {\n          options.fillColor = options.color\n      }\n      if (!options.fontSize) {\n          options.fontSize = Number(options.iconSize.x/4)\n      }\n      if (!options.iconAnchor) {\n          options.iconAnchor = L.point(Number(options.iconSize.x)/2, Number(options.iconSize.y))\n      }\n      else {\n          options.iconAnchor = L.point(options.iconAnchor)\n      }\n      if (!options.popupAnchor) {\n          options.popupAnchor = L.point(0, (-0.75)*(options.iconSize.y))\n      }\n      else {\n          options.popupAnchor = L.point(options.popupAnchor)\n      }\n\n      options.html = this._createSVG()\n  },\n  _createCircle: function() {\n      var cx = Number(this.options.circleAnchor.x)\n      var cy = Number(this.options.circleAnchor.y)\n      var radius = this.options.iconSize.x/2 * Number(this.options.circleRatio)\n      var fill = this.options.circleFillColor\n      var fillOpacity = this.options.circleFillOpacity\n      var stroke = this.options.circleColor\n      var strokeOpacity = this.options.circleOpacity\n      var strokeWidth = this.options.circleWeight\n      var className = this.options.className + \"-circle\"\n\n      var circle = '<circle class=\"' + className + '\" cx=\"' + cx + '\" cy=\"' + cy + '\" r=\"' + radius +\n          '\" fill=\"' + fill + '\" fill-opacity=\"'+ fillOpacity +\n          '\" stroke=\"' + stroke + '\" stroke-opacity=' + strokeOpacity + '\" stroke-width=\"' + strokeWidth + '\"/>'\n\n      return circle\n  },\n  _createPathDescription: function() {\n      var height = Number(this.options.iconSize.y)\n      var width = Number(this.options.iconSize.x)\n      var weight = Number(this.options.weight)\n      var margin = weight / 2\n\n      var startPoint = \"M \" + margin + \" \" + (width/2) + \" \"\n      var leftLine = \"L \" + (width/2) + \" \" + (height - weight) + \" \"\n      var rightLine = \"L \" + (width - margin) + \" \" + (width/2) + \" \"\n      var arc = \"A \" + (width/4) + \" \" + (width/4) + \" 0 0 0 \" + margin + \" \" + (width/2) + \" Z\"\n\n      var d = startPoint + leftLine + rightLine + arc\n\n      return d\n  },\n  _createPath: function() {\n      var pathDescription = this._createPathDescription()\n      var strokeWidth = this.options.weight\n      var stroke = this.options.color\n      var strokeOpacity = this.options.opacity\n      var fill = this.options.fillColor\n      var fillOpacity = this.options.fillOpacity\n      var className = this.options.className + \"-path\"\n\n      var path = '<path class=\"' + className + '\" d=\"' + pathDescription +\n          '\" stroke-width=\"' + strokeWidth + '\" stroke=\"' + stroke + '\" stroke-opacity=\"' + strokeOpacity +\n          '\" fill=\"' + fill + '\" fill-opacity=\"' + fillOpacity + '\"/>'\n\n      return path\n  },\n  _createSVG: function() {\n      var path = this._createPath()\n      var circle = this._createCircle()\n      var text = this._createText()\n      var className = this.options.className + \"-svg\"\n\n      var style = \"width:\" + this.options.iconSize.x + \"px; height:\" + this.options.iconSize.y + \"px; \" + this.options.style;\n\n      var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" class=\"' + className + '\" style=\"' + style + '\">' + path + circle + text + '</svg>'\n\n      return svg\n  },\n  _createText: function() {\n      var fontSize = this.options.fontSize + \"px\"\n      var fontWeight = this.options.fontWeight\n      var lineHeight = Number(this.options.fontSize)\n\n      var x = this.options.circleAnchor.x\n      var y = this.options.circleAnchor.y + (lineHeight * 0.35) //35% was found experimentally\n      var circleText = this.options.circleText\n      var textColor = this.options.fontColor.replace(\"rgb(\", \"rgba(\").replace(\")\", \",\" + this.options.fontOpacity + \")\")\n\n      var text = '<text text-anchor=\"middle\" x=\"' + x + '\" y=\"' + y + '\" style=\"font-size: ' + fontSize + '; font-weight: ' + fontWeight +'\" fill=\"' + textColor + '\">' + circleText + '</text>'\n\n      return text\n  }\n})\n\nL.divIcon.svgIcon = function(options) {\n  return new L.DivIcon.SVGIcon(options)\n}\n\nL.Marker.SVGMarker = L.Marker.extend({\n  options: {\n      \"iconFactory\": L.divIcon.svgIcon,\n      \"iconOptions\": {}\n  },\n  initialize: function(latlng, options) {\n      options = L.Util.setOptions(this, options)\n      options.icon = options.iconFactory(options.iconOptions)\n      this._latlng = latlng\n  },\n  onAdd: function(map) {\n      L.Marker.prototype.onAdd.call(this, map)\n  },\n  setStyle: function(style) {\n      if (this._icon) {\n          var svg = this._icon.children[0]\n          var iconBody = this._icon.children[0].children[0]\n          var iconCircle = this._icon.children[0].children[1]\n\n          if (style.color && !style.iconOptions) {\n              var stroke = style.color.replace(\"rgb\",\"rgba\").replace(\")\", \",\"+this.options.icon.options.opacity+\")\")\n              var fill = style.color.replace(\"rgb\",\"rgba\").replace(\")\", \",\"+this.options.icon.options.fillOpacity+\")\")\n              iconBody.setAttribute(\"stroke\", stroke)\n              iconBody.setAttribute(\"fill\", fill)\n              iconCircle.setAttribute(\"stroke\", stroke)\n\n              this.options.icon.fillColor = fill\n              this.options.icon.color = stroke\n              this.options.icon.circleColor = stroke\n          }\n          if (style.opacity) {\n              this.setOpacity(style.opacity)\n          }\n          if (style.iconOptions) {\n              if (style.color) { style.iconOptions.color = style.color }\n              var iconOptions = L.Util.setOptions(this.options.icon, style.iconOptions)\n              this.setIcon(L.divIcon.svgIcon(iconOptions))\n          }\n      }\n  }\n})\n\nL.marker.svgMarker = function(latlng, options) {\n  return new L.Marker.SVGMarker(latlng, options)\n}\n\nL.DivIcon.SVGIcon.IndicatorIcon = L.DivIcon.SVGIcon.extend({\n  _createCircle() {\n      const circle = L.DivIcon.SVGIcon.prototype._createCircle.call(this);\n\n      const cx = Number(this.options.circleAnchor.x)\n      const cy = Number(this.options.circleAnchor.y)\n      const radius = this.options.iconSize.x / 2 * Number(this.options.circleRatio)\n\n      const circum = Math.PI * radius;\n      const pieSize = this.options.loadRate * circum;\n\n      const notif = `<circle r=\"3\" cx=\"${5}\" cy=\"${5}\"\n        style=\"\n          fill: red;\n          stroke: none;\n        \"\n      >\n      </circle>`\n\n      const pie = `\n        <circle r=\"${radius / 2}\" cx=\"${cx}\" cy=\"${cy}\"\n          style=\"\n            transform: rotateZ(-90deg);\n            transform-origin: ${cx}px ${cy}px;\n            fill: none;\n            stroke-width: ${radius};\n            stroke: rgb(38, 166, 91);\n            stroke-dasharray: ${pieSize} ${circum};\n            \"\n        >\n        </circle>`;\n\n      return this.options.notif ? circle + pie + notif : circle + pie;\n  },\n\n  _createSVG: function() {\n    var path = this._createPath()\n    var circle = this._createCircle()\n    var text = this._createText()\n    var className = this.options.className + \"-svg\"\n\n    var style = \"width:\" + this.options.iconSize.x + \"px; height:\" + this.options.iconSize.y + \"px;\";\n\n    var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" class=\"' + className + '\" style=\"' + style + '\">' + path + circle + text + '</svg>'\n\n    return svg\n},\n});\n","import { map } from 'ramda';\nimport qs from 'qs';\n\nconst { REACT_APP_NUCLEAR_MONITOR_API } = process.env;\n\nasync function doFetch(...args) {\n  const res = await fetch(...args);\n\n  if (!res.ok) {\n    throw new Error('Fetch error');\n  }\n  return res;\n}\n\nexport async function getRivers() {\n  return Promise.all(\n    ['garonne', 'loire', 'meuse', 'moselle', 'rhin', 'rhone', 'seine'].map(\n      river =>\n        fetch(`./rivers/${river}.json`)\n          .then(res => res.json())\n          .then(res => ({ ...res, name: river })),\n    ),\n  );\n}\n\nexport async function getPlants() {\n  const res = await doFetch(`${REACT_APP_NUCLEAR_MONITOR_API}/plants`);\n  const data = await res.json();\n\n  return data;\n}\n\nexport async function getReactors() {\n  const res = await doFetch(`${REACT_APP_NUCLEAR_MONITOR_API}/reactors`);\n  const data = await res.json();\n\n  return data;\n}\n\nexport async function getProductions({ date }) {\n  const res = await doFetch(\n    `${REACT_APP_NUCLEAR_MONITOR_API}/productions?${qs.stringify({ date })}`,\n  );\n  const data = await res.json();\n\n  return data;\n}\n\nexport async function getUnavailabilities({ date }) {\n  const res = await doFetch(\n    `${REACT_APP_NUCLEAR_MONITOR_API}/unavailabilities?${qs.stringify({\n      date,\n    })}`,\n  );\n  const data = await res.json();\n\n  return data;\n}\n\nexport async function getMix({ date }) {\n  const res = await doFetch(\n    `${REACT_APP_NUCLEAR_MONITOR_API}/mix?${qs.stringify({ date })}`,\n  );\n  const data = await res.json();\n\n  const { mix } = data;\n  if (mix.length < 1) {\n    return [];\n  }\n\n  const rest = Array.from({ length: 25 * 4 - mix.length }).map(() =>\n    map(() => NaN, mix[0]),\n  );\n\n  return {\n    date: data.date,\n    mix: mix.concat(rest),\n  };\n}\n","import { values, indexBy, prop } from 'ramda';\nimport moment from 'moment';\n\nimport { getProductions } from '../api';\n\nexport const PRODUCTIONS_LOAD_ACTION = 'PRODUCTIONS_LOAD_ACTION';\nexport const PRODUCTIONS_RECEIVE_ACTION = 'PRODUCTIONS_RECEIVE_ACTION';\n\nfunction loadProductionsAction({ date }) {\n  return { type: PRODUCTIONS_LOAD_ACTION, date };\n}\n\nfunction receiveProductionsAction({ date, data, errors }) {\n  return { type: PRODUCTIONS_RECEIVE_ACTION, date, data, errors };\n}\n\nconst initialState = {};\nfunction productionsReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case PRODUCTIONS_LOAD_ACTION:\n      return {\n        ...state,\n        [action.date]: {\n          loading: true,\n          loaded: false,\n          errors: null,\n          data: {},\n        },\n      };\n    case PRODUCTIONS_RECEIVE_ACTION:\n      return {\n        ...state,\n        [action.date]: {\n          loading: false,\n          loaded: !action.errors,\n          errors: action.errors || null,\n          data: indexBy(prop('eicCode'), action.data.productions),\n        },\n      };\n    default:\n      return state;\n  }\n}\n\nexport function productionsLoadedSelector({ date: inputDate }, state) {\n  const date = moment(inputDate).format('YYYY-MM-DD');\n  return state.productions[date] && state.productions[date].loaded;\n}\n\nexport function productionsErrorSelector({ date: inputDate }, state) {\n  const date = moment(inputDate).format('YYYY-MM-DD');\n  return state.productions[date] && state.productions[date].errors;\n}\n\nexport function productionsSelector({ date: inputDate }, state) {\n  const date = moment(inputDate).format('YYYY-MM-DD');\n  return state.productions[date] && values(state.productions[date].data);\n}\n\nexport function productionSelector({ date: inputDate, eicCode }, state) {\n  const date = moment(inputDate).format('YYYY-MM-DD');\n\n  if (state.productions[date] && state.productions[date].data[eicCode]) {\n    const data = state.productions[date].data[eicCode].values;\n\n    const endOfDay = Array.from({\n      length: 24 - data.length + 1,\n    }).map(() => ({ value: null }));\n    return data.map(d => ({ value: Math.max(d.value, 0) })).concat(endOfDay);\n  }\n  return null;\n}\n\nexport function loadAllProductions({ date: inputDate }) {\n  const date = moment(inputDate).format('YYYY-MM-DD');\n  return function dispatchLoadAllProductions(dispatch, getState) {\n    if (productionsLoadedSelector({ date }, getState())) {\n      return Promise.resolve();\n    }\n\n    dispatch(loadProductionsAction({ date }));\n    return getProductions({ date })\n      .then(data =>\n        dispatch(\n          receiveProductionsAction({\n            date,\n            data,\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) ||\n          dispatch(receiveProductionsAction({ date, errors })),\n      );\n  };\n}\n\nexport default productionsReducer;\n","import { values, indexBy, prop } from 'ramda';\n\nimport moment from 'moment';\nimport { getUnavailabilities } from '../api';\n\nexport const UNAVAILABILITIES_LOAD_ACTION = 'UNAVAILABILITIES_LOAD_ACTION';\nexport const UNAVAILABILITIES_RECEIVE_ACTION =\n  'UNAVAILABILITIES_RECEIVE_ACTION';\n\nfunction loadUnavailabilitiesAction({ date }) {\n  return { type: UNAVAILABILITIES_LOAD_ACTION, date };\n}\n\nfunction receiveUnavailabilitiesAction({ date, data, errors }) {\n  return { type: UNAVAILABILITIES_RECEIVE_ACTION, date, data, errors };\n}\n\nconst initialState = {};\nfunction unavailabilitiesReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case UNAVAILABILITIES_LOAD_ACTION:\n      return {\n        ...state,\n        [action.date]: {\n          loading: true,\n          loaded: true,\n          errors: null,\n          data: {},\n        },\n      };\n    case UNAVAILABILITIES_RECEIVE_ACTION:\n      return {\n        ...state,\n        [action.date]: {\n          loading: false,\n          loaded: !action.errors,\n          errors: action.errors || null,\n          data: indexBy(prop('eicCode'), action.data),\n        },\n      };\n    default:\n      return state;\n  }\n}\n\nexport function unavailabilitiesLoadedSelector({ date: inputDate }, state) {\n  const date = moment(inputDate).format('YYYY-MM-DD');\n  return state.unavailabilities[date] && state.unavailabilities[date].loaded;\n}\n\nexport function unavailabilitiesErrorSelector({ date: inputDate }, state) {\n  const date = moment(inputDate).format('YYYY-MM-DD');\n  return state.unavailabilities[date] && state.unavailabilities[date].errors;\n}\n\nexport function unavailabilitiesSelector({ date: inputDate }, state) {\n  const date = moment(inputDate).format('YYYY-MM-DD');\n  return values(state.unavailabilities[date].data);\n}\n\nexport function unavalabilitySelector({ date: inputDate, eicCode }, state) {\n  const date = moment(inputDate).format('YYYY-MM-DD');\n  return (\n    state.unavailabilities[date] && state.unavailabilities[date].data[eicCode]\n  );\n}\n\nexport function loadAllUnavailabilities({ date: inputDate }) {\n  const date = moment(inputDate).format('YYYY-MM-DD');\n  return function dispatchLoadAllUnavailabilities(dispatch, getState) {\n    if (unavailabilitiesLoadedSelector({ date }, getState())) {\n      return Promise.resolve();\n    }\n\n    dispatch(loadUnavailabilitiesAction({ date }));\n    return getUnavailabilities({ date })\n      .then(data =>\n        dispatch(\n          receiveUnavailabilitiesAction({\n            date,\n            data,\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) ||\n          dispatch(receiveUnavailabilitiesAction({ date, errors })),\n      );\n  };\n}\n\nexport default unavailabilitiesReducer;\n","import { values, indexBy, prop, sortBy } from 'ramda';\nimport moment from 'moment';\n\nimport { getReactors } from '../api';\n\nimport { productionSelector } from './productions';\nimport { unavalabilitySelector } from './unavailabilities';\n\nexport const REACTORS_LOAD_ACTION = 'REACTORS_LOAD_ACTION';\nexport const REACTORS_RECEIVE_ACTION = 'REACTORS_RECEIVE_ACTION';\n\nfunction loadReactorsAction() {\n  return { type: REACTORS_LOAD_ACTION };\n}\n\nfunction receiveReactorsAction({ data, errors }) {\n  return { type: REACTORS_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllReactors() {\n  return function dispatchLoadAllReactors(dispatch) {\n    dispatch(loadReactorsAction());\n    return getReactors()\n      .then(data =>\n        dispatch(\n          receiveReactorsAction({\n            data: indexBy(prop('eicCode'), data),\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) || dispatch(receiveReactorsAction({ errors })),\n      );\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction reactorsReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case REACTORS_LOAD_ACTION:\n      return { ...state, loading: true };\n    case REACTORS_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function reactorsLoadedSelector(state) {\n  return state.reactors.loaded;\n}\n\nfunction getStatus(unavailability) {\n  if (unavailability) {\n    if (unavailability.type === 'PLANNED_MAINTENANCE') {\n      if (unavailability.availablePower_MW === 0) {\n        return 'PLANNED_STOP';\n      }\n      return 'PLANNED_REDUCTION';\n    }\n    if (unavailability.availablePower_MW === 0) {\n      return 'AUTO_STOP';\n    }\n    return 'UNPLANNED_REDUCTION';\n  }\n  return 'RUNNING';\n}\n\nexport function reactorSelector({ eicCode, date }, state) {\n  const reactor = state.reactors.data[eicCode];\n  const dayProductions = productionSelector({ eicCode, date }, state);\n  const unavailability = unavalabilitySelector({ eicCode, date }, state);\n\n  return {\n    ...reactor,\n    status: getStatus(unavailability),\n    dayProductions,\n    unavailability,\n  };\n}\n\nexport function reactorsSelector({ date }, state) {\n  return values(state.reactors.data).map(reactor =>\n    reactorSelector({ eicCode: reactor.eicCode, date }, state),\n  );\n}\n\nexport function reactorsOfPlantSelector({ plantId, date }, state) {\n  const reactors = Object.values(state.reactors.data)\n    .filter(reactor => reactor.plantId === plantId)\n    .map(reactor => reactorSelector({ eicCode: reactor.eicCode, date }, state));\n\n  return sortBy(prop('reactorIndex'), reactors);\n}\n\nconst INIT_DATA = {\n  availablePower: 0,\n  totalPower: 0,\n  availableCount: 0,\n  partiallyUnavailableCount: 0,\n  totallyUnavailableCount: 0,\n};\nexport function reactorSetIndicatorsSelector(\n  { date: dateString, slotIndex },\n  state,\n) {\n  const date = moment(dateString)\n    .startOf('day')\n    .add(slotIndex * 15, 'minutes');\n  const reactors = reactorsSelector({ date: dateString }, state);\n\n  return reactors.reduce((res, reactor) => {\n    const res2 = {\n      availablePower: 0,\n      availableCount: 0,\n      partially: 0,\n      totally: 0,\n    };\n\n    if (\n      reactor.unavailability &&\n      date.isAfter(reactor.unavailability.startDate) &&\n      date.isBefore(reactor.unavailability.endDate)\n    ) {\n      if (reactor.unavailability.availablePower_MW === 0) {\n        res2.totally = 1;\n      } else {\n        res2.availableCount = 1;\n        res2.partially = 1;\n      }\n      res2.availablePower = reactor.unavailability.availablePower_MW;\n    } else {\n      res2.availableCount = 1;\n      res2.availablePower = reactor.power_MW;\n    }\n\n    return {\n      totalPower: res.totalPower + reactor.power_MW,\n      availablePower: res.availablePower + res2.availablePower,\n      availableCount: res.availableCount + res2.availableCount,\n      totallyUnavailableCount: res.totallyUnavailableCount + res2.totally,\n      partiallyUnavailableCount: res.partiallyUnavailableCount + res2.partially,\n    };\n  }, INIT_DATA);\n}\n\nexport function reactorByPlantAndIndexSelector(\n  { plantId, reactorIndex, date },\n  state,\n) {\n  const reacto = Object.values(state.reactors.data).find(\n    reactor =>\n      reactor.plantId === plantId && reactor.reactorIndex === reactorIndex,\n  );\n  return reacto && reactorSelector({ eicCode: reacto.eicCode, date }, state);\n}\n\nexport function reactorsOfPlant(plantId, state) {\n  return Object.values(state.reactors.data)\n    .filter(r => r.plantId === plantId)\n    .map(r => reactorSelector(r.eicCode, state));\n}\n\nexport default reactorsReducer;\n","import { values, indexBy, prop } from 'ramda';\n\nimport { getPlants } from '../api';\n\nimport { reactorsOfPlantSelector } from './reactors';\n\nexport const PLANTS_LOAD_ACTION = 'PLANTS_LOAD_ACTION';\nexport const PLANTS_RECEIVE_ACTION = 'PLANTS_RECEIVE_ACTION';\n\nfunction loadPlantsAction() {\n  return { type: PLANTS_LOAD_ACTION };\n}\n\nfunction receivePlantsAction({ data, errors }) {\n  return { type: PLANTS_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllPlants() {\n  return function dispatchLoadAllPlants(dispatch) {\n    dispatch(loadPlantsAction());\n    return getPlants()\n      .then(data =>\n        dispatch(\n          receivePlantsAction({\n            data: indexBy(prop('id'), data),\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) || dispatch(receivePlantsAction({ errors })),\n      );\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction plantsReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case PLANTS_LOAD_ACTION:\n      return { ...state, loading: true };\n    case PLANTS_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function plantsLoadedSelector(state) {\n  return state.plants.loaded;\n}\n\nexport function plantSelector({ plantId, date }, state) {\n  return {\n    ...state.plants.data[plantId],\n    reactors: reactorsOfPlantSelector({ plantId, date }, state),\n  };\n}\n\nexport function plantsSelector({ date }, state) {\n  return values(state.plants.data).map(plant =>\n    plantSelector({ plantId: plant.id, date }, state),\n  );\n}\n\nexport default plantsReducer;\n","import moment from 'moment';\n\nimport { getMix } from '../api';\n\nexport const MIX_LOAD_ACTION = 'MIX_LOAD_ACTION';\nexport const MIX_RECEIVE_ACTION = 'MIX_RECEIVE_ACTION';\n\nfunction loadMixAction({ date }) {\n  return { type: MIX_LOAD_ACTION, date };\n}\n\nfunction receiveMixAction({ date, data, errors }) {\n  return { type: MIX_RECEIVE_ACTION, date, data, errors };\n}\n\nconst initialState = {};\nfunction mixReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case MIX_LOAD_ACTION:\n      return {\n        ...state,\n        [action.date]: {\n          loading: true,\n          loaded: false,\n          errors: null,\n          data: {},\n        },\n      };\n    case MIX_RECEIVE_ACTION:\n      return {\n        ...state,\n        [action.date]: {\n          loading: false,\n          loaded: !action.errors,\n          errors: action.errors || null,\n          data: action.data.mix,\n        },\n      };\n    default:\n      return state;\n  }\n}\n\nexport function mixLoadedSelector({ date: inputDate }, state) {\n  const date = moment(inputDate).format('YYYY-MM-DD');\n  return state.mix[date] && state.mix[date].loaded;\n}\n\nexport function mixErrorSelector({ date: inputDate }, state) {\n  const date = moment(inputDate).format('YYYY-MM-DD');\n  return state.mix[date] && state.mix[date].errors;\n}\n\nexport function mixSelector({ date: inputDate }, state) {\n  const date = moment(inputDate).format('YYYY-MM-DD');\n  return state.mix[date] && state.mix[date].data;\n}\n\nexport function loadAllMix({ date: inputDate }) {\n  const date = moment(inputDate).format('YYYY-MM-DD');\n  return function dispatchLoadAllMix(dispatch, getState) {\n    if (mixLoadedSelector({ date }, getState())) {\n      return Promise.resolve();\n    }\n\n    dispatch(loadMixAction({ date }));\n    return getMix({ date })\n      .then(data =>\n        dispatch(\n          receiveMixAction({\n            date,\n            data,\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) || dispatch(receiveMixAction({ date, errors })),\n      );\n  };\n}\n\nexport default mixReducer;\n","import { getRivers } from '../api';\n\nexport const RIVERS_LOAD_ACTION = 'RIVERS_LOAD_ACTION';\nexport const RIVERS_RECEIVE_ACTION = 'RIVERS_RECEIVE_ACTION';\n\nfunction loadRiversAction() {\n  return { type: RIVERS_LOAD_ACTION };\n}\n\nfunction receiveRiversAction({ data, errors }) {\n  return { type: RIVERS_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllRivers() {\n  return function dispatchLoadAllRivers(dispatch) {\n    dispatch(loadRiversAction());\n    return getRivers()\n      .then(data =>\n        dispatch(\n          receiveRiversAction({\n            data,\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) || dispatch(receiveRiversAction({ errors })),\n      );\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction riversReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case RIVERS_LOAD_ACTION:\n      return { ...state, loading: true };\n    case RIVERS_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function riversLoadedSelector(state) {\n  return state.rivers.loaded;\n}\n\nexport function riversSelector(state) {\n  return state.rivers.data;\n}\n\nexport default riversReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport plantsReducer from './plants';\nimport reactorsReducer from './reactors';\nimport productionsReducer from './productions';\nimport mixReducer from './mix';\nimport unavailabilitiesReducer from './unavailabilities';\nimport riversReducer from './rivers';\n\nconst rootReducer = combineReducers({\n  // ...reducers,\n  plants: plantsReducer,\n  reactors: reactorsReducer,\n  productions: productionsReducer,\n  mix: mixReducer,\n  unavailabilities: unavailabilitiesReducer,\n  rivers: riversReducer,\n});\n\nconst enhancers = [applyMiddleware(thunk)];\nconst composeEnhancers = composeWithDevTools({\n  // actionSanitizer,\n  // stateSanitizer,\n});\nconst enhancer = composeEnhancers(...enhancers);\n\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link as RouterLink } from 'react-router-dom';\n\nfunction Link({ to, children }) {\n  return (\n    <RouterLink to={location => ({ pathname: to, search: location.search })}>\n      {children}\n    </RouterLink>\n  );\n}\n\nLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n};\n\nexport default Link;\n","import React from 'react';\n\nimport { Typography } from 'antd';\nimport Link from '../../components/Link';\n\nconst { Title } = Typography;\n\nfunction HomeView() {\n  return (\n    <div className=\"HomeView\">\n      <Title level={2}>Bienvenue</Title>\n      <div>\n        <strong>Nuclear monitor</strong>\n        {' vous permet de consulter:'}\n        <ul>\n          <li>\n            {'le '}\n            <Link to=\"/mix\">mix</Link>\n            {\" de production d'électricité\"}\n          </li>\n          <li>\n            {\"l'état d'une \"}\n            <Link to=\"/plant/GRAVELINES\">centrale</Link>\n            {\" ou d'un \"}\n            <Link to=\"/plant/BLAYAIS/3\">réacteur</Link>\n          </li>\n        </ul>\n      </div>\n      <div className=\"HomeView__marker\">\n        Cliquer sur une centrale pour en savoir plus...\n      </div>\n    </div>\n  );\n}\n\nexport default HomeView;\n","import React from 'react';\n\nimport { Comment, Avatar, Icon, Collapse } from 'antd';\n\nimport './index.css';\n\nfunction Content() {\n  return (\n    <div>\n      <p>\n        {'Ce site est open-source, vous pouvez consulter son code source ici: '}\n        <br />\n        <a\n          href=\"https://github.com/ewoken/nuclear-monitor\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon type=\"github\" />\n          {' nuclear-monitor'}\n        </a>\n      </p>\n\n      <p>\n        {\n          \"N'hésitez pas à me remontez des bugs ou suggestions sur Github ou Twitter:\"\n        }\n        <br />\n        <a\n          href=\"https://twitter.com/Yugnat95\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon type=\"twitter\" />\n          {' @Yugnat95'}\n        </a>\n      </p>\n    </div>\n  );\n}\n\nfunction AboutView() {\n  return (\n    <div className=\"AboutView\">\n      <h2>À propos</h2>\n      <div>\n        <Comment\n          avatar={\n            // eslint-disable-next-line react/jsx-wrap-multilines\n            <a\n              href=\"https://github.com/ewoken\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Avatar src=\"https://avatars3.githubusercontent.com/u/8919530?s=460&v=4\" />\n            </a>\n          }\n          // author={<a href=\"https://github.com/ewoken\">Ewoken</a>}\n          content={<Content />}\n        />\n      </div>\n      <h2>Foire aux questions</h2>\n      <Collapse accordion bordered={false}>\n        <Collapse.Panel\n          header=\"Comment fonctionne un réacteur nucléaire ?\"\n          key=\"1\"\n        >\n          Explication en moins de 3 min:\n          <iframe\n            title=\"Youtube\"\n            width=\"100%\"\n            src=\"https://www.youtube.com/embed/I09DhTubNqE\"\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          />\n          {`Si vous voulez plus de détails, nous vous recommendons d'aller regarder les épisodes dédiés de `}\n          <a href=\"https://www.youtube.com/channel/UC1EacOJoqsKaYxaDomTCTEQ\">\n            {'Le Réveilleur '}\n            <Icon type=\"youtube\" />\n          </a>\n          {' sur Youtube'}\n        </Collapse.Panel>\n        <Collapse.Panel\n          header=\"Pourquoi un réacteur est-il à l’arrêt ?\"\n          key=\"2\"\n        >\n          {\"Un réacteur peut être à l'arrêt pour différentes raisons:\"}\n          <ul>\n            <li>\n              le rechargement d&apos;une partie du combustible, nécessaire tous\n              les 12 à 18 mois;\n            </li>\n            <li>\n              {`une maintenance a été prévue et nécessite l'arrêt du réacteur lors d'une période de faible consommation;`}\n            </li>\n            <li>un incident ou une défaillance est survenue.</li>\n          </ul>\n        </Collapse.Panel>\n        <Collapse.Panel\n          header=\"Pourquoi certains réacteurs ne tournent pas à puissance maximale ?\"\n          key=\"3\"\n        >\n          {\n            'Un réacteur peut fonctionner à puissance réduite pour différentes raisons:'\n          }\n          <ul>\n            <li>\n              la consommation ne nécessite pas toute la puissance du réacteur\n            </li>\n            <li>\n              une maintenance ne nécessitant pas l&apos;arrêt du réacteur est en\n              cours.\n            </li>\n          </ul>\n        </Collapse.Panel>\n        <Collapse.Panel header=\"Pourquoi cette application ?\" key=\"4\">\n          Cette application a pour but de matérialiser et rendre accessible les\n          informations disponibles sur l&apos;ensemble du parc électro-nucléaire\n          français.\n        </Collapse.Panel>\n        <Collapse.Panel header=\"Quelles sont les sources de données ?\" key=\"5\">\n          {\n            \"Les données de disponibilités, de production et de consommation sont disponibles gratuitement via l'API de \"\n          }\n          <a href=\"https://data.rte-france.com/\">RTE</a>\n        </Collapse.Panel>\n        <Collapse.Panel\n          header=\"Comment est calculé le facteur d’émission de GES de la production électrique \"\n          key=\"6\"\n        >\n          {\n            \"Le facteur d'émission de la production électrique est calculé à partir du facteur d'émissions en cycle de vie de chaque type de production. La source principalement utilisée est l'\"\n          }\n          <a href=\"http://www.bilans-ges.ademe.fr/\">ADEME</a>\n          {' mais aussi le '}\n          <a href=\"https://www.ipcc.ch/site/assets/uploads/2018/02/ipcc_wg3_ar5_annex-iii.pdf\">\n            GIEC (p. 1335)\n          </a>\n          {\" pour le facteur d'émission des bioénergies.\"}\n          <br />\n          {\n            'Enfin, les imports sont moyennés à 400 gCO₂eq/kWh (moyenne européenne)'\n          }\n        </Collapse.Panel>\n        <Collapse.Panel\n          header=\"Pourquoi certaines centrales ont des aéroréfrigérants et d’autres pas ?\"\n          key=\"7\"\n        >\n          Certaines centrales, comme celles en bord de mer (mais pas que), sont\n          refroidis en cycle ouvert, l&apos;eau utilisée est rejetée directement\n          dans l&apos;environnement.\n          <br />\n          D&apos;autres fonctionnent en cycle fermé, c&apos;est à dire que\n          l&apos;eau utilisée est refroidie dans les aéroréfrigérants (et une\n          partie s&apos;évapore) puis est réutilisée. Cela permet de réduire\n          l&apos;eau prélevée dans l&apos;environnement (les fleuves).\n        </Collapse.Panel>\n        <Collapse.Panel\n          header=\"Comment la puissance d’un réacteur peut-elle être supérieure à sa puissance nominale ?\"\n          key=\"8\"\n        >\n          Un réacteur a pleine puissance peut parfois produire plus\n          d&apos;électricité que sa puissance nominale. En effet, lorsque la\n          source de refroidissement de la centrale est plus froide que prévue,\n          le rendement thermodynamique est amélioré faisant gagner un peu de\n          puissance.\n          <br />\n          Une autre possibilité est que la consommation interne de la centrale\n          est réduite, ce qui augmente l&apos;électricité distribuée en sortie\n          de la centrale.\n        </Collapse.Panel>\n      </Collapse>\n    </div>\n  );\n}\n\nexport default AboutView;\n","// eslint-disable-next-line import/prefer-default-export\nexport function testScreenType(size) {\n  const windowWidth = window.innerWidth;\n\n  switch (size) {\n    case 'xs':\n      return windowWidth < 576;\n    case 'sm':\n      return windowWidth >= 576;\n    case 'md':\n      return windowWidth >= 768;\n    case 'lg':\n      return windowWidth >= 992;\n    case 'xl':\n      return windowWidth >= 1200;\n    case 'xxl':\n      return windowWidth >= 1600;\n    default:\n      return false;\n  }\n}\n\nexport function isMobileOrTablet() {\n  let check = false;\n  (function test(a) {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(\n        a,\n      ) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(\n        a.substr(0, 4),\n      )\n    ) {\n      check = true;\n    }\n  })(navigator.userAgent || navigator.vendor || window.opera);\n  return check;\n}\n\nexport function getWindowHeight() {\n  const { body } = document;\n  const html = document.documentElement;\n  return Math.max(\n    body.scrollHeight,\n    body.offsetHeight,\n    html.clientHeight,\n    html.scrollHeight,\n    html.offsetHeight,\n  );\n}\n\nexport function format(v) {\n  // eslint-disable-next-line no-restricted-globals\n  return isNaN(v) ? '-' : `${v}`;\n}\n\nexport const HEADER_HEIGHT = 64;\nexport const DRAWER_WIDTH = 400;\n","import moment from 'moment-timezone';\nimport qs from 'qs';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function getCurrentDate(location) {\n  return (\n    qs.parse(location.search.substr(1)).date ||\n    moment()\n      .startOf('hour')\n      .toISOString()\n  );\n}\n","export const META = {\n  hydroPumped: {\n    label: 'POMPAGE',\n    color: '#114774',\n    stackId: '2',\n  },\n  bioenergy: {\n    label: 'BIOENERG.',\n    color: '#166a57',\n  },\n  wind: {\n    label: 'EOLIEN',\n    color: '#74cdb9',\n  },\n  solar: {\n    label: 'SOLAIRE',\n    color: '#f27406',\n  },\n  nuclear: {\n    label: 'NUCLEAIRE',\n    color: '#f5b300',\n  },\n  hydro: {\n    label: 'HYDRAU.',\n    color: '#2772b2',\n  },\n  gas: {\n    label: 'GAS',\n    color: '#f30a0a',\n  },\n  coal: {\n    label: 'CHARBON',\n    color: '#ac8c35',\n  },\n  oil: {\n    label: 'FIOUL',\n    color: '#8356a2',\n  },\n  exports: {\n    label: 'EXPORTS',\n    color: '#969696',\n    stackId: '2',\n  },\n  imports: {\n    label: 'IMPORTS',\n    color: '#969696',\n  },\n};\n\nexport const GRAPH_ORDER = [\n  'hydroPumped',\n  'exports',\n  'bioenergy',\n  'nuclear',\n  'hydro',\n  'gas',\n  'coal',\n  'oil',\n  'wind',\n  'solar',\n  'imports',\n];\n\nexport const HEADER_ORDER = [\n  'oil',\n  'coal',\n  'gas',\n  'hydro',\n  'nuclear',\n  'solar',\n  'wind',\n  'bioenergy',\n  'hydroPumped',\n];\n\nexport const EMISSION_FACTORS = {\n  bioenergy: 230,\n  nuclear: 6,\n  hydro: 6,\n  gas: 418,\n  coal: 1060,\n  oil: 730,\n  wind: 14.1,\n  solar: 55,\n  imports: 400,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport debounce from 'lodash.debounce';\nimport moment from 'moment';\n\nimport { Slider } from 'antd';\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  Line,\n  ReferenceLine,\n  YAxis,\n  Area,\n} from 'recharts';\n\nimport { MixType } from '../../../utils/types';\n\nimport { META, HEADER_ORDER, GRAPH_ORDER, EMISSION_FACTORS } from './config';\n\nfunction format(v) {\n  // eslint-disable-next-line no-restricted-globals\n  return isNaN(v) ? '-' : `${v}`;\n}\n\nfunction computeCo2(mix) {\n  const a = Object.keys(EMISSION_FACTORS).reduce(\n    (sum, key) => ({\n      e: sum.e + mix[key] * EMISSION_FACTORS[key],\n      total: sum.total + mix[key],\n    }),\n    {\n      e: 0,\n      total: 0,\n    },\n  );\n  return a.e / a.total;\n}\n\nfunction MixComponent({ mix, slotIndex, setSlotIndex, currentDate }) {\n  return (\n    <div className=\"MixComponent\">\n      <div className=\"MixComponent__header\">\n        {HEADER_ORDER.map(key => (\n          <div\n            key={key}\n            className=\"MixComponent__header__item\"\n            style={{\n              backgroundColor: META[key].color,\n            }}\n          >\n            {format(Math.abs(mix[slotIndex][key]))}\n            <span className=\"MixComponent__header__item__small\"> MW</span>\n            <br />\n            <span className=\"MixComponent__header__item__small\">\n              {META[key].label}\n            </span>\n          </div>\n        ))}\n        <div\n          className=\"MixComponent__header__item\"\n          style={{\n            backgroundColor: META.imports.color,\n          }}\n        >\n          {format(Math.max(mix[slotIndex].imports, -mix[slotIndex].exports))}\n          <span className=\"MixComponent__header__item__small\"> MW</span>\n          <br />\n          <span className=\"MixComponent__header__item__small\">\n            {mix[slotIndex].exports < 0\n              ? META.exports.label\n              : META.imports.label}\n          </span>\n        </div>\n        {/* <div className=\"MixComponent__header__item\" /> */}\n        <div\n          className=\"MixComponent__header__item\"\n          style={{ backgroundColor: 'black' }}\n        >\n          {format(mix[slotIndex].consumption)}\n          <span className=\"MixComponent__header__item__small\"> MW</span>\n          <br />\n          <span className=\"MixComponent__header__item__small\">CONSO</span>\n        </div>\n        <div className=\"MixComponent__header__item\" style={{ color: 'black' }}>\n          {format(Math.ceil(computeCo2(mix[slotIndex])))}\n          <br />\n          <span className=\"MixComponent__header__item__small\">gCO₂eq/kWh</span>\n          {/* <br />\n          <span className=\"MixComponent__header__item__small\">EMISSIONS</span> */}\n        </div>\n      </div>\n\n      <div className=\"MixComponent__chart\">\n        <ResponsiveContainer>\n          <ComposedChart data={mix}>\n            <YAxis axisLine mirror />\n            {GRAPH_ORDER.map(key => (\n              <Area\n                key={key}\n                dataKey={key}\n                type=\"monotone\"\n                activeDot={false}\n                stroke=\"none\"\n                fill={META[key].color}\n                stackId={META[key].stackId || '1'}\n              />\n            ))}\n            <Line\n              dataKey=\"consumption\"\n              dot={false}\n              activeDot={false}\n              type=\"monotone\"\n              stroke=\"black\"\n            />\n            <ReferenceLine x={slotIndex} stroke=\"#4b4e52\" />\n          </ComposedChart>\n        </ResponsiveContainer>\n      </div>\n      <div className=\"MixComponent__sliderContainer\">\n        <Slider\n          min={0}\n          max={96}\n          style={{ width: '100%' }}\n          defaultValue={slotIndex}\n          // value={slotIndex}\n          onChange={debounce(setSlotIndex, 400)}\n          tipFormatter={\n            value =>\n              moment(currentDate)\n                .startOf('day')\n                .add(value * 15, 'minutes')\n                .format('HH:mm')\n            // eslint-disable-next-line react/jsx-curly-newline\n          }\n        />\n      </div>\n    </div>\n  );\n}\n\nMixComponent.propTypes = {\n  mix: PropTypes.arrayOf(MixType).isRequired,\n  slotIndex: PropTypes.number.isRequired,\n  setSlotIndex: PropTypes.func.isRequired,\n  currentDate: PropTypes.string.isRequired,\n};\n\nexport default MixComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withState, compose } from 'recompose';\nimport qs from 'qs';\n\nimport { Row, Col, Icon } from 'antd';\n\nimport moment from 'moment-timezone';\n\nimport { format } from '../../utils/index';\nimport { MixType } from '../../utils/types';\nimport { mixSelector } from '../../store/mix';\nimport { reactorSetIndicatorsSelector } from '../../store/reactors';\nimport { getCurrentDate } from '../../store/otherSelectors';\n\nimport './index.css';\nimport MixComponent from './components/MixComponent';\n\nfunction MixView(props) {\n  const {\n    mix,\n    slotIndex,\n    setSlotIndex,\n    reactorSetIndicators,\n    currentDate,\n  } = props;\n  const {\n    totalPower,\n    availablePower,\n    availableCount,\n    partiallyUnavailableCount,\n    totallyUnavailableCount,\n  } = reactorSetIndicators;\n\n  const total = Math.floor(totalPower / 1000);\n  const available = Math.floor(availablePower);\n  const availabilityRate = Math.floor((100 * availablePower) / totalPower);\n  const prodAvailableRate = Math.floor(\n    (100 * mix[slotIndex].nuclear) / availablePower,\n  );\n  const availableSize = Math.max(\n    ((availablePower - (mix[slotIndex].nuclear || 0)) / totalPower) * 100,\n    0,\n  );\n  const date = moment(currentDate)\n    .hour(Math.floor(slotIndex / 4))\n    .minutes(15 * (slotIndex % 4))\n    .format('DD/MM/YYYY HH:mm');\n\n  return (\n    <div className=\"MixView\">\n      <Row>\n        <Col span={24}>\n          <MixComponent\n            mix={mix}\n            slotIndex={slotIndex}\n            setSlotIndex={setSlotIndex}\n            currentDate={currentDate}\n          />\n          <div className=\"MixView__date\">\n            {moment(currentDate).isAfter('2012-01-02') ? (\n              <Link\n                to={location => ({\n                  pathname: location.pathname,\n                  search: qs.stringify({\n                    date: moment(currentDate)\n                      .subtract(1, 'day')\n                      .startOf('hour')\n                      .toISOString(),\n                  }),\n                })}\n              >\n                <Icon\n                  theme=\"twoTone\"\n                  type=\"left-circle\"\n                  style={{ fontSize: '18pt' }}\n                />\n              </Link>\n            ) : (\n              <div />\n            )}\n            <div>{date}</div>\n            {!moment().isSame(currentDate, 'day') ? (\n              <Link\n                to={location => ({\n                  pathname: location.pathname,\n                  search: qs.stringify({\n                    date: moment(currentDate)\n                      .add(1, 'day')\n                      .startOf('hour')\n                      .toISOString(),\n                  }),\n                })}\n              >\n                <Icon\n                  theme=\"twoTone\"\n                  type=\"right-circle\"\n                  style={{ fontSize: '18pt' }}\n                />\n              </Link>\n            ) : (\n              <div />\n            )}\n          </div>\n          <div className=\"MixView__nuclear\">\n            <strong>{`Parc nucléaire (${total} GW):`}</strong>\n            <div className=\"MixView__nuclear__indicator\">\n              <div\n                className=\"MixView__nuclear__indicator__prod\"\n                style={{\n                  display: mix[slotIndex].nuclear ? 'inherit' : 'none',\n                  width: `${((mix[slotIndex].nuclear || 0) / totalPower) *\n                    100}%`,\n                }}\n              >\n                <div>{`Prod: ${format(mix[slotIndex].nuclear)} MW`}</div>\n                <div>{`${format(prodAvailableRate)}% du dispo.`}</div>\n              </div>\n              <div\n                className=\"MixView__nuclear__indicator__available\"\n                style={{\n                  width: `${availableSize}%`,\n                }}\n              />\n            </div>\n            <div className=\"MixView__nuclear__available\">\n              {`${availableCount} réacteurs disponibles: ${available} MW (${availabilityRate}%)`}\n            </div>\n            <div>\n              {`dont ${partiallyUnavailableCount} partiellement indisponible${\n                partiallyUnavailableCount > 1 ? 's' : ''\n              }`}\n            </div>\n            <div className=\"MixView__nuclear__stopped\">\n              {`${totallyUnavailableCount} réacteur${\n                totallyUnavailableCount > 1 ? 's' : ''\n              } arrêté${totallyUnavailableCount > 1 ? 's' : ''}`}\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nMixView.propTypes = {\n  mix: PropTypes.arrayOf(MixType).isRequired,\n  slotIndex: PropTypes.number.isRequired,\n  setSlotIndex: PropTypes.func.isRequired,\n  reactorSetIndicators: PropTypes.shape({\n    availablePower: PropTypes.number.isRequired,\n    totalPower: PropTypes.number.isRequired,\n    availableCount: PropTypes.number.isRequired,\n    totallyUnavailableCount: PropTypes.number.isRequired,\n    partiallyUnavailableCount: PropTypes.number.isRequired,\n  }).isRequired,\n  currentDate: PropTypes.string.isRequired,\n};\n\nconst withStateEnhancer = withState('slotIndex', 'setSlotIndex', props =>\n  moment().isSame(props.currentDate, 'day')\n    ? props.mix.filter(d => !Number.isNaN(d.nuclear)).length - 1\n    : moment(props.currentDate).hours() * 4,\n);\n\nconst mixEnhancer = connect((state, props) => {\n  const currentDate = getCurrentDate(props.location);\n\n  return {\n    currentDate,\n    mix: mixSelector({ date: currentDate }, state),\n  };\n});\n\nconst indicatorsEnhancer = connect((state, props) => ({\n  reactorSetIndicators: reactorSetIndicatorsSelector(\n    {\n      date: props.currentDate,\n      slotIndex: Math.floor(props.slotIndex / 4),\n    },\n    state,\n  ),\n}));\n\nexport default compose(\n  mixEnhancer,\n  withStateEnhancer,\n  indicatorsEnhancer,\n)(MixView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport moment from 'moment';\n\nconst { ReactorType } = require('../../../utils/types');\n\nfunction StatusIndicator(props) {\n  const style = { fontSize: 16 };\n  switch (props.status) {\n    case 'PLANNED_STOP':\n      return (\n        <Icon\n          type=\"tool\"\n          theme=\"filled\"\n          style={{ ...style, color: '#404040' }}\n        />\n      );\n    case 'UNPLANNED_REDUCTION':\n    case 'AUTO_STOP':\n      return (\n        <Icon\n          type=\"exclamation-circle\"\n          theme=\"twoTone\"\n          twoToneColor=\"red\"\n          style={style}\n        />\n      );\n    case 'PLANNED_REDUCTION':\n      return <Icon type=\"info-circle\" theme=\"twoTone\" style={style} />;\n    default:\n      return null;\n  }\n}\nStatusIndicator.propTypes = {\n  status: PropTypes.string.isRequired,\n};\n\nfunction ReactorIndicator(props) {\n  const { reactor, currentDate } = props;\n  const prods = reactor.dayProductions;\n  const hourIndex = moment(currentDate).hours();\n  const lastIndex = reactor.dayProductions.reduce(\n    (last, v, i) => (v.value === null ? last : i),\n    0,\n  );\n\n  const index = Math.min(lastIndex, hourIndex);\n  const currentProd = prods[index];\n  const absLoad = Math.max(0, currentProd.value);\n  const part = Math.floor((absLoad / reactor.power_MW) * 100);\n\n  return (\n    <div\n      className=\"ReactIndicator\"\n      style={{\n        background: `linear-gradient(0deg, #26a65b 0%, #26a65b ${part}%, rgba(255,255,255,1) ${part}%)`,\n      }}\n    >\n      <div className=\"ReactIndicator__status\">\n        <StatusIndicator status={reactor.status} />\n      </div>\n      <div className=\"ReactIndicator__prod\">\n        <strong>{Math.floor(absLoad)}</strong>\n      </div>\n      <div className=\"ReactIndicator__number\">{reactor.reactorIndex}</div>\n    </div>\n  );\n}\n\nReactorIndicator.propTypes = {\n  reactor: ReactorType.isRequired,\n  currentDate: PropTypes.string.isRequired,\n};\n\nexport default ReactorIndicator;\n","import React, { useState } from 'react';\n\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  XAxis,\n  YAxis,\n  Area,\n  Tooltip,\n} from 'recharts';\n\nimport { ReactorType } from '../../../utils/types';\n\nconst TICKS = [0, 12, 24];\n\nfunction tickFormatter(value) {\n  return value ? `${value}:00` : '00:00';\n}\n\nfunction ReactorLoadChart(props) {\n  const { reactor } = props;\n  const [indexSelected, setSelected] = useState(null);\n  const hour =\n    indexSelected > 9 ? `${indexSelected}:00` : `0${indexSelected}:00`;\n  const prod =\n    indexSelected !== null &&\n    reactor.dayProductions[indexSelected].value != null\n      ? `${Math.floor(reactor.dayProductions[indexSelected].value)}`\n      : '-';\n\n  return (\n    <div key={reactor.name} className=\"ReactorLoadChart\">\n      <div>\n        {`Production ${\n          indexSelected !== null ? `à ${hour}: ${prod} MW` : '(MW)'\n        }`}\n      </div>\n      <div className=\"ReactorLoadChart__chart\">\n        <ResponsiveContainer>\n          <AreaChart\n            data={reactor.dayProductions}\n            onClick={v => {\n              setSelected(v && v.activeTooltipIndex);\n              return v;\n            }}\n          >\n            <XAxis\n              domain={[0, 24]}\n              ticks={TICKS}\n              tickFormatter={tickFormatter}\n            />\n            <YAxis />\n            <Area\n              dataKey=\"value\"\n              dot={false}\n              activeDot={v => {\n                setSelected(v.index);\n                return null;\n              }}\n              type=\"monotone\"\n              stroke=\"rgb(28, 114, 64)\"\n              fill=\"rgb(38, 166, 91)\"\n              fillOpacity={1}\n            />\n            <Tooltip content={() => null} />\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n}\n\nReactorLoadChart.propTypes = {\n  reactor: ReactorType.isRequired,\n};\n\nexport default ReactorLoadChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Descriptions, Icon } from 'antd';\nimport moment from 'moment-timezone';\nimport qs from 'qs';\n\nimport { ReactorType } from '../../../utils/types';\nimport Link from '../../../components/Link';\n\nimport ReactorLoadChart from './ReactorLoadChart';\n\nfunction ReactorDetails({ reactor, currentDate }) {\n  return (\n    <div className=\"ReactorDetails\">\n      <Descriptions\n        title={\n          // eslint-disable-next-line react/jsx-wrap-multilines\n          <div className=\"ReactorDetails__header\">\n            <div>{reactor.name}</div>\n            <div>\n              <Link to={`/plant/${reactor.plantId}`}>\n                <Icon type=\"caret-up\" theme=\"filled\" />\n              </Link>\n            </div>\n          </div>\n        }\n        size=\"small\"\n        bordered\n        column={1}\n      >\n        <Descriptions.Item label=\"Début d'exploitation\">\n          {reactor.exploitationStartYear}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Puissance nominale\">\n          {`${reactor.power_MW} MWe (${reactor.stage})`}\n        </Descriptions.Item>\n      </Descriptions>\n\n      <div>\n        <ReactorLoadChart reactor={reactor} />\n        <div className=\"MixView__date\">\n          {moment(currentDate).isAfter('2012-01-02') ? (\n            <RouterLink\n              to={location => ({\n                pathname: location.pathname,\n                search: qs.stringify({\n                  date: moment(currentDate)\n                    .subtract(1, 'day')\n                    .startOf('hour')\n                    .toISOString(),\n                }),\n              })}\n            >\n              <Icon\n                theme=\"twoTone\"\n                type=\"left-circle\"\n                style={{ fontSize: '18pt' }}\n              />\n            </RouterLink>\n          ) : (\n            <div />\n          )}\n          <div>{moment(currentDate).format('DD/MM/YYYY')}</div>\n          {!moment().isSame(currentDate, 'day') ? (\n            <RouterLink\n              to={location => ({\n                pathname: location.pathname,\n                search: qs.stringify({\n                  date: moment(currentDate)\n                    .add(1, 'day')\n                    .startOf('hour')\n                    .toISOString(),\n                }),\n              })}\n            >\n              <Icon\n                theme=\"twoTone\"\n                type=\"right-circle\"\n                style={{ fontSize: '18pt' }}\n              />\n            </RouterLink>\n          ) : (\n            <div />\n          )}\n        </div>\n      </div>\n\n      {reactor.unavailability && (\n        <Descriptions\n          title=\"Indisponibilité\"\n          size=\"small\"\n          bordered\n          column={1}\n          style={{ marginTop: 10 }}\n        >\n          <Descriptions.Item label=\"Début\">\n            {moment(reactor.unavailability.startDate).format(\n              'DD/MM/YYYY HH:mm',\n            )}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Fin\">\n            {moment(reactor.unavailability.endDate).format('DD/MM/YYYY HH:mm')}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Type\">\n            {reactor.unavailability.type === 'PLANNED_MAINTENANCE'\n              ? 'Planifiée'\n              : 'Fortuite'}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Puissance disponible\">\n            {`${reactor.unavailability.availablePower_MW} MW`}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Description\">\n            {reactor.unavailability.reason}\n          </Descriptions.Item>\n        </Descriptions>\n      )}\n    </div>\n  );\n}\n\nReactorDetails.propTypes = {\n  reactor: ReactorType.isRequired,\n  currentDate: PropTypes.string.isRequired,\n};\n\nexport default ReactorDetails;\n","import React from 'react';\n\nimport { Carousel, Icon } from 'antd';\nimport { PlantType } from '../../../utils/types';\nimport Link from '../../../components/Link';\n\nfunction PlantPictures(props) {\n  const { plant } = props;\n\n  return (\n    <div className=\"PlantPictures\">\n      <div className=\"PlantPictures__header\">\n        <h3>Photos</h3>\n        <div>\n          <Link to={`/plant/${plant.id}`}>\n            <Icon type=\"caret-up\" theme=\"filled\" />\n          </Link>\n        </div>\n      </div>\n\n      <Carousel>\n        {plant.pictures.map(picture => (\n          <img key={picture} alt={plant.name} src={picture} />\n        ))}\n      </Carousel>\n    </div>\n  );\n}\n\nPlantPictures.propTypes = {\n  plant: PlantType.isRequired,\n};\n\nexport default PlantPictures;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n  Route, // as BaseRoute,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport { Row, Col, Select, Tag, Dropdown, Menu, Button } from 'antd';\n\nimport { plantSelector, plantsSelector } from '../../store/plants';\nimport { PlantType, ReactorType } from '../../utils/types';\nimport Link from '../../components/Link';\n\nimport ReactorIndicator from './components/ReactorIndicator';\nimport {\n  reactorsOfPlantSelector,\n  reactorByPlantAndIndexSelector,\n} from '../../store/reactors';\nimport { getCurrentDate } from '../../store/otherSelectors';\n\nimport ReactorDetails from './components/ReactorDetails';\nimport PlantPictures from './components/PlantPictures';\n\nimport './index.css';\n\nconst ReactorDetailsContainer = connect((state, props) => {\n  return {\n    reactor: reactorByPlantAndIndexSelector(\n      {\n        date: props.currentDate,\n        plantId: props.match.params.plantId,\n        reactorIndex: Number(props.match.params.reactorIndex),\n      },\n      state,\n    ),\n  };\n})(ReactorDetails);\n\nfunction plantMenu(plant) {\n  return (\n    <Menu>\n      <Menu.Item>\n        <a href={plant.wikiLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          {/* <img className=\"PlantView__wiki\" src=\"wiki.svg\" alt=\"wiki\" /> */}\n          Wikipedia\n        </a>\n      </Menu.Item>\n      <Menu.Item>\n        <a href={plant.asnLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          {/* <img className=\"PlantView__asn\" src=\"logo-asn.png\" alt=\"asn\" /> */}\n          ASN\n        </a>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nfunction PlantView(props) {\n  const { currentDate, plants, currentPlant, reactors, goTo } = props;\n\n  if (!currentPlant) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"PlantView\">\n      <Row>\n        <Col span={24}>\n          <div className=\"PlantView__firstRow\">\n            <div className=\"PlantView__firstRow__left\">\n              <Select\n                value={currentPlant.id}\n                size=\"large\"\n                onChange={id => goTo(`/plant/${id}`)}\n                style={{ width: '9em' }}\n              >\n                {plants.map(plant => (\n                  <Select.Option key={plant.id} value={plant.id}>\n                    {plant.name}\n                  </Select.Option>\n                ))}\n              </Select>\n              <span>\n                <Tag style={{ marginLeft: '8px' }}>\n                  {currentPlant.coolingType === 'SEA' ? 'Mer' : 'Fleuve'}\n                </Tag>\n              </span>\n            </div>\n            <div className=\"PlantView__firstRow__right\">\n              <Link to={`/plant/${currentPlant.id}/pictures`}>\n                <Button icon=\"picture\" style={{ marginRight: 5 }} />\n              </Link>\n              <Dropdown\n                overlay={plantMenu(currentPlant)}\n                trigger={['click']}\n                placement=\"bottomRight\"\n              >\n                <Button icon=\"more\" />\n              </Dropdown>\n            </div>\n          </div>\n\n          <div className=\"PlantView__schema\">\n            <div>Production (MW)</div>\n            <div className=\"PlantView__reactors\">\n              {reactors.map(reactor => (\n                <Link\n                  key={reactor.eicCode}\n                  to={`/plant/${currentPlant.id}/${reactor.reactorIndex}`}\n                >\n                  <ReactorIndicator\n                    reactor={reactor}\n                    currentDate={currentDate}\n                  />\n                </Link>\n              ))}\n            </div>\n            <div\n              className=\"PlantView__cooling\"\n              style={{ width: reactors.length * 50 }}\n            >\n              {currentPlant.coolingPlace}\n            </div>\n          </div>\n          <div className=\"PlantView__footer\">\n            <Switch>\n              <Route\n                path=\"/plant/:plantId/pictures\"\n                component={() => <PlantPictures plant={currentPlant} />}\n              />\n              <Route\n                path=\"/plant/:plantId/:reactorIndex\"\n                component={props2 => (\n                  <ReactorDetailsContainer\n                    // eslint-disable-next-line react/jsx-props-no-spreading\n                    {...props2}\n                    currentDate={currentDate}\n                  />\n                )}\n              />\n              <Route\n                component={() => (\n                  <small>(Cliquer sur un réacteur pour plus de détails)</small>\n                )}\n              />\n            </Switch>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nPlantView.propTypes = {\n  currentDate: PropTypes.string.isRequired,\n  plants: PropTypes.arrayOf(PlantType).isRequired,\n  currentPlant: PlantType.isRequired,\n  reactors: PropTypes.arrayOf(ReactorType).isRequired,\n  goTo: PropTypes.func.isRequired,\n};\n\nexport default connect((state, props) => {\n  const { plantId } = props.match.params;\n  const currentDate = getCurrentDate(props.location);\n\n  return {\n    currentDate,\n    plants: plantsSelector({ date: currentDate }, state),\n    currentPlant: plantSelector({ plantId, date: currentDate }, state),\n    reactors: reactorsOfPlantSelector({ plantId, date: currentDate }, state),\n    goTo: url => props.history.push(`${url}${props.location.search}`),\n  };\n})(PlantView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport moment from 'moment';\n\nimport { Map, TileLayer, Marker, ZoomControl, GeoJSON } from 'react-leaflet';\n\nimport Leaflet from 'leaflet';\n\nimport {\n  testScreenType,\n  getWindowHeight,\n  HEADER_HEIGHT,\n  DRAWER_WIDTH,\n} from '../utils';\nimport { PlantType } from '../utils/types';\n\nimport { plantsSelector } from '../store/plants';\nimport { riversSelector } from '../store/rivers';\n\nconst ICON_OPTIONS = {\n  fillOpacity: 1,\n  iconSize: [24, 38],\n  circleColor: 'white',\n  circleRatio: 0.6,\n  circleWeight: 3,\n};\n\nfunction hasNotif(plant) {\n  return plant.reactors.reduce((res, reactor) => {\n    if (reactor.status !== 'RUNNING' && reactor.status !== 'PLANNED_STOP') {\n      return true;\n    }\n    return res;\n  }, false);\n}\n\nfunction plantRatio(plant, currentDate) {\n  const hourIndex = Math.max(moment(currentDate).hours(), 0);\n\n  const totalProd = plant.reactors.reduce((res, reactor) => {\n    const lastIndex = reactor.dayProductions.reduce(\n      (last, v, i) => (v.value === null ? last : i),\n      0,\n    );\n    const index = Math.min(lastIndex, hourIndex);\n\n    const prod =\n      reactor.dayProductions[index].value !== null\n        ? Math.max(reactor.dayProductions[index].value, 0)\n        : 0;\n\n    return res + prod;\n  }, 0);\n  const totalPower = plant.reactors.reduce((res, r) => res + r.power_MW, 0);\n\n  return totalProd / totalPower;\n}\n\nfunction PlantMap(props) {\n  const {\n    plants,\n    currentPlantId,\n    onPlantClick,\n    drawerHeight,\n    rivers,\n    currentDate,\n  } = props;\n  const isSmallScreen = !testScreenType('sm');\n  const height = getWindowHeight();\n\n  return (\n    <Map\n      center={[48.3, 2]}\n      zoom={isSmallScreen ? 5 : 6}\n      style={{\n        height: isSmallScreen\n          ? height - HEADER_HEIGHT - drawerHeight\n          : height - HEADER_HEIGHT,\n        marginTop: isSmallScreen ? HEADER_HEIGHT + drawerHeight : HEADER_HEIGHT, // TODO\n        marginLeft: isSmallScreen ? 0 : DRAWER_WIDTH,\n      }}\n      zoomControl={false}\n    >\n      <ZoomControl position=\"bottomright\" />\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      {plants.map(plant => (\n        <Marker\n          key={plant.id}\n          title={plant.name}\n          position={plant.coords}\n          icon={\n            plant.id === currentPlantId\n              ? new Leaflet.DivIcon.SVGIcon.IndicatorIcon({\n                  ...ICON_OPTIONS,\n                  color: 'red',\n                  loadRate: plantRatio(plant, currentDate),\n                  notif: hasNotif(plant),\n                })\n              : new Leaflet.DivIcon.SVGIcon.IndicatorIcon({\n                  ...ICON_OPTIONS,\n                  loadRate: plantRatio(plant, currentDate),\n                  notif: hasNotif(plant),\n                })\n          }\n          onClick={() => onPlantClick(plant)}\n        />\n      ))}\n      {rivers.map(river => (\n        <GeoJSON key={river.name} data={river} />\n      ))}\n    </Map>\n  );\n}\n\nPlantMap.propTypes = {\n  plants: PropTypes.arrayOf(PlantType).isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  rivers: PropTypes.array.isRequired,\n  currentPlantId: PropTypes.string,\n  onPlantClick: PropTypes.func.isRequired,\n  drawerHeight: PropTypes.number.isRequired,\n  currentDate: PropTypes.string.isRequired,\n};\n\nPlantMap.defaultProps = {\n  currentPlantId: null,\n};\n\nconst ConnectedPlantMap = connect((state, props) => {\n  return {\n    plants: plantsSelector({ date: props.currentDate }, state),\n    rivers: riversSelector(state),\n  };\n})(PlantMap);\n\nexport default ConnectedPlantMap;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\nimport { withState } from 'recompose';\n\nimport { DatePicker as DesktopDatePicker } from 'antd';\nimport { DatePicker as MobileDatePicker } from 'antd-mobile';\n\nimport { isMobileOrTablet } from '../utils/index';\n\nconst PROP_TYPES = {\n  value: PropTypes.string.isRequired,\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n  onToday: PropTypes.func.isRequired,\n  onDate: PropTypes.func.isRequired,\n};\n\nconst MIN_DATE = moment('2012-01-01').toDate();\nconst MAX_DATE = moment()\n  .endOf('day')\n  .toDate();\n\nfunction WrappedDesktopDatePicker(props) {\n  const { children, isOpen, setIsOpen, value, onDate } = props;\n  return (\n    <div>\n      <div\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyDown={() => {}}\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        {children}\n      </div>\n\n      <DesktopDatePicker\n        open={isOpen}\n        style={{ display: 'none' }}\n        defaultValue={moment(value)}\n        disabledDate={\n          current =>\n            moment().isBefore(current) || moment(MIN_DATE).isAfter(current)\n          // eslint-disable-next-line react/jsx-curly-newline\n        }\n        showTime={{\n          minuteStep: 60,\n          secondStep: 60,\n        }}\n        onOk={date => {\n          setIsOpen(false);\n          onDate(date);\n        }}\n      />\n    </div>\n  );\n}\n\nWrappedDesktopDatePicker.propTypes = {\n  ...PROP_TYPES,\n  isOpen: PropTypes.bool.isRequired,\n  setIsOpen: PropTypes.bool.isRequired,\n};\n\nconst DesktopDatePickerContainer = withState('isOpen', 'setIsOpen', false)(\n  WrappedDesktopDatePicker,\n);\n\nfunction DatePicker(props) {\n  const { value, children, onDate } = props;\n\n  if (isMobileOrTablet()) {\n    return (\n      <MobileDatePicker\n        locale={{\n          okText: 'OK',\n          dismissText: 'Today',\n          DatePickerLocale: {\n            year: '',\n            month: '',\n            day: '',\n            hour: 'h',\n            minute: '',\n          },\n        }}\n        onOk={onDate}\n        onDismiss={onDate}\n        value={moment(value)\n          .minutes(0)\n          .toDate()}\n        minuteStep={60}\n        minDate={MIN_DATE}\n        maxDate={MAX_DATE}\n      >\n        {children}\n      </MobileDatePicker>\n    );\n  }\n\n  return (\n    <DesktopDatePickerContainer value={value} onDate={onDate}>\n      {children}\n    </DesktopDatePickerContainer>\n  );\n}\n\nDatePicker.propTypes = WrappedDesktopDatePicker.propTypes;\n\nexport default DatePicker;\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { omit, equals } from 'ramda';\n\nclass Loader extends Component {\n  componentDidMount() {\n    const { load, ...otherProps } = this.props;\n\n    load(otherProps);\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevOtherProps = omit(['load'], prevProps);\n    const { load, ...otherProps } = this.props;\n\n    if (!equals(prevOtherProps, otherProps)) {\n      load(otherProps);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nLoader.propTypes = {\n  load: PropTypes.func.isRequired,\n};\n\nfunction buildLoader(loadFunction) {\n  return connect(\n    null,\n    { load: loadFunction },\n  )(Loader);\n}\n\nexport default buildLoader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport moment from 'moment';\n\nimport {\n  Route, // as BaseRoute,\n  Switch,\n  Redirect,\n  withRouter,\n  matchPath,\n} from 'react-router-dom';\nimport { Layout, Spin, Row, Col, Drawer, Menu, Icon } from 'antd';\n\nimport HomeView from '../views/HomeView';\nimport AboutView from '../views/AboutView';\nimport MixView from '../views/MixView';\nimport PlantView from '../views/PlantView';\n\nimport Link from './Link';\nimport PlantMap from './PlantMap';\nimport DatePicker from './DatePicker';\n\nimport buildLoader from '../HOC/buildLoader';\nimport { loadAllPlants, plantsLoadedSelector } from '../store/plants';\n\nimport { loadAllReactors, reactorsLoadedSelector } from '../store/reactors';\nimport {\n  loadAllProductions,\n  productionsLoadedSelector,\n  productionsErrorSelector,\n} from '../store/productions';\nimport { loadAllMix, mixLoadedSelector, mixErrorSelector } from '../store/mix';\n\nimport {\n  testScreenType,\n  HEADER_HEIGHT,\n  DRAWER_WIDTH,\n  getWindowHeight,\n} from '../utils';\nimport {\n  loadAllUnavailabilities,\n  unavailabilitiesLoadedSelector,\n  unavailabilitiesErrorSelector,\n} from '../store/unavailabilities';\nimport { loadAllRivers, riversLoadedSelector } from '../store/rivers';\nimport { getCurrentDate } from '../store/otherSelectors';\n\nconst PlantsLoader = buildLoader(loadAllPlants);\nconst ReactorsLoader = buildLoader(loadAllReactors);\nconst ProductionsLoader = buildLoader(loadAllProductions);\nconst MixLoader = buildLoader(loadAllMix);\nconst UnavailabilitiesLoader = buildLoader(loadAllUnavailabilities);\nconst RiversLoader = buildLoader(loadAllRivers);\n\nfunction AppLayout(props) {\n  const {\n    isLoaded,\n    error,\n\n    currentPlantId,\n    currentLocation,\n    currentDate,\n\n    isFullPage,\n    goTo,\n  } = props;\n  const isSmallScreen = !testScreenType('sm');\n  const drawerHeight = isFullPage ? getWindowHeight() - HEADER_HEIGHT : 220;\n\n  return (\n    <div className=\"AppLayout\">\n      <PlantsLoader />\n      <ReactorsLoader />\n      <RiversLoader />\n\n      <ProductionsLoader date={currentDate} />\n      <MixLoader date={currentDate} />\n      <UnavailabilitiesLoader date={currentDate} />\n      <Spin\n        size=\"large\"\n        spinning={!isLoaded}\n        indicator={\n          // eslint-disable-next-line react/jsx-wrap-multilines\n          <div>\n            <img\n              className=\"AppLayout__loadingIcon\"\n              src=\"loading_icon.svg\"\n              alt=\"\"\n            />\n            {error && (\n              <div className=\"AppLayout__errorMessage\">\n                Une erreur est survenue, veuillez essayer dans quelques minutes\n              </div>\n            )}\n          </div>\n        }\n      >\n        {!isLoaded && <div className=\"AppLayout__splash\" />}\n        {isLoaded && (\n          <Layout>\n            <Drawer\n              title={null}\n              visible\n              placement={isSmallScreen ? 'top' : 'left'}\n              style={{ marginTop: HEADER_HEIGHT }}\n              mask={false}\n              closable={false}\n              width={DRAWER_WIDTH}\n              height={drawerHeight}\n              bodyStyle={{ padding: 0 }}\n              drawerStyle={{ transition: 'height 2s ease' }}\n            >\n              <Switch>\n                <Route path=\"/home\" exact component={HomeView} />\n                <Route path=\"/mix\" exact component={MixView} />\n                <Route path=\"/about\" exact component={AboutView} />\n                <Route path=\"/plant/:plantId\" component={PlantView} />\n                <Route\n                  component={() => <Redirect to={{ pathname: '/home' }} />}\n                />\n              </Switch>\n            </Drawer>\n            <Row>\n              <Col span={24}>\n                <Layout.Header className=\"AppLayout__header\">\n                  <Menu\n                    theme=\"dark\"\n                    mode=\"horizontal\"\n                    className=\"AppLayout__menu\"\n                    selectable={false}\n                  >\n                    <Menu.SubMenu\n                      title={\n                        // eslint-disable-next-line react/jsx-wrap-multilines\n                        <span>\n                          <Icon type=\"menu\" />\n                          <strong>Nuclear monitor</strong>\n                        </span>\n                      }\n                      popupClassName=\"AppLayout__submenu\"\n                    >\n                      <Menu.Item key=\"home\">\n                        <Link to=\"/home\">Accueil</Link>\n                      </Menu.Item>\n                      <Menu.Item key=\"mix\">\n                        <Link to=\"/mix\">Mix</Link>\n                      </Menu.Item>\n                      <Menu.Item key=\"about\">\n                        <Link to=\"/about\">À propos</Link>\n                      </Menu.Item>\n                    </Menu.SubMenu>\n                  </Menu>\n                  <DatePicker\n                    onDate={\n                      v =>\n                        moment(v).isSame(moment(), 'day')\n                          ? goTo(`${currentLocation}`, false)\n                          : goTo(\n                              `${currentLocation}?date=${moment(\n                                v,\n                              ).toISOString()}`,\n                              false,\n                            )\n                      // eslint-disable-next-line react/jsx-curly-newline\n                    }\n                    value={currentDate}\n                  >\n                    <div className=\"AppLayout__header__date\">\n                      <div className=\"AppLayout__header__date__text\">\n                        <div>\n                          {moment(currentDate).format('dddd DD/MM/YYYY')}\n                        </div>\n                        <div>{moment(currentDate).format('à HH:00')}</div>\n                      </div>\n\n                      <div className=\"AppLayout__header__date__calendar\">\n                        <Icon\n                          type=\"calendar\"\n                          theme=\"twoTone\"\n                          twoToneColor=\"white\"\n                        />\n                      </div>\n                    </div>\n                  </DatePicker>\n                </Layout.Header>\n\n                <Layout.Content className=\"AppLayout__content\">\n                  <PlantMap\n                    currentDate={currentDate}\n                    currentPlantId={currentPlantId}\n                    onPlantClick={plant => goTo(`/plant/${plant.id}`)}\n                    drawerHeight={drawerHeight}\n                  />\n                </Layout.Content>\n              </Col>\n            </Row>\n          </Layout>\n        )}\n      </Spin>\n    </div>\n  );\n}\n\nAppLayout.propTypes = {\n  isLoaded: PropTypes.bool.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  error: PropTypes.object,\n\n  goTo: PropTypes.func.isRequired,\n  currentLocation: PropTypes.string.isRequired,\n  currentDate: PropTypes.string.isRequired,\n\n  isFullPage: PropTypes.bool.isRequired,\n  currentPlantId: PropTypes.string,\n};\n\nAppLayout.defaultProps = {\n  currentPlantId: null,\n  error: null,\n};\n\n// withRouter needed to prevent blocking\nexport default withRouter(\n  connect((state, props) => {\n    const matchPlantPath = matchPath(props.location.pathname, {\n      path: '/plant/:id',\n      exact: false,\n    });\n    const currentDate = getCurrentDate(props.location);\n\n    const mixError = mixErrorSelector({ date: currentDate }, state);\n    const prodError = productionsErrorSelector({ date: currentDate }, state);\n    const unavailabilitiesError = unavailabilitiesErrorSelector(\n      { date: currentDate },\n      state,\n    );\n\n    return {\n      isLoaded:\n        plantsLoadedSelector(state) &&\n        reactorsLoadedSelector(state) &&\n        productionsLoadedSelector({ date: currentDate }, state) &&\n        mixLoadedSelector({ date: currentDate }, state) &&\n        unavailabilitiesLoadedSelector({ date: currentDate }, state) &&\n        riversLoadedSelector(state),\n      error: prodError || unavailabilitiesError || mixError,\n\n      goTo: (url, withSearch = true) =>\n        props.history.push(`${url}${withSearch ? props.location.search : ''}`),\n      currentLocation: props.location.pathname,\n      currentPlantId: matchPlantPath && matchPlantPath.params.id,\n      currentDate,\n\n      isFullPage: !!matchPath(props.location.pathname, {\n        path: ['/plant/:id/:reactorIndex', '/mix', '/about'],\n      }),\n    };\n  })(AppLayout),\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withRouter } from 'react-router-dom';\nimport { compose, withProps } from 'recompose';\n\nimport ga from 'react-ga';\n\nconst f = title => (...args) => console.log(title, ...args);\nconst mockGa = {\n  set: () => {},\n  pageview: f('tracker.pageview'),\n};\n\nconst isDev = process.env.NODE_ENV !== 'production';\nconst tracker = isDev ? mockGa : ga;\n\nif (!isDev) ga.initialize('UA-153111142-1', { siteSpeedSampleRate: 100 });\n\nclass AnalyticsComponent extends Component {\n  componentDidMount() {\n    this.trackPage();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { location } = this.props;\n\n    if (location !== prevProps.location) {\n      this.trackPage();\n    }\n  }\n\n  trackPage() {\n    const { location } = this.props;\n    tracker.set({ location });\n    tracker.pageview(location);\n  }\n\n  render() {\n    const { children } = this.props;\n    return <div>{children}</div>;\n  }\n}\n\nAnalyticsComponent.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  children: PropTypes.any.isRequired,\n  location: PropTypes.string.isRequired,\n};\n\nexport default compose(\n  withRouter,\n  withProps(props => ({\n    location: `${props.location.pathname}${props.location.search}`,\n  })),\n)(AnalyticsComponent);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport moment from 'moment';\nimport 'moment/locale/fr';\n\nimport store from './store';\n\nimport AppLayout from './components/AppLayout';\nimport AnalyticsComponent from './components/AnalyticsComponent';\n\nmoment.locale('fr');\nmoment.tz.setDefault('Europe/Paris');\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <Route path=\"/\">\n            <AnalyticsComponent>\n              <AppLayout />\n            </AnalyticsComponent>\n          </Route>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './utils/svg-icons';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// eslint-disable-next-line react/jsx-filename-extension\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import PropTypes from 'prop-types';\n\nexport const ProductionType = PropTypes.shape({\n  startDate: PropTypes.string.isRequired,\n  endDate: PropTypes.string.isRequired,\n  updatedDate: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n});\n\nexport const PlantType = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  coords: PropTypes.arrayOf(PropTypes.number).isRequired,\n  coolingType: PropTypes.string.isRequired,\n  coolingPlace: PropTypes.string.isRequired,\n  hasCoolingTower: PropTypes.bool.isRequired,\n  wikiLink: PropTypes.string.isRequired,\n  asnLink: PropTypes.string.isRequired,\n  pictures: PropTypes.arrayOf(PropTypes.string).isRequired,\n});\n\nexport const ReactorType = PropTypes.shape({\n  eicCode: PropTypes.string.isRequired,\n  plantId: PropTypes.string.isRequired,\n  reactorIndex: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  stage: PropTypes.string.isRequired,\n  power_MW: PropTypes.number.isRequired,\n  buildStartYear: PropTypes.number.isRequired,\n  gridLinkYear: PropTypes.number.isRequired,\n  exploitationStartYear: PropTypes.number.isRequired,\n  dayProductions: PropTypes.arrayOf(ProductionType).isRequired,\n});\n\nexport const MixType = PropTypes.shape({\n  wind: PropTypes.number.isRequired,\n  solar: PropTypes.number.isRequired,\n  nuclear: PropTypes.number.isRequired,\n  gas: PropTypes.number.isRequired,\n  oil: PropTypes.number.isRequired,\n  coal: PropTypes.number.isRequired,\n  consumption: PropTypes.number.isRequired,\n  biomass: PropTypes.number.isRequired,\n  hydroPumped: PropTypes.number.isRequired,\n  hydro: PropTypes.number.isRequired,\n  imports: PropTypes.number.isRequired,\n  exports: PropTypes.number.isRequired,\n});\n"],"sourceRoot":""}