{"version":3,"sources":["utils/types.js","utils/svg-icons.js","api/index.js","store/productions.js","store/unavailabilities.js","store/reactors.js","store/plants.js","store/mix.js","store/rivers.js","store/index.js","views/HomeView/index.jsx","views/AboutView/index.jsx","utils/index.js","views/MixView/components/config.js","views/MixView/components/MixComponent.jsx","views/MixView/index.jsx","views/PlantView/components/ReactorIndicator.jsx","views/PlantView/components/ReactorLoadChart.jsx","views/PlantView/components/ReactorDetails.jsx","views/PlantView/components/PlantPictures.jsx","views/PlantView/index.jsx","HOC/buildLoader.js","components/PlantMap.jsx","components/AppLayout.jsx","App.jsx","serviceWorker.js","index.js"],"names":["ProductionType","PropTypes","shape","startDate","string","isRequired","endDate","updatedDate","value","number","PlantType","id","name","coords","arrayOf","coolingType","coolingPlace","hasCoolingTower","bool","wikiLink","asnLink","pictures","ReactorType","eicCode","plantId","reactorIndex","stage","power_MW","buildStartYear","gridLinkYear","exploitationStartYear","dayProductions","MixType","isOk","datetime","wind","solar","nuclear","gas","oil","coal","consumption","biomass","hydroPumped","hydro","imports","exports","L","DivIcon","SVGIcon","extend","options","point","initialize","Util","setOptions","this","iconSize","circleAnchor","Number","x","circleColor","color","circleFillOpacity","opacity","circleOpacity","circleWeight","weight","fillColor","fontSize","iconAnchor","y","popupAnchor","html","_createSVG","_createCircle","cx","cy","radius","circleRatio","fill","circleFillColor","fillOpacity","stroke","strokeOpacity","strokeWidth","className","_createPathDescription","height","width","margin","_createPath","pathDescription","path","circle","text","_createText","style","fontWeight","lineHeight","circleText","fontColor","replace","fontOpacity","divIcon","svgIcon","Marker","SVGMarker","latlng","icon","iconFactory","iconOptions","_latlng","onAdd","map","prototype","call","setStyle","_icon","children","iconBody","iconCircle","setAttribute","setOpacity","setIcon","marker","svgMarker","IndicatorIcon","circum","Math","PI","pieSize","loadRate","notif","pie","REACT_APP_NUCLEAR_MONITOR_API","process","doFetch","a","fetch","res","ok","Error","Promise","all","river","then","json","data","START_URL","DATE_FORMAT","qs","stringify","dataset","rows","sort","moment","tz","format","mix","records","fields","nucleaire","date_heure","unix","eolien","solaire","gaz","fioul","charbon","consommation","bioenergies","pompage","hydraulique","max","ech_physiques","min","PRODUCTIONS_LOAD_ACTION","PRODUCTIONS_RECEIVE_ACTION","receiveProductionsAction","errors","type","initialState","loading","loaded","productionsLoadedSelector","state","productions","productionsReducer","action","UNAVAILABILITIES_LOAD_ACTION","UNAVAILABILITIES_RECEIVE_ACTION","receiveUnavailabilitiesAction","unavailabilitiesLoadedSelector","unavailabilities","unavailabilitiesReducer","REACTORS_LOAD_ACTION","REACTORS_RECEIVE_ACTION","receiveReactorsAction","reactorsLoadedSelector","reactors","getStatus","unavailability","availablePower_MW","reactorSelector","reactor","values","productionSelector","unavalabilitySelector","status","reactorsOfPlantSelector","Object","filter","sortBy","prop","INIT_DATA","availablePower","totalPower","availableCount","partiallyUnavailableCount","totallyUnavailableCount","reactorSetIndicatorsSelector","hourOfDay","reactorsSelector","reduce","res2","partially","totally","reactorByPlantAndIndexSelector","reacto","find","reactorsReducer","PLANTS_LOAD_ACTION","PLANTS_RECEIVE_ACTION","receivePlantsAction","plantsLoadedSelector","plants","plantSelector","plantsSelector","plant","plantsReducer","MIX_LOAD_ACTION","MIX_RECEIVE_ACTION","receiveMixAction","mixLoadedSelector","mixSelector","mixReducer","RIVERS_LOAD_ACTION","RIVERS_RECEIVE_ACTION","receiveRiversAction","riversLoadedSelector","rivers","riversSelector","riversReducer","rootReducer","combineReducers","enhancers","applyMiddleware","thunk","enhancer","composeWithDevTools","store","createStore","Title","HomeView","level","to","Content","href","target","rel","AboutView","avatar","src","content","testScreenType","size","windowWidth","window","innerWidth","getWindowHeight","body","document","documentElement","scrollHeight","offsetHeight","clientHeight","v","isNaN","HEADER_HEIGHT","DRAWER_WIDTH","META","label","stackId","GRAPH_ORDER","HEADER_ORDER","MixComponent","slotIndex","setSlotIndex","key","backgroundColor","abs","axisLine","mirror","dataKey","activeDot","dot","defaultValue","onChange","debounce","tipFormatter","startOf","add","withStateEnhancer","withState","floor","diff","connectEnhancer","connect","props","reactorSetIndicators","compose","total","available","availabilityRate","prodAvailableRate","date","hour","minutes","span","require","StatusIndicator","theme","twoToneColor","ReactorIndicator","prods","currentProd","length","absLoad","part","background","TICKS","tickFormatter","ReactorLoadChart","endOfDay","Array","from","d","concat","domain","ticks","ReactorDetails","title","bordered","column","Item","isAfter","shouldDisplayLoadGraph","marginTop","reason","PlantPictures","picture","alt","ReactorDetailsContainer","match","params","currentPlant","goTo","url","history","push","Option","marginLeft","marginRight","overlay","trigger","placement","component","Loader","load","prevProps","prevOtherProps","omit","otherProps","equals","Component","buildLoader","loadFunction","ICON_OPTIONS","hasNotif","plantRatio","r","PlantMap","currentPlantId","onPlantClick","drawerHeight","isSmallScreen","Map","center","zoom","zoomControl","ZoomControl","position","TileLayer","attribution","Leaflet","onClick","GeoJSON","defaultProps","PlantsLoader","dispatch","getPlants","indexBy","catch","console","error","ReactorsLoader","getReactors","ProductionsLoader","getProductions","MixLoader","getMix","UnavailabilitiesLoader","getUnavailabilities","RiversLoader","getRivers","AppLayout","isLoaded","isFullPage","spinning","indicator","visible","mask","closable","bodyStyle","padding","drawerStyle","transition","exact","MixView","PlantView","pathname","Header","mode","selectable","SubMenu","withRouter","matchPlantPath","matchPath","location","prodError","productionsErrorSelector","unavailabilitiesError","unavailabilitiesErrorSelector","App","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4a95f49.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const ProductionType = PropTypes.shape({\n  startDate: PropTypes.string.isRequired,\n  endDate: PropTypes.string.isRequired,\n  updatedDate: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n});\n\nexport const PlantType = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  coords: PropTypes.arrayOf(PropTypes.number).isRequired,\n  coolingType: PropTypes.string.isRequired,\n  coolingPlace: PropTypes.string.isRequired,\n  hasCoolingTower: PropTypes.bool.isRequired,\n  wikiLink: PropTypes.string.isRequired,\n  asnLink: PropTypes.string.isRequired,\n  pictures: PropTypes.arrayOf(PropTypes.string).isRequired,\n});\n\nexport const ReactorType = PropTypes.shape({\n  eicCode: PropTypes.string.isRequired,\n  plantId: PropTypes.string.isRequired,\n  reactorIndex: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  stage: PropTypes.string.isRequired,\n  power_MW: PropTypes.number.isRequired,\n  buildStartYear: PropTypes.number.isRequired,\n  gridLinkYear: PropTypes.number.isRequired,\n  exploitationStartYear: PropTypes.number.isRequired,\n  dayProductions: PropTypes.arrayOf(ProductionType).isRequired,\n});\n\nexport const MixType = PropTypes.shape({\n  isOk: PropTypes.bool.isRequired,\n  datetime: PropTypes.number.isRequired,\n  wind: PropTypes.number.isRequired,\n  solar: PropTypes.number.isRequired,\n  nuclear: PropTypes.number.isRequired,\n  gas: PropTypes.number.isRequired,\n  oil: PropTypes.number.isRequired,\n  coal: PropTypes.number.isRequired,\n  consumption: PropTypes.number.isRequired,\n  biomass: PropTypes.number.isRequired,\n  hydroPumped: PropTypes.number.isRequired,\n  hydro: PropTypes.number.isRequired,\n  imports: PropTypes.number.isRequired,\n  exports: PropTypes.number.isRequired,\n});\n","/* eslint-disable */\n//Leaflet-SVGIcon\n//SVG icon for any marker class\n//Ilya Atkin\n//ilya.atkin@unh.edu\nimport Leaflet from 'leaflet';\n\nL.DivIcon.SVGIcon = L.DivIcon.extend({\n  options: {\n      \"circleText\": \"\",\n      \"className\": \"svg-icon\",\n      \"circleAnchor\": null, //defaults to [iconSize.x/2, iconSize.x/2]\n      \"circleColor\": null, //defaults to color\n      \"circleOpacity\": null, // defaults to opacity\n      \"circleFillColor\": \"rgb(255,255,255)\",\n      \"circleFillOpacity\": null, //default to opacity\n      \"circleRatio\": 0.5,\n      \"circleWeight\": null, //defaults to weight\n      \"color\": \"rgb(0,102,255)\",\n      \"fillColor\": null, // defaults to color\n      \"fillOpacity\": 0.4,\n      \"fontColor\": \"rgb(0, 0, 0)\",\n      \"fontOpacity\": \"1\",\n      \"fontSize\": null, // defaults to iconSize.x/4\n      \"fontWeight\": \"normal\",\n      \"iconAnchor\": null, //defaults to [iconSize.x/2, iconSize.y] (point tip)\n      \"iconSize\": L.point(32,48),\n      \"opacity\": 1,\n      \"popupAnchor\": null,\n      \"weight\": 2\n  },\n  initialize: function(options) {\n      options = L.Util.setOptions(this, options)\n\n      //iconSize needs to be converted to a Point object if it is not passed as one\n      options.iconSize = L.point(options.iconSize)\n\n      //in addition to setting option dependant defaults, Point-based options are converted to Point objects\n      if (!options.circleAnchor) {\n          options.circleAnchor = L.point(Number(options.iconSize.x)/2, Number(options.iconSize.x)/2)\n      }\n      else {\n          options.circleAnchor = L.point(options.circleAnchor)\n      }\n      if (!options.circleColor) {\n          options.circleColor = options.color\n      }\n      if (!options.circleFillOpacity) {\n          options.circleFillOpacity = options.opacity\n      }\n      if (!options.circleOpacity) {\n          options.circleOpacity = options.opacity\n      }\n      if (!options.circleWeight) {\n          options.circleWeight = options.weight\n      }\n      if (!options.fillColor) {\n          options.fillColor = options.color\n      }\n      if (!options.fontSize) {\n          options.fontSize = Number(options.iconSize.x/4)\n      }\n      if (!options.iconAnchor) {\n          options.iconAnchor = L.point(Number(options.iconSize.x)/2, Number(options.iconSize.y))\n      }\n      else {\n          options.iconAnchor = L.point(options.iconAnchor)\n      }\n      if (!options.popupAnchor) {\n          options.popupAnchor = L.point(0, (-0.75)*(options.iconSize.y))\n      }\n      else {\n          options.popupAnchor = L.point(options.popupAnchor)\n      }\n\n      options.html = this._createSVG()\n  },\n  _createCircle: function() {\n      var cx = Number(this.options.circleAnchor.x)\n      var cy = Number(this.options.circleAnchor.y)\n      var radius = this.options.iconSize.x/2 * Number(this.options.circleRatio)\n      var fill = this.options.circleFillColor\n      var fillOpacity = this.options.circleFillOpacity\n      var stroke = this.options.circleColor\n      var strokeOpacity = this.options.circleOpacity\n      var strokeWidth = this.options.circleWeight\n      var className = this.options.className + \"-circle\"\n\n      var circle = '<circle class=\"' + className + '\" cx=\"' + cx + '\" cy=\"' + cy + '\" r=\"' + radius +\n          '\" fill=\"' + fill + '\" fill-opacity=\"'+ fillOpacity +\n          '\" stroke=\"' + stroke + '\" stroke-opacity=' + strokeOpacity + '\" stroke-width=\"' + strokeWidth + '\"/>'\n\n      return circle\n  },\n  _createPathDescription: function() {\n      var height = Number(this.options.iconSize.y)\n      var width = Number(this.options.iconSize.x)\n      var weight = Number(this.options.weight)\n      var margin = weight / 2\n\n      var startPoint = \"M \" + margin + \" \" + (width/2) + \" \"\n      var leftLine = \"L \" + (width/2) + \" \" + (height - weight) + \" \"\n      var rightLine = \"L \" + (width - margin) + \" \" + (width/2) + \" \"\n      var arc = \"A \" + (width/4) + \" \" + (width/4) + \" 0 0 0 \" + margin + \" \" + (width/2) + \" Z\"\n\n      var d = startPoint + leftLine + rightLine + arc\n\n      return d\n  },\n  _createPath: function() {\n      var pathDescription = this._createPathDescription()\n      var strokeWidth = this.options.weight\n      var stroke = this.options.color\n      var strokeOpacity = this.options.opacity\n      var fill = this.options.fillColor\n      var fillOpacity = this.options.fillOpacity\n      var className = this.options.className + \"-path\"\n\n      var path = '<path class=\"' + className + '\" d=\"' + pathDescription +\n          '\" stroke-width=\"' + strokeWidth + '\" stroke=\"' + stroke + '\" stroke-opacity=\"' + strokeOpacity +\n          '\" fill=\"' + fill + '\" fill-opacity=\"' + fillOpacity + '\"/>'\n\n      return path\n  },\n  _createSVG: function() {\n      var path = this._createPath()\n      var circle = this._createCircle()\n      var text = this._createText()\n      var className = this.options.className + \"-svg\"\n\n      var style = \"width:\" + this.options.iconSize.x + \"px; height:\" + this.options.iconSize.y + \"px; \" + this.options.style;\n\n      var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" class=\"' + className + '\" style=\"' + style + '\">' + path + circle + text + '</svg>'\n\n      return svg\n  },\n  _createText: function() {\n      var fontSize = this.options.fontSize + \"px\"\n      var fontWeight = this.options.fontWeight\n      var lineHeight = Number(this.options.fontSize)\n\n      var x = this.options.circleAnchor.x\n      var y = this.options.circleAnchor.y + (lineHeight * 0.35) //35% was found experimentally\n      var circleText = this.options.circleText\n      var textColor = this.options.fontColor.replace(\"rgb(\", \"rgba(\").replace(\")\", \",\" + this.options.fontOpacity + \")\")\n\n      var text = '<text text-anchor=\"middle\" x=\"' + x + '\" y=\"' + y + '\" style=\"font-size: ' + fontSize + '; font-weight: ' + fontWeight +'\" fill=\"' + textColor + '\">' + circleText + '</text>'\n\n      return text\n  }\n})\n\nL.divIcon.svgIcon = function(options) {\n  return new L.DivIcon.SVGIcon(options)\n}\n\nL.Marker.SVGMarker = L.Marker.extend({\n  options: {\n      \"iconFactory\": L.divIcon.svgIcon,\n      \"iconOptions\": {}\n  },\n  initialize: function(latlng, options) {\n      options = L.Util.setOptions(this, options)\n      options.icon = options.iconFactory(options.iconOptions)\n      this._latlng = latlng\n  },\n  onAdd: function(map) {\n      L.Marker.prototype.onAdd.call(this, map)\n  },\n  setStyle: function(style) {\n      if (this._icon) {\n          var svg = this._icon.children[0]\n          var iconBody = this._icon.children[0].children[0]\n          var iconCircle = this._icon.children[0].children[1]\n\n          if (style.color && !style.iconOptions) {\n              var stroke = style.color.replace(\"rgb\",\"rgba\").replace(\")\", \",\"+this.options.icon.options.opacity+\")\")\n              var fill = style.color.replace(\"rgb\",\"rgba\").replace(\")\", \",\"+this.options.icon.options.fillOpacity+\")\")\n              iconBody.setAttribute(\"stroke\", stroke)\n              iconBody.setAttribute(\"fill\", fill)\n              iconCircle.setAttribute(\"stroke\", stroke)\n\n              this.options.icon.fillColor = fill\n              this.options.icon.color = stroke\n              this.options.icon.circleColor = stroke\n          }\n          if (style.opacity) {\n              this.setOpacity(style.opacity)\n          }\n          if (style.iconOptions) {\n              if (style.color) { style.iconOptions.color = style.color }\n              var iconOptions = L.Util.setOptions(this.options.icon, style.iconOptions)\n              this.setIcon(L.divIcon.svgIcon(iconOptions))\n          }\n      }\n  }\n})\n\nL.marker.svgMarker = function(latlng, options) {\n  return new L.Marker.SVGMarker(latlng, options)\n}\n\nL.DivIcon.SVGIcon.IndicatorIcon = L.DivIcon.SVGIcon.extend({\n  _createCircle() {\n      const circle = L.DivIcon.SVGIcon.prototype._createCircle.call(this);\n\n      const cx = Number(this.options.circleAnchor.x)\n      const cy = Number(this.options.circleAnchor.y)\n      const radius = this.options.iconSize.x / 2 * Number(this.options.circleRatio)\n\n      const circum = Math.PI * radius;\n      const pieSize = this.options.loadRate * circum;\n\n      const notif = `<circle r=\"3\" cx=\"${5}\" cy=\"${5}\"\n        style=\"\n          fill: red;\n          stroke: none;\n        \"\n      >\n      </circle>`\n\n      const pie = `\n        <circle r=\"${radius / 2}\" cx=\"${cx}\" cy=\"${cy}\"\n          style=\"\n            transform: rotateZ(-90deg);\n            transform-origin: ${cx}px ${cy}px;\n            fill: none;\n            stroke-width: ${radius};\n            stroke: rgb(38, 166, 91);\n            stroke-dasharray: ${pieSize} ${circum};\n            \"\n        >\n        </circle>`;\n\n      return this.options.notif ? circle + pie + notif : circle + pie;\n  },\n\n  _createSVG: function() {\n    var path = this._createPath()\n    var circle = this._createCircle()\n    var text = this._createText()\n    var className = this.options.className + \"-svg\"\n\n    var style = \"width:\" + this.options.iconSize.x + \"px; height:\" + this.options.iconSize.y + \"px;\";\n\n    var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" class=\"' + className + '\" style=\"' + style + '\">' + path + circle + text + '</svg>'\n\n    return svg\n},\n});\n","import moment from 'moment-timezone';\nimport qs from 'qs';\n\nconst { REACT_APP_NUCLEAR_MONITOR_API } = process.env;\n\nasync function doFetch(...args) {\n  const res = await fetch(...args);\n\n  if (!res.ok) {\n    throw new Error('Fetch error');\n  }\n  return res;\n}\n\nexport async function getRivers() {\n  return Promise.all(\n    ['garonne', 'loire', 'meuse', 'moselle', 'rhin', 'rhone', 'seine'].map(\n      river => fetch(`./rivers/${river}.json`).then(res => res.json()),\n    ),\n  );\n}\n\nexport async function getPlants() {\n  const res = await doFetch(`${REACT_APP_NUCLEAR_MONITOR_API}/plants`);\n  const data = await res.json();\n\n  return data;\n}\n\nexport async function getReactors() {\n  const res = await doFetch(`${REACT_APP_NUCLEAR_MONITOR_API}/reactors`);\n  const data = await res.json();\n\n  return data;\n}\n\nexport async function getProductions() {\n  const res = await doFetch(`${REACT_APP_NUCLEAR_MONITOR_API}/productions`);\n  const data = await res.json();\n\n  return data;\n}\n\nexport async function getUnavailabilities() {\n  const res = await doFetch(\n    `${REACT_APP_NUCLEAR_MONITOR_API}/unavailabilities`,\n  );\n  const data = await res.json();\n\n  return data;\n}\n\nconst START_URL =\n  'https://opendata.reseaux-energies.fr/api/records/1.0/search/?';\nconst DATE_FORMAT = 'YYYY-MM-DD';\nexport async function getMix() {\n  const res = await fetch(\n    `${START_URL}${qs.stringify({\n      dataset: 'eco2mix-national-tr',\n      rows: 96,\n      sort: '-date_heure',\n      'refine.date': moment()\n        .tz('Europe/Paris')\n        .format(DATE_FORMAT),\n    })}`,\n  );\n  const data = await res.json();\n\n  const mix = data.records.map(({ fields }) => ({\n    isOk: !!fields.nucleaire,\n    datetime: moment(fields.date_heure).unix(),\n    wind: Number(fields.eolien),\n    solar: Number(fields.solaire),\n    nuclear: Number(fields.nucleaire),\n    gas: Number(fields.gaz),\n    oil: Number(fields.fioul),\n    coal: Number(fields.charbon),\n    consumption: Number(fields.consommation),\n    biomass: Number(fields.bioenergies),\n    hydroPumped: Number(fields.pompage),\n    hydro: Number(fields.hydraulique),\n    imports: Math.max(0, Number(fields.ech_physiques)),\n    exports: Math.min(0, Number(fields.ech_physiques)),\n  }));\n\n  return mix;\n}\n","import { values, indexBy, prop } from 'ramda';\n\nimport { getProductions } from '../api';\n\nexport const PRODUCTIONS_LOAD_ACTION = 'PRODUCTIONS_LOAD_ACTION';\nexport const PRODUCTIONS_RECEIVE_ACTION = 'PRODUCTIONS_RECEIVE_ACTION';\n\nfunction loadProductionsAction() {\n  return { type: PRODUCTIONS_LOAD_ACTION };\n}\n\nfunction receiveProductionsAction({ data, errors }) {\n  return { type: PRODUCTIONS_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllProductions() {\n  return function dispatchLoadAllProductions(dispatch) {\n    dispatch(loadProductionsAction());\n    return getProductions()\n      .then(data =>\n        dispatch(\n          receiveProductionsAction({\n            data: indexBy(prop('eicCode'), data),\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) ||\n          dispatch(receiveProductionsAction({ errors })),\n      );\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction productionsReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case PRODUCTIONS_LOAD_ACTION:\n      return { ...state, loading: true };\n    case PRODUCTIONS_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function productionsLoadedSelector(state) {\n  return state.productions.loaded;\n}\n\nexport function productionsErrorSelector(state) {\n  return state.productions.errors;\n}\n\nexport function productionsSelector(state) {\n  return values(state.productions.data);\n}\n\nexport function productionSelector(eicCode, state) {\n  return (\n    state.productions.data[eicCode] && state.productions.data[eicCode].values\n  );\n}\n\nexport default productionsReducer;\n","import { values, indexBy, prop } from 'ramda';\n\nimport { getUnavailabilities } from '../api';\n\nexport const UNAVAILABILITIES_LOAD_ACTION = 'UNAVAILABILITIES_LOAD_ACTION';\nexport const UNAVAILABILITIES_RECEIVE_ACTION =\n  'UNAVAILABILITIES_RECEIVE_ACTION';\n\nfunction loadUnavailabilitiesAction() {\n  return { type: UNAVAILABILITIES_LOAD_ACTION };\n}\n\nfunction receiveUnavailabilitiesAction({ data, errors }) {\n  return { type: UNAVAILABILITIES_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllUnavailabilities() {\n  return function dispatchLoadAllUnavailabilities(dispatch) {\n    dispatch(loadUnavailabilitiesAction());\n    return getUnavailabilities()\n      .then(data =>\n        dispatch(\n          receiveUnavailabilitiesAction({\n            data: indexBy(prop('eicCode'), data),\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) ||\n          dispatch(receiveUnavailabilitiesAction({ errors })),\n      );\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction unavailabilitiesReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case UNAVAILABILITIES_LOAD_ACTION:\n      return { ...state, loading: true };\n    case UNAVAILABILITIES_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function unavailabilitiesLoadedSelector(state) {\n  return state.unavailabilities.loaded;\n}\n\nexport function unavailabilitiesErrorSelector(state) {\n  return state.productions.errors;\n}\n\nexport function unavailabilitiesSelector(state) {\n  return values(state.unavailabilities.data);\n}\n\nexport function unavalabilitySelector(eicCode, state) {\n  return state.unavailabilities.data[eicCode];\n}\n\nexport default unavailabilitiesReducer;\n","import { values, indexBy, prop, sortBy } from 'ramda';\n\nimport { getReactors } from '../api';\n\nimport { productionSelector } from './productions';\nimport { unavalabilitySelector } from './unavailabilities';\n\nexport const REACTORS_LOAD_ACTION = 'REACTORS_LOAD_ACTION';\nexport const REACTORS_RECEIVE_ACTION = 'REACTORS_RECEIVE_ACTION';\n\nfunction loadReactorsAction() {\n  return { type: REACTORS_LOAD_ACTION };\n}\n\nfunction receiveReactorsAction({ data, errors }) {\n  return { type: REACTORS_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllReactors() {\n  return function dispatchLoadAllReactors(dispatch) {\n    dispatch(loadReactorsAction());\n    return getReactors()\n      .then(data =>\n        dispatch(\n          receiveReactorsAction({\n            data: indexBy(prop('eicCode'), data),\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) || dispatch(receiveReactorsAction({ errors })),\n      );\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction reactorsReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case REACTORS_LOAD_ACTION:\n      return { ...state, loading: true };\n    case REACTORS_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function reactorsLoadedSelector(state) {\n  return state.reactors.loaded;\n}\n\nfunction getStatus(unavailability) {\n  if (unavailability) {\n    if (unavailability.type === 'PLANNED_MAINTENANCE') {\n      if (unavailability.availablePower_MW === 0) {\n        return 'PLANNED_STOP';\n      }\n      return 'PLANNED_REDUCTION';\n    }\n    if (unavailability.availablePower_MW === 0) {\n      return 'AUTO_STOP';\n    }\n    return 'UNPLANNED_REDUCTION';\n  }\n  return 'RUNNING';\n}\n\nexport function reactorSelector(eicCode, state) {\n  const reactor = state.reactors.data[eicCode];\n  const dayProductions = productionSelector(eicCode, state);\n  const unavailability = unavalabilitySelector(eicCode, state);\n\n  return {\n    ...reactor,\n    status: getStatus(unavailability),\n    dayProductions,\n    unavailability,\n  };\n}\n\nexport function reactorsSelector(state) {\n  return values(state.reactors.data).map(reactor =>\n    reactorSelector(reactor.eicCode, state),\n  );\n}\n\nexport function reactorsOfPlantSelector(plantId, state) {\n  const reactors = Object.values(state.reactors.data)\n    .filter(reactor => reactor.plantId === plantId)\n    .map(reactor => reactorSelector(reactor.eicCode, state));\n\n  return sortBy(prop('reactorIndex'), reactors);\n}\n\nconst INIT_DATA = {\n  availablePower: 0,\n  totalPower: 0,\n  availableCount: 0,\n  partiallyUnavailableCount: 0,\n  totallyUnavailableCount: 0,\n};\nexport function reactorSetIndicatorsSelector(hourOfDay, state) {\n  const reactors = reactorsSelector(state);\n\n  return reactors.reduce((res, reactor) => {\n    const res2 = {\n      availablePower: 0,\n      availableCount: 0,\n      partially: 0,\n      totally: 0,\n    };\n\n    if (reactor.unavailability) {\n      if (reactor.unavailability.availablePower_MW === 0) {\n        res2.totally = 1;\n      } else {\n        res2.availableCount = 1;\n        res2.partially = 1;\n      }\n      res2.availablePower = reactor.unavailability.availablePower_MW;\n    } else {\n      res2.availableCount = 1;\n      res2.availablePower = reactor.power_MW;\n    }\n\n    return {\n      totalPower: res.totalPower + reactor.power_MW,\n      availablePower: res.availablePower + res2.availablePower,\n      availableCount: res.availableCount + res2.availableCount,\n      totallyUnavailableCount: res.totallyUnavailableCount + res2.totally,\n      partiallyUnavailableCount: res.partiallyUnavailableCount + res2.partially,\n    };\n  }, INIT_DATA);\n}\n\nexport function reactorByPlantAndIndexSelector(\n  { plantId, reactorIndex },\n  state,\n) {\n  const reacto = Object.values(state.reactors.data).find(\n    reactor =>\n      reactor.plantId === plantId && reactor.reactorIndex === reactorIndex,\n  );\n  return reacto && reactorSelector(reacto.eicCode, state);\n}\n\nexport function reactorsOfPlant(plantId, state) {\n  return Object.values(state.reactors.data)\n    .filter(r => r.plantId === plantId)\n    .map(r => reactorSelector(r.eicCode, state));\n}\n\nexport default reactorsReducer;\n","import { values, indexBy, prop } from 'ramda';\n\nimport { getPlants } from '../api';\n\nimport { reactorsOfPlantSelector } from './reactors';\n\nexport const PLANTS_LOAD_ACTION = 'PLANTS_LOAD_ACTION';\nexport const PLANTS_RECEIVE_ACTION = 'PLANTS_RECEIVE_ACTION';\n\nfunction loadPlantsAction() {\n  return { type: PLANTS_LOAD_ACTION };\n}\n\nfunction receivePlantsAction({ data, errors }) {\n  return { type: PLANTS_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllPlants() {\n  return function dispatchLoadAllPlants(dispatch) {\n    dispatch(loadPlantsAction());\n    return getPlants()\n      .then(data =>\n        dispatch(\n          receivePlantsAction({\n            data: indexBy(prop('id'), data),\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) || dispatch(receivePlantsAction({ errors })),\n      );\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction plantsReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case PLANTS_LOAD_ACTION:\n      return { ...state, loading: true };\n    case PLANTS_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function plantsLoadedSelector(state) {\n  return state.plants.loaded;\n}\n\nexport function plantSelector(plantId, state) {\n  return {\n    ...state.plants.data[plantId],\n    reactors: reactorsOfPlantSelector(plantId, state),\n  };\n}\n\nexport function plantsSelector(state) {\n  return values(state.plants.data).map(plant => plantSelector(plant.id, state));\n}\n\nexport default plantsReducer;\n","import { getMix } from '../api';\n\nexport const MIX_LOAD_ACTION = 'MIX_LOAD_ACTION';\nexport const MIX_RECEIVE_ACTION = 'MIX_RECEIVE_ACTION';\n\nfunction loadMixAction() {\n  return { type: MIX_LOAD_ACTION };\n}\n\nfunction receiveMixAction({ data, errors }) {\n  return { type: MIX_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllMix() {\n  return function dispatchLoadAllMix(dispatch) {\n    dispatch(loadMixAction());\n    return getMix()\n      .then(data =>\n        dispatch(\n          receiveMixAction({\n            data,\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) || dispatch(receiveMixAction({ errors })),\n      );\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction mixReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case MIX_LOAD_ACTION:\n      return { ...state, loading: true };\n    case MIX_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function mixLoadedSelector(state) {\n  return state.mix.loaded;\n}\n\nexport function mixSelector(state) {\n  return state.mix.data;\n}\n\nexport default mixReducer;\n","import { getRivers } from '../api';\n\nexport const RIVERS_LOAD_ACTION = 'RIVERS_LOAD_ACTION';\nexport const RIVERS_RECEIVE_ACTION = 'RIVERS_RECEIVE_ACTION';\n\nfunction loadRiversAction() {\n  return { type: RIVERS_LOAD_ACTION };\n}\n\nfunction receiveRiversAction({ data, errors }) {\n  return { type: RIVERS_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllRivers() {\n  return function dispatchLoadAllRivers(dispatch) {\n    dispatch(loadRiversAction());\n    return getRivers()\n      .then(data =>\n        dispatch(\n          receiveRiversAction({\n            data,\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) || dispatch(receiveRiversAction({ errors })),\n      );\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction riversReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case RIVERS_LOAD_ACTION:\n      return { ...state, loading: true };\n    case RIVERS_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function riversLoadedSelector(state) {\n  return state.rivers.loaded;\n}\n\nexport function riversSelector(state) {\n  return state.rivers.data;\n}\n\nexport default riversReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport plantsReducer from './plants';\nimport reactorsReducer from './reactors';\nimport productionsReducer from './productions';\nimport mixReducer from './mix';\nimport unavailabilitiesReducer from './unavailabilities';\nimport riversReducer from './rivers';\n\nconst rootReducer = combineReducers({\n  // ...reducers,\n  plants: plantsReducer,\n  reactors: reactorsReducer,\n  productions: productionsReducer,\n  mix: mixReducer,\n  unavailabilities: unavailabilitiesReducer,\n  rivers: riversReducer,\n});\n\nconst enhancers = [applyMiddleware(thunk)];\nconst composeEnhancers = composeWithDevTools({\n  // actionSanitizer,\n  // stateSanitizer,\n});\nconst enhancer = composeEnhancers(...enhancers);\n\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nfunction HomeView() {\n  return (\n    <div className=\"HomeView\">\n      <Title level={2}>Bienvenue</Title>\n      <div>\n        <strong>Nuclear monitor</strong>\n        {' vous permet de consulter:'}\n        <ul>\n          <li>\n            {'le '}\n            <Link to=\"/mix\">mix</Link>\n            {\" de production d'électricité\"}\n          </li>\n          <li>\n            {\"l'état d'une \"}\n            <Link to=\"/plant/GRAVELINES\">centrale</Link>\n            {\" ou d'un \"}\n            <Link to=\"/plant/BLAYAIS/3\">réacteur</Link>\n          </li>\n        </ul>\n      </div>\n      <div className=\"HomeView__marker\">\n        Cliquer sur une centrale pour en savoir plus...\n      </div>\n    </div>\n  );\n}\n\nexport default HomeView;\n","import React from 'react';\n\nimport { Comment, Avatar, Icon } from 'antd';\n\nimport './index.css';\n\nfunction Content() {\n  return (\n    <div>\n      <p>\n        {'Ce site est développé par '}\n        <a\n          href=\"https://github.com/ewoken\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          ewoken\n        </a>\n        .\n        <br />\n        {'Open-source, vous pouvez consulter le code source ici: '}\n        <a\n          href=\"https://github.com/ewoken/nuclear-monitor\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon type=\"github\" />\n          {' nuclear-monitor'}\n        </a>\n      </p>\n\n      <p>\n        {'Vous pouvez aussi me suivre sur Twitter: '}\n        <br />\n        <a\n          href=\"https://twitter.com/Yugnat95\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon type=\"twitter\" />\n          {' @Yugnat95'}\n        </a>\n      </p>\n    </div>\n  );\n}\n\nfunction AboutView() {\n  return (\n    <div className=\"AboutView\">\n      <h2>À propos</h2>\n      <div>\n        <Comment\n          avatar={\n            // eslint-disable-next-line react/jsx-wrap-multilines\n            <a\n              href=\"https://github.com/ewoken\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Avatar src=\"https://avatars3.githubusercontent.com/u/8919530?s=460&v=4\" />\n            </a>\n          }\n          // author={<a href=\"https://github.com/ewoken\">Ewoken</a>}\n          content={<Content />}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default AboutView;\n","// eslint-disable-next-line import/prefer-default-export\nexport function testScreenType(size) {\n  const windowWidth = window.innerWidth;\n\n  switch (size) {\n    case 'xs':\n      return windowWidth < 576;\n    case 'sm':\n      return windowWidth >= 576;\n    case 'md':\n      return windowWidth >= 768;\n    case 'lg':\n      return windowWidth >= 992;\n    case 'xl':\n      return windowWidth >= 1200;\n    case 'xxl':\n      return windowWidth >= 1600;\n    default:\n      return false;\n  }\n}\n\nexport function getWindowHeight() {\n  const { body } = document;\n  const html = document.documentElement;\n  return Math.max(\n    body.scrollHeight,\n    body.offsetHeight,\n    html.clientHeight,\n    html.scrollHeight,\n    html.offsetHeight,\n  );\n}\n\nexport function format(v) {\n  // eslint-disable-next-line no-restricted-globals\n  return isNaN(v) ? '-' : `${v}`;\n}\n\nexport const HEADER_HEIGHT = 64;\nexport const DRAWER_WIDTH = 400;\n","export const META = {\n  hydroPumped: {\n    label: 'POMPAGE',\n    color: '#114774',\n    stackId: '2',\n  },\n  biomass: {\n    label: 'BIOENERG.',\n    color: '#166a57',\n  },\n  wind: {\n    label: 'EOLIEN',\n    color: '#74cdb9',\n  },\n  solar: {\n    label: 'SOLAIRE',\n    color: '#f27406',\n  },\n  nuclear: {\n    label: 'NUCLEAIRE',\n    color: '#f5b300',\n  },\n  hydro: {\n    label: 'HYDRAU.',\n    color: '#2772b2',\n  },\n  gas: {\n    label: 'GAS',\n    color: '#f30a0a',\n  },\n  coal: {\n    label: 'CHARBON',\n    color: '#ac8c35',\n  },\n  oil: {\n    label: 'FIOUL',\n    color: '#8356a2',\n  },\n  exports: {\n    label: 'EXPORTS',\n    color: '#969696',\n    stackId: '2',\n  },\n  imports: {\n    label: 'IMPORTS',\n    color: '#969696',\n  },\n};\n\nexport const GRAPH_ORDER = [\n  'hydroPumped',\n  'exports',\n  'biomass',\n  'nuclear',\n  'hydro',\n  'gas',\n  'coal',\n  'oil',\n  'wind',\n  'solar',\n  'imports',\n];\n\nexport const HEADER_ORDER = [\n  'oil',\n  'coal',\n  'gas',\n  'hydro',\n  'nuclear',\n  'solar',\n  'wind',\n  'biomass',\n  'hydroPumped',\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport debounce from 'lodash.debounce';\nimport moment from 'moment';\n\nimport { Slider } from 'antd';\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  Line,\n  ReferenceLine,\n  YAxis,\n  Area,\n} from 'recharts';\n\nimport { MixType } from '../../../utils/types';\n\nimport { META, HEADER_ORDER, GRAPH_ORDER } from './config';\n\nfunction format(v) {\n  // eslint-disable-next-line no-restricted-globals\n  return isNaN(v) ? '-' : `${v}`;\n}\n\nfunction MixComponent({ mix, slotIndex, setSlotIndex }) {\n  return (\n    <div className=\"MixComponent\">\n      <div className=\"MixComponent__header\">\n        {HEADER_ORDER.map(key => (\n          <div\n            key={key}\n            className=\"MixComponent__header__item\"\n            style={{\n              backgroundColor: META[key].color,\n            }}\n          >\n            {format(Math.abs(mix[slotIndex][key]))}\n            <span className=\"MixComponent__header__item__small\"> MW</span>\n            <br />\n            <span className=\"MixComponent__header__item__small\">\n              {META[key].label}\n            </span>\n          </div>\n        ))}\n        <div\n          className=\"MixComponent__header__item\"\n          style={{\n            backgroundColor: META.imports.color,\n          }}\n        >\n          {format(Math.max(mix[slotIndex].imports, -mix[slotIndex].exports))}\n          <span className=\"MixComponent__header__item__small\"> MW</span>\n          <br />\n          <span className=\"MixComponent__header__item__small\">\n            {mix[slotIndex].exports < 0\n              ? META.exports.label\n              : META.imports.label}\n          </span>\n        </div>\n        <div className=\"MixComponent__header__item\" />\n        <div\n          className=\"MixComponent__header__item\"\n          style={{ backgroundColor: 'black' }}\n        >\n          {format(mix[slotIndex].consumption)}\n          <span className=\"MixComponent__header__item__small\"> MW</span>\n          <br />\n          <span className=\"MixComponent__header__item__small\">CONSO</span>\n        </div>\n      </div>\n\n      <div className=\"MixComponent__chart\">\n        <ResponsiveContainer>\n          <ComposedChart data={mix}>\n            <YAxis axisLine mirror />\n            {GRAPH_ORDER.map(key => (\n              <Area\n                key={key}\n                dataKey={key}\n                type=\"monotone\"\n                activeDot={false}\n                stroke=\"none\"\n                fill={META[key].color}\n                stackId={META[key].stackId || '1'}\n              />\n            ))}\n            <Line\n              dataKey=\"consumption\"\n              dot={false}\n              activeDot={false}\n              type=\"monotone\"\n              stroke=\"black\"\n            />\n            <ReferenceLine x={slotIndex} stroke=\"#4b4e52\" />\n          </ComposedChart>\n        </ResponsiveContainer>\n      </div>\n      <div className=\"MixComponent__sliderContainer\">\n        <Slider\n          min={0}\n          max={95}\n          style={{ width: '100%' }}\n          defaultValue={slotIndex}\n          // value={slotIndex}\n          onChange={debounce(setSlotIndex, 400)}\n          tipFormatter={\n            value =>\n              moment()\n                .startOf('day')\n                .add(value * 15, 'minutes')\n                .format('HH:mm')\n            // eslint-disable-next-line react/jsx-curly-newline\n          }\n        />\n      </div>\n    </div>\n  );\n}\n\nMixComponent.propTypes = {\n  mix: PropTypes.arrayOf(MixType).isRequired,\n  slotIndex: PropTypes.number.isRequired,\n  setSlotIndex: PropTypes.func.isRequired,\n};\n\nexport default MixComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { withState, compose } from 'recompose';\n\nimport { Row, Col } from 'antd';\n\nimport moment from 'moment-timezone';\n\nimport { format } from '../../utils/index';\nimport { MixType } from '../../utils/types';\nimport { mixSelector } from '../../store/mix';\nimport { reactorSetIndicatorsSelector } from '../../store/reactors';\n\nimport './index.css';\nimport MixComponent from './components/MixComponent';\n\nfunction MixView(props) {\n  const { mix, slotIndex, setSlotIndex, reactorSetIndicators } = props;\n  const {\n    totalPower,\n    availablePower,\n    availableCount,\n    partiallyUnavailableCount,\n    totallyUnavailableCount,\n  } = reactorSetIndicators;\n\n  const total = Math.floor(totalPower / 1000);\n  const available = Math.floor(availablePower);\n  const availabilityRate = Math.floor((100 * availablePower) / totalPower);\n  const prodAvailableRate = Math.floor(\n    (100 * mix[slotIndex].nuclear) / availablePower,\n  );\n  const date = moment()\n    .tz('Europe/Paris')\n    .hour(Math.floor(slotIndex / 4))\n    .minutes(15 * (slotIndex % 4))\n    .format('DD/MM/YYYY HH:mm');\n\n  return (\n    <div className=\"MixView\">\n      <Row>\n        <Col span={24}>\n          <MixComponent\n            mix={mix}\n            slotIndex={slotIndex}\n            setSlotIndex={setSlotIndex}\n          />\n          <div className=\"MixView__date\">{date}</div>\n          <div className=\"MixView__nuclear\">\n            <strong>{`Parc nucléaire (${total} GW):`}</strong>\n            <div className=\"MixView__nuclear__indicator\">\n              <div\n                className=\"MixView__nuclear__indicator__prod\"\n                style={{\n                  width: `${((mix[slotIndex].nuclear || 0) / totalPower) *\n                    100}%`,\n                }}\n              >\n                <div>{`Prod: ${format(mix[slotIndex].nuclear)} MW`}</div>\n                <div>{`${format(prodAvailableRate)}% du dispo.`}</div>\n              </div>\n              <div\n                className=\"MixView__nuclear__indicator__available\"\n                style={{\n                  width: `${((availablePower - (mix[slotIndex].nuclear || 0)) /\n                    totalPower) *\n                    100}%`,\n                }}\n              />\n            </div>\n            <div className=\"MixView__nuclear__available\">\n              {`${availableCount} réacteurs disponibles: ${available} MW (${availabilityRate}%)`}\n            </div>\n            <div>\n              {`dont ${partiallyUnavailableCount} partiellement indisponible${\n                partiallyUnavailableCount > 1 ? 's' : ''\n              }`}\n            </div>\n            <div className=\"MixView__nuclear__stopped\">\n              {`${totallyUnavailableCount} réacteur${\n                totallyUnavailableCount > 1 ? 's' : ''\n              } arrêté${totallyUnavailableCount > 1 ? 's' : ''}`}\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nMixView.propTypes = {\n  mix: PropTypes.arrayOf(MixType).isRequired,\n  slotIndex: PropTypes.number.isRequired,\n  setSlotIndex: PropTypes.func.isRequired,\n  reactorSetIndicators: PropTypes.shape({\n    availablePower: PropTypes.number.isRequired,\n    totalPower: PropTypes.number.isRequired,\n    availableCount: PropTypes.number.isRequired,\n    totallyUnavailableCount: PropTypes.number.isRequired,\n    partiallyUnavailableCount: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nconst withStateEnhancer = withState('slotIndex', 'setSlotIndex', () =>\n  Math.max(\n    Math.floor(moment().diff(moment().startOf('day'), 'minutes') / 15) - 8,\n    0,\n  ),\n);\n\nconst connectEnhancer = connect((state, props) => ({\n  mix: mixSelector(state),\n  reactorSetIndicators: reactorSetIndicatorsSelector(\n    Math.floor(props.slotIndex / 4),\n    state,\n  ),\n}));\n\nexport default compose(\n  withStateEnhancer,\n  connectEnhancer,\n)(MixView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\n\nconst { ReactorType } = require('../../../utils/types');\n\nfunction StatusIndicator(props) {\n  const style = { fontSize: 16 };\n  switch (props.status) {\n    case 'PLANNED_STOP':\n      return (\n        <Icon\n          type=\"tool\"\n          theme=\"filled\"\n          style={{ ...style, color: '#404040' }}\n        />\n      );\n    case 'UNPLANNED_REDUCTION':\n    case 'AUTO_STOP':\n      return (\n        <Icon\n          type=\"exclamation-circle\"\n          theme=\"twoTone\"\n          twoToneColor=\"red\"\n          style={style}\n        />\n      );\n    case 'PLANNED_REDUCTION':\n      return <Icon type=\"info-circle\" theme=\"twoTone\" style={style} />;\n    default:\n      return null;\n  }\n}\nStatusIndicator.propTypes = {\n  status: PropTypes.string.isRequired,\n};\n\nfunction ReactorIndicator(props) {\n  const { reactor } = props;\n  const prods = reactor.dayProductions;\n  const currentProd = prods[prods.length - 1];\n  const absLoad = Math.max(0, currentProd.value);\n  const part = Math.floor((absLoad / reactor.power_MW) * 100);\n\n  return (\n    <div\n      className=\"ReactIndicator\"\n      style={{\n        background: `linear-gradient(0deg, #26a65b 0%, #26a65b ${part}%, rgba(255,255,255,1) ${part}%)`,\n      }}\n    >\n      <div className=\"ReactIndicator__status\">\n        <StatusIndicator status={reactor.status} />\n      </div>\n      <div className=\"ReactIndicator__prod\">\n        <strong>{Math.floor(absLoad)}</strong>\n      </div>\n      <div className=\"ReactIndicator__number\">{reactor.reactorIndex}</div>\n    </div>\n  );\n}\n\nReactorIndicator.propTypes = {\n  reactor: ReactorType.isRequired,\n};\n\nexport default ReactorIndicator;\n","import React from 'react';\n\nimport { ResponsiveContainer, AreaChart, XAxis, YAxis, Area } from 'recharts';\n\nimport { ReactorType } from '../../../utils/types';\n\nconst TICKS = [0, 12, 24];\n\nfunction tickFormatter(value) {\n  return value ? `${value}:00` : '00:00';\n}\n\nfunction ReactorLoadChart(props) {\n  const { reactor } = props;\n\n  const endOfDay = Array.from({\n    length: 24 - reactor.dayProductions.length + 1,\n  }).map(() => ({ value: null }));\n  const data = reactor.dayProductions\n    .map(d => ({ value: Math.max(d.value, 0) }))\n    .concat(endOfDay);\n\n  return (\n    <div key={reactor.name} className=\"ReactorLoadChart\">\n      <div>Production (MW)</div>\n      <div className=\"ReactorLoadChart__chart\">\n        <ResponsiveContainer>\n          <AreaChart data={data}>\n            <XAxis\n              domain={[0, 24]}\n              ticks={TICKS}\n              tickFormatter={tickFormatter}\n            />\n            <YAxis />\n            <Area\n              dataKey=\"value\"\n              dot={false}\n              activeDot={false}\n              type=\"monotone\"\n              stroke=\"rgb(28, 114, 64)\"\n              fill=\"rgb(38, 166, 91)\"\n              fillOpacity={1}\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n}\n\nReactorLoadChart.propTypes = {\n  reactor: ReactorType.isRequired,\n};\n\nexport default ReactorLoadChart;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { Descriptions, Icon } from 'antd';\nimport moment from 'moment-timezone';\n\nimport { ReactorType } from '../../../utils/types';\n\nimport ReactorLoadChart from './ReactorLoadChart';\n\nfunction shouldDisplayLoadGraph(reactor) {\n  if (!reactor.unavailability) {\n    return true;\n  }\n  const startDate = moment(reactor.unavailability.startDate);\n\n  return (\n    reactor.unavailability.availablePower_MW > 0 ||\n    startDate.isAfter(moment().startOf('day')) ||\n    moment().diff(startDate, 'hours') < 6\n  );\n}\n\nfunction ReactorDetails({ reactor }) {\n  return (\n    <div className=\"ReactorDetails\">\n      <Descriptions\n        title={\n          // eslint-disable-next-line react/jsx-wrap-multilines\n          <div className=\"ReactorDetails__header\">\n            <div>{reactor.name}</div>\n            <div>\n              <Link to={`/plant/${reactor.plantId}`}>\n                <Icon type=\"caret-up\" theme=\"filled\" />\n              </Link>\n            </div>\n          </div>\n        }\n        size=\"small\"\n        bordered\n        column={1}\n      >\n        <Descriptions.Item label=\"Début d'exploitation\">\n          {reactor.exploitationStartYear}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Puissance nominale\">\n          {`${reactor.power_MW} MWe (${reactor.stage})`}\n        </Descriptions.Item>\n      </Descriptions>\n\n      {shouldDisplayLoadGraph(reactor) && (\n        <ReactorLoadChart reactor={reactor} />\n      )}\n\n      {reactor.unavailability && (\n        <Descriptions\n          title=\"Indisponibilité\"\n          size=\"small\"\n          bordered\n          column={1}\n          style={{ marginTop: 10 }}\n        >\n          <Descriptions.Item label=\"Début\">\n            {moment(reactor.unavailability.startDate)\n              .tz('Europe/Paris')\n              .format('DD/MM/YYYY HH:mm')}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Fin\">\n            {moment(reactor.unavailability.endDate)\n              .tz('Europe/Paris')\n              .format('DD/MM/YYYY HH:mm')}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Type\">\n            {reactor.unavailability.type === 'PLANNED_MAINTENANCE'\n              ? 'Plannifiée'\n              : 'Fortuite'}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Puissance disponible\">\n            {`${reactor.unavailability.availablePower_MW} MW`}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Description\">\n            {reactor.unavailability.reason}\n          </Descriptions.Item>\n        </Descriptions>\n      )}\n    </div>\n  );\n}\n\nReactorDetails.propTypes = {\n  reactor: ReactorType.isRequired,\n};\n\nexport default ReactorDetails;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { Carousel, Icon } from 'antd';\nimport { PlantType } from '../../../utils/types';\n\nfunction PlantPictures(props) {\n  const { plant } = props;\n\n  return (\n    <div className=\"PlantPictures\">\n      <div className=\"PlantPictures__header\">\n        <h3>Photos</h3>\n        <div>\n          <Link to={`/plant/${plant.id}`}>\n            <Icon type=\"caret-up\" theme=\"filled\" />\n          </Link>\n        </div>\n      </div>\n\n      <Carousel>\n        {plant.pictures.map(picture => (\n          <img key={picture} alt={plant.name} src={picture} />\n        ))}\n      </Carousel>\n    </div>\n  );\n}\n\nPlantPictures.propTypes = {\n  plant: PlantType.isRequired,\n};\n\nexport default PlantPictures;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n  Route, // as BaseRoute,\n  Switch,\n  Link,\n  Redirect,\n} from 'react-router-dom';\nimport { Row, Col, Select, Tag, Dropdown, Menu, Button } from 'antd';\n\nimport { plantSelector, plantsSelector } from '../../store/plants';\nimport { PlantType, ReactorType } from '../../utils/types';\nimport ReactorIndicator from './components/ReactorIndicator';\nimport {\n  reactorsOfPlantSelector,\n  reactorByPlantAndIndexSelector,\n} from '../../store/reactors';\nimport ReactorDetails from './components/ReactorDetails';\nimport PlantPictures from './components/PlantPictures';\n\nimport './index.css';\n\nconst ReactorDetailsContainer = connect((state, props) => {\n  return {\n    reactor: reactorByPlantAndIndexSelector(\n      {\n        plantId: props.match.params.plantId,\n        reactorIndex: Number(props.match.params.reactorIndex),\n      },\n      state,\n    ),\n  };\n})(ReactorDetails);\n\nfunction plantMenu(plant) {\n  return (\n    <Menu>\n      <Menu.Item>\n        <a href={plant.wikiLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          {/* <img className=\"PlantView__wiki\" src=\"wiki.svg\" alt=\"wiki\" /> */}\n          Wikipedia\n        </a>\n      </Menu.Item>\n      <Menu.Item>\n        <a href={plant.asnLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          {/* <img className=\"PlantView__asn\" src=\"logo-asn.png\" alt=\"asn\" /> */}\n          ASN\n        </a>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nfunction PlantView(props) {\n  const { plants, currentPlant, reactors, goTo } = props;\n\n  if (!currentPlant) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"PlantView\">\n      <Row>\n        <Col span={24}>\n          <div className=\"PlantView__firstRow\">\n            <div className=\"PlantView__firstRow__left\">\n              <Select\n                value={currentPlant.id}\n                size=\"large\"\n                onChange={id => goTo(`/plant/${id}`)}\n                style={{ width: '9em' }}\n              >\n                {plants.map(plant => (\n                  <Select.Option key={plant.id} value={plant.id}>\n                    {plant.name}\n                  </Select.Option>\n                ))}\n              </Select>\n              <span>\n                <Tag style={{ marginLeft: '8px' }}>\n                  {currentPlant.coolingType === 'SEA' ? 'Mer' : 'Fleuve'}\n                </Tag>\n              </span>\n            </div>\n            <div className=\"PlantView__firstRow__right\">\n              <Link to={`/plant/${currentPlant.id}/pictures`}>\n                <Button icon=\"picture\" style={{ marginRight: 5 }} />\n              </Link>\n              <Dropdown\n                overlay={plantMenu(currentPlant)}\n                trigger={['click']}\n                placement=\"bottomRight\"\n              >\n                <Button icon=\"more\" />\n              </Dropdown>\n            </div>\n          </div>\n\n          <div className=\"PlantView__schema\">\n            <div>Production (MW)</div>\n            <div className=\"PlantView__reactors\">\n              {reactors.map(reactor => (\n                <Link\n                  key={reactor.eicCode}\n                  to={`/plant/${currentPlant.id}/${reactor.reactorIndex}`}\n                >\n                  <ReactorIndicator reactor={reactor} />\n                </Link>\n              ))}\n            </div>\n            <div\n              className=\"PlantView__cooling\"\n              style={{ width: reactors.length * 50 }}\n            >\n              {currentPlant.coolingPlace}\n            </div>\n          </div>\n          <div className=\"PlantView__footer\">\n            <Switch>\n              <Route\n                path=\"/plant/:plantId/pictures\"\n                component={() => <PlantPictures plant={currentPlant} />}\n              />\n              <Route\n                path=\"/plant/:plantId/:reactorIndex\"\n                component={ReactorDetailsContainer}\n              />\n              <Route\n                component={() => (\n                  <small>(Cliquer sur un réacteur pour plus de détails)</small>\n                )}\n              />\n            </Switch>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nPlantView.propTypes = {\n  plants: PropTypes.arrayOf(PlantType).isRequired,\n  currentPlant: PlantType.isRequired,\n  reactors: PropTypes.arrayOf(ReactorType).isRequired,\n  goTo: PropTypes.func.isRequired,\n};\n\nexport default connect((state, props) => {\n  const { plantId } = props.match.params;\n  const reactors = reactorsOfPlantSelector(plantId, state);\n\n  return {\n    plants: plantsSelector(state),\n    currentPlant: plantSelector(plantId, state),\n    goTo: url => props.history.push(url),\n    reactors,\n  };\n})(PlantView);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { omit, equals } from 'ramda';\n\nclass Loader extends Component {\n  componentDidMount() {\n    const { load, ...otherProps } = this.props;\n\n    load(otherProps);\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevOtherProps = omit(['load'], prevProps);\n    const { load, ...otherProps } = this.props;\n\n    if (!equals(prevOtherProps, otherProps)) {\n      load(otherProps);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nLoader.propTypes = {\n  load: PropTypes.func.isRequired,\n};\n\nfunction buildLoader(loadFunction) {\n  return connect(\n    null,\n    { load: loadFunction },\n  )(Loader);\n}\n\nexport default buildLoader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Map, TileLayer, Marker, ZoomControl, GeoJSON } from 'react-leaflet';\n\nimport Leaflet from 'leaflet';\n\nimport {\n  testScreenType,\n  getWindowHeight,\n  HEADER_HEIGHT,\n  DRAWER_WIDTH,\n} from '../utils';\nimport { PlantType } from '../utils/types';\n\nconst ICON_OPTIONS = {\n  fillOpacity: 1,\n  iconSize: [24, 38],\n  circleColor: 'white',\n  circleRatio: 0.6,\n  circleWeight: 3,\n};\n\nfunction hasNotif(plant) {\n  return plant.reactors.reduce((res, reactor) => {\n    if (reactor.status !== 'RUNNING' && reactor.status !== 'PLANNED_STOP') {\n      return true;\n    }\n    return res;\n  }, false);\n}\n\nfunction plantRatio(plant) {\n  const totalProd = plant.reactors.reduce((res, reactor) => {\n    const prod =\n      reactor.dayProductions.length > 0\n        ? Math.max(\n            reactor.dayProductions[reactor.dayProductions.length - 1].value,\n            0,\n          )\n        : 0;\n\n    return res + prod;\n  }, 0);\n  const totalPower = plant.reactors.reduce((res, r) => res + r.power_MW, 0);\n\n  return totalProd / totalPower;\n}\n\nfunction PlantMap(props) {\n  const { plants, currentPlantId, onPlantClick, drawerHeight, rivers } = props;\n  const isSmallScreen = !testScreenType('sm');\n  const height = getWindowHeight();\n  return (\n    <Map\n      center={[48.3, 2]}\n      zoom={isSmallScreen ? 5 : 6}\n      style={{\n        height: isSmallScreen\n          ? height - HEADER_HEIGHT - drawerHeight\n          : height - HEADER_HEIGHT,\n        marginTop: isSmallScreen ? HEADER_HEIGHT + drawerHeight : HEADER_HEIGHT, // TODO\n        marginLeft: isSmallScreen ? 0 : DRAWER_WIDTH,\n      }}\n      zoomControl={false}\n    >\n      <ZoomControl position=\"bottomright\" />\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      {plants.map(plant => (\n        <Marker\n          key={plant.id}\n          title={plant.name}\n          position={plant.coords}\n          icon={\n            plant.id === currentPlantId\n              ? new Leaflet.DivIcon.SVGIcon.IndicatorIcon({\n                  ...ICON_OPTIONS,\n                  color: 'red',\n                  loadRate: plantRatio(plant),\n                  notif: hasNotif(plant),\n                })\n              : new Leaflet.DivIcon.SVGIcon.IndicatorIcon({\n                  ...ICON_OPTIONS,\n                  loadRate: plantRatio(plant),\n                  notif: hasNotif(plant),\n                })\n          }\n          onClick={() => onPlantClick(plant)}\n        />\n      ))}\n      {rivers.map(river => (\n        <GeoJSON data={river} />\n      ))}\n    </Map>\n  );\n}\n\nPlantMap.propTypes = {\n  plants: PropTypes.arrayOf(PlantType).isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  rivers: PropTypes.array.isRequired,\n  currentPlantId: PropTypes.string,\n  onPlantClick: PropTypes.func.isRequired,\n  drawerHeight: PropTypes.number.isRequired,\n};\n\nPlantMap.defaultProps = {\n  currentPlantId: null,\n};\n\nexport default PlantMap;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n  Route, // as BaseRoute,\n  Switch,\n  Redirect,\n  withRouter,\n  Link,\n  matchPath,\n} from 'react-router-dom';\nimport { Layout, Spin, Row, Col, Drawer, Menu, Icon } from 'antd';\n\nimport HomeView from '../views/HomeView';\nimport AboutView from '../views/AboutView';\nimport MixView from '../views/MixView';\nimport PlantView from '../views/PlantView';\n\nimport buildLoader from '../HOC/buildLoader';\nimport {\n  loadAllPlants,\n  plantsLoadedSelector,\n  plantsSelector,\n} from '../store/plants';\n\nimport { loadAllReactors, reactorsLoadedSelector } from '../store/reactors';\nimport {\n  loadAllProductions,\n  productionsLoadedSelector,\n  productionsErrorSelector,\n} from '../store/productions';\nimport { loadAllMix, mixLoadedSelector } from '../store/mix';\n\nimport {\n  testScreenType,\n  HEADER_HEIGHT,\n  DRAWER_WIDTH,\n  getWindowHeight,\n} from '../utils';\nimport { PlantType } from '../utils/types';\nimport PlantMap from './PlantMap';\nimport {\n  loadAllUnavailabilities,\n  unavailabilitiesLoadedSelector,\n  unavailabilitiesErrorSelector,\n} from '../store/unavailabilities';\nimport {\n  loadAllRivers,\n  riversLoadedSelector,\n  riversSelector,\n} from '../store/rivers';\n\nconst PlantsLoader = buildLoader(loadAllPlants);\nconst ReactorsLoader = buildLoader(loadAllReactors);\nconst ProductionsLoader = buildLoader(loadAllProductions);\nconst MixLoader = buildLoader(loadAllMix);\nconst UnavailabilitiesLoader = buildLoader(loadAllUnavailabilities);\nconst RiversLoader = buildLoader(loadAllRivers);\n\nfunction AppLayout(props) {\n  const {\n    isLoaded,\n    plants,\n    goTo,\n    currentPlantId,\n    isFullPage,\n    rivers,\n    error,\n  } = props;\n  const isSmallScreen = !testScreenType('sm');\n  const drawerHeight = isFullPage ? getWindowHeight() - HEADER_HEIGHT : 220;\n\n  return (\n    <div className=\"AppLayout\">\n      <PlantsLoader />\n      <ReactorsLoader />\n      <ProductionsLoader />\n      <MixLoader />\n      <UnavailabilitiesLoader />\n      <RiversLoader />\n      <Spin\n        size=\"large\"\n        spinning={!isLoaded}\n        indicator={\n          // eslint-disable-next-line react/jsx-wrap-multilines\n          <div>\n            <img\n              className=\"AppLayout__loadingIcon\"\n              src=\"loading_icon.svg\"\n              alt=\"\"\n            />\n            {error && (\n              <div className=\"AppLayout__errorMessage\">\n                Une erreur est survenue, veuillez essayer dans quelques minutes\n              </div>\n            )}\n          </div>\n        }\n      >\n        {!isLoaded && <div className=\"AppLayout__splash\" />}\n        {isLoaded && (\n          <Layout>\n            <Drawer\n              title={null}\n              visible\n              placement={isSmallScreen ? 'top' : 'left'}\n              style={{ marginTop: HEADER_HEIGHT }}\n              mask={false}\n              closable={false}\n              width={DRAWER_WIDTH}\n              height={drawerHeight}\n              bodyStyle={{ padding: 0 }}\n              drawerStyle={{ transition: 'height 2s ease' }}\n            >\n              <Switch>\n                <Route path=\"/home\" exact component={HomeView} />\n                <Route path=\"/mix\" exact component={MixView} />\n                <Route path=\"/about\" exact component={AboutView} />\n                <Route path=\"/plant/:plantId\" component={PlantView} />\n                <Route\n                  component={() => <Redirect to={{ pathname: '/home' }} />}\n                />\n              </Switch>\n            </Drawer>\n            <Row>\n              <Col span={24}>\n                <Layout.Header className=\"AppLayout__header\">\n                  <Menu\n                    theme=\"dark\"\n                    mode=\"horizontal\"\n                    className=\"AppLayout__menu\"\n                    selectable={false}\n                  >\n                    <Menu.Item>\n                      <Link to=\"/home\">\n                        <strong>Nuclear monitor</strong>\n                      </Link>\n                    </Menu.Item>\n                    <Menu.SubMenu title={<Icon type=\"menu\" />}>\n                      <Menu.Item key=\"mix\">\n                        <Link to=\"/mix\">Mix</Link>\n                      </Menu.Item>\n                      <Menu.Item key=\"about\">\n                        <Link to=\"/about\">À propos</Link>\n                      </Menu.Item>\n                    </Menu.SubMenu>\n                  </Menu>\n                </Layout.Header>\n\n                <Layout.Content className=\"AppLayout__content\">\n                  <PlantMap\n                    plants={plants}\n                    rivers={rivers}\n                    currentPlantId={currentPlantId}\n                    onPlantClick={plant => goTo(`/plant/${plant.id}`)}\n                    drawerHeight={drawerHeight}\n                  />\n                </Layout.Content>\n              </Col>\n            </Row>\n          </Layout>\n        )}\n      </Spin>\n    </div>\n  );\n}\n\nAppLayout.propTypes = {\n  isLoaded: PropTypes.bool.isRequired,\n  plants: PropTypes.arrayOf(PlantType).isRequired,\n  goTo: PropTypes.func.isRequired,\n  isFullPage: PropTypes.bool.isRequired,\n  currentPlantId: PropTypes.string,\n  // eslint-disable-next-line react/forbid-prop-types\n  rivers: PropTypes.array.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  error: PropTypes.object,\n};\n\nAppLayout.defaultProps = {\n  currentPlantId: null,\n  error: null,\n};\n\n// withRouter needed to prevent blocking\nexport default withRouter(\n  connect((state, props) => {\n    const matchPlantPath = matchPath(props.location.pathname, {\n      path: '/plant/:id',\n      exact: false,\n    });\n    const prodError = productionsErrorSelector(state);\n    const unavailabilitiesError = unavailabilitiesErrorSelector(state);\n\n    return {\n      isLoaded:\n        plantsLoadedSelector(state) &&\n        reactorsLoadedSelector(state) &&\n        productionsLoadedSelector(state) &&\n        mixLoadedSelector(state) &&\n        unavailabilitiesLoadedSelector(state) &&\n        riversLoadedSelector(state),\n      plants: plantsSelector(state),\n      rivers: riversSelector(state),\n      goTo: url => props.history.push(url),\n      currentPlantId: matchPlantPath && matchPlantPath.params.id,\n      isFullPage: !!matchPath(props.location.pathname, {\n        path: ['/plant/:id/:reactorIndex', '/mix'],\n      }),\n      error: prodError || unavailabilitiesError,\n    };\n  })(AppLayout),\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport store from './store';\n\nimport AppLayout from './components/AppLayout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <Route path=\"/\">\n            <AppLayout />\n          </Route>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './utils/svg-icons';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// eslint-disable-next-line react/jsx-filename-extension\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}