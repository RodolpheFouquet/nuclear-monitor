{"version":3,"sources":["utils/svg-icons.js","api/index.js","store/plants.js","store/productions.js","store/unavailabilities.js","store/reactors.js","store/mix.js","store/rivers.js","store/index.js","utils/index.js","views/MixView/components/config.js","views/MixView/components/MixComponent.jsx","views/MixView/index.jsx","views/PlantView/components/ReactorIndicator.jsx","views/PlantView/components/ReactorDetails.jsx","views/PlantView/index.jsx","HOC/buildLoader.js","components/PlantMap.jsx","views/HomeView/index.jsx","components/AppLayout.jsx","App.jsx","serviceWorker.js","index.js","utils/types.js"],"names":["L","DivIcon","SVGIcon","extend","options","point","initialize","Util","setOptions","this","iconSize","circleAnchor","Number","x","circleColor","color","circleFillOpacity","opacity","circleOpacity","circleWeight","weight","fillColor","fontSize","iconAnchor","y","popupAnchor","html","_createSVG","_createCircle","cx","cy","radius","circleRatio","fill","circleFillColor","fillOpacity","stroke","strokeOpacity","strokeWidth","className","_createPathDescription","height","width","margin","_createPath","pathDescription","path","circle","text","_createText","fontWeight","lineHeight","circleText","fontColor","replace","fontOpacity","divIcon","svgIcon","Marker","SVGMarker","latlng","icon","iconFactory","iconOptions","_latlng","onAdd","map","prototype","call","setStyle","style","_icon","children","iconBody","iconCircle","setAttribute","setOpacity","setIcon","marker","svgMarker","REACT_APP_NUCLEAR_MONITOR_API","process","a","Promise","all","river","fetch","then","res","json","data","START_URL","DATE_FORMAT","qs","stringify","dataset","rows","sort","moment","tz","format","mix","records","fields","isOk","nucleaire","datetime","date_heure","unix","wind","eolien","solar","solaire","nuclear","gas","gaz","oil","fioul","coal","charbon","consumption","consommation","biomass","bioenergies","hydroPumped","pompage","hydro","hydraulique","imports","Math","max","ech_physiques","exports","min","PLANTS_LOAD_ACTION","PLANTS_RECEIVE_ACTION","receivePlantsAction","errors","type","initialState","loading","loaded","plantsLoadedSelector","state","plants","plantsSelector","values","plantSelector","plantId","plantsReducer","action","PRODUCTIONS_LOAD_ACTION","PRODUCTIONS_RECEIVE_ACTION","receiveProductionsAction","productionsLoadedSelector","productions","productionsReducer","UNAVAILABILITIES_LOAD_ACTION","UNAVAILABILITIES_RECEIVE_ACTION","receiveUnavailabilitiesAction","unavailabilitiesLoadedSelector","unavailabilities","unavailabilitiesReducer","REACTORS_LOAD_ACTION","REACTORS_RECEIVE_ACTION","receiveReactorsAction","reactorsLoadedSelector","reactors","getStatus","unavailability","availablePower_MW","reactorSelector","eicCode","reactor","dayProductions","productionSelector","unavalabilitySelector","status","INIT_DATA","availablePower","totalPower","availableCount","partiallyUnavailableCount","totallyUnavailableCount","reactorSetIndicatorsSelector","hourOfDay","reactorsSelector","reduce","res2","partially","totally","power_MW","reactorByPlantAndIndexSelector","reactorIndex","reacto","Object","find","reactorsReducer","MIX_LOAD_ACTION","MIX_RECEIVE_ACTION","receiveMixAction","mixLoadedSelector","mixSelector","mixReducer","RIVERS_LOAD_ACTION","RIVERS_RECEIVE_ACTION","receiveRiversAction","riversLoadedSelector","rivers","riversSelector","riversReducer","rootReducer","combineReducers","enhancers","applyMiddleware","thunk","enhancer","composeWithDevTools","store","createStore","testScreenType","size","windowWidth","window","innerWidth","getWindowHeight","body","document","documentElement","scrollHeight","offsetHeight","clientHeight","v","isNaN","HEADER_HEIGHT","DRAWER_WIDTH","META","label","stackId","GRAPH_ORDER","HEADER_ORDER","MixComponent","slotIndex","setSlotIndex","key","backgroundColor","abs","axisLine","mirror","dataKey","activeDot","dot","defaultValue","onChange","debounce","tipFormatter","value","startOf","add","withStateEnhancer","withState","floor","diff","connectEnhancer","connect","props","reactorSetIndicators","compose","total","available","availabilityRate","prodAvailableRate","date","hour","minutes","span","require","ReactorType","StatusIndicator","theme","twoToneColor","ReactorIndicator","prods","currentProd","length","absLoad","part","background","ReactorDetails","title","name","to","bordered","column","Item","exploitationStartYear","stage","marginTop","startDate","endDate","reason","ReactorDetailsContainer","match","params","filter","sortBy","prop","reactorsOfPlantSelector","currentPlant","goTo","url","history","push","id","plant","Option","marginLeft","coolingType","href","wikiLink","target","rel","src","alt","asnLink","coolingPlace","component","Loader","load","prevProps","prevOtherProps","omit","otherProps","equals","Component","buildLoader","loadFunction","NORMAL_ICON","Leaflet","SELECTED_ICON","PlantMap","currentPlantId","onPlantClick","drawerHeight","isSmallScreen","Map","center","zoom","zoomControl","ZoomControl","position","TileLayer","attribution","coords","onClick","GeoJSON","defaultProps","Title","HomeView","level","PlantsLoader","dispatch","getPlants","indexBy","catch","console","error","ReactorsLoader","getReactors","ProductionsLoader","getProductions","MixLoader","getMix","UnavailabilitiesLoader","getUnavailabilities","RiversLoader","getRivers","AppLayout","isLoaded","isFullPage","spinning","indicator","visible","placement","mask","closable","bodyStyle","padding","drawerStyle","transition","exact","MixView","PlantView","pathname","Header","mode","selectable","Content","withRouter","matchPlantPath","matchPath","location","App","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","ProductionType","PropTypes","shape","string","isRequired","updatedDate","number","PlantType","arrayOf","hasCoolingTower","bool","buildStartYear","gridLinkYear","MixType"],"mappings":"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","file":"static/js/main.1fffabda.chunk.js","sourcesContent":["/* eslint-disable */\n//Leaflet-SVGIcon\n//SVG icon for any marker class\n//Ilya Atkin\n//ilya.atkin@unh.edu\nimport Leaflet from 'leaflet';\n\nL.DivIcon.SVGIcon = L.DivIcon.extend({\n  options: {\n      \"circleText\": \"\",\n      \"className\": \"svg-icon\",\n      \"circleAnchor\": null, //defaults to [iconSize.x/2, iconSize.x/2]\n      \"circleColor\": null, //defaults to color\n      \"circleOpacity\": null, // defaults to opacity\n      \"circleFillColor\": \"rgb(255,255,255)\",\n      \"circleFillOpacity\": null, //default to opacity\n      \"circleRatio\": 0.5,\n      \"circleWeight\": null, //defaults to weight\n      \"color\": \"rgb(0,102,255)\",\n      \"fillColor\": null, // defaults to color\n      \"fillOpacity\": 0.4,\n      \"fontColor\": \"rgb(0, 0, 0)\",\n      \"fontOpacity\": \"1\",\n      \"fontSize\": null, // defaults to iconSize.x/4\n      \"fontWeight\": \"normal\",\n      \"iconAnchor\": null, //defaults to [iconSize.x/2, iconSize.y] (point tip)\n      \"iconSize\": L.point(32,48),\n      \"opacity\": 1,\n      \"popupAnchor\": null,\n      \"weight\": 2\n  },\n  initialize: function(options) {\n      options = L.Util.setOptions(this, options)\n\n      //iconSize needs to be converted to a Point object if it is not passed as one\n      options.iconSize = L.point(options.iconSize)\n\n      //in addition to setting option dependant defaults, Point-based options are converted to Point objects\n      if (!options.circleAnchor) {\n          options.circleAnchor = L.point(Number(options.iconSize.x)/2, Number(options.iconSize.x)/2)\n      }\n      else {\n          options.circleAnchor = L.point(options.circleAnchor)\n      }\n      if (!options.circleColor) {\n          options.circleColor = options.color\n      }\n      if (!options.circleFillOpacity) {\n          options.circleFillOpacity = options.opacity\n      }\n      if (!options.circleOpacity) {\n          options.circleOpacity = options.opacity\n      }\n      if (!options.circleWeight) {\n          options.circleWeight = options.weight\n      }\n      if (!options.fillColor) {\n          options.fillColor = options.color\n      }\n      if (!options.fontSize) {\n          options.fontSize = Number(options.iconSize.x/4)\n      }\n      if (!options.iconAnchor) {\n          options.iconAnchor = L.point(Number(options.iconSize.x)/2, Number(options.iconSize.y))\n      }\n      else {\n          options.iconAnchor = L.point(options.iconAnchor)\n      }\n      if (!options.popupAnchor) {\n          options.popupAnchor = L.point(0, (-0.75)*(options.iconSize.y))\n      }\n      else {\n          options.popupAnchor = L.point(options.popupAnchor)\n      }\n\n      options.html = this._createSVG()\n  },\n  _createCircle: function() {\n      var cx = Number(this.options.circleAnchor.x)\n      var cy = Number(this.options.circleAnchor.y)\n      var radius = this.options.iconSize.x/2 * Number(this.options.circleRatio)\n      var fill = this.options.circleFillColor\n      var fillOpacity = this.options.circleFillOpacity\n      var stroke = this.options.circleColor\n      var strokeOpacity = this.options.circleOpacity\n      var strokeWidth = this.options.circleWeight\n      var className = this.options.className + \"-circle\"\n\n      var circle = '<circle class=\"' + className + '\" cx=\"' + cx + '\" cy=\"' + cy + '\" r=\"' + radius +\n          '\" fill=\"' + fill + '\" fill-opacity=\"'+ fillOpacity +\n          '\" stroke=\"' + stroke + '\" stroke-opacity=' + strokeOpacity + '\" stroke-width=\"' + strokeWidth + '\"/>'\n\n      return circle\n  },\n  _createPathDescription: function() {\n      var height = Number(this.options.iconSize.y)\n      var width = Number(this.options.iconSize.x)\n      var weight = Number(this.options.weight)\n      var margin = weight / 2\n\n      var startPoint = \"M \" + margin + \" \" + (width/2) + \" \"\n      var leftLine = \"L \" + (width/2) + \" \" + (height - weight) + \" \"\n      var rightLine = \"L \" + (width - margin) + \" \" + (width/2) + \" \"\n      var arc = \"A \" + (width/4) + \" \" + (width/4) + \" 0 0 0 \" + margin + \" \" + (width/2) + \" Z\"\n\n      var d = startPoint + leftLine + rightLine + arc\n\n      return d\n  },\n  _createPath: function() {\n      var pathDescription = this._createPathDescription()\n      var strokeWidth = this.options.weight\n      var stroke = this.options.color\n      var strokeOpacity = this.options.opacity\n      var fill = this.options.fillColor\n      var fillOpacity = this.options.fillOpacity\n      var className = this.options.className + \"-path\"\n\n      var path = '<path class=\"' + className + '\" d=\"' + pathDescription +\n          '\" stroke-width=\"' + strokeWidth + '\" stroke=\"' + stroke + '\" stroke-opacity=\"' + strokeOpacity +\n          '\" fill=\"' + fill + '\" fill-opacity=\"' + fillOpacity + '\"/>'\n\n      return path\n  },\n  _createSVG: function() {\n      var path = this._createPath()\n      var circle = this._createCircle()\n      var text = this._createText()\n      var className = this.options.className + \"-svg\"\n\n      var style = \"width:\" + this.options.iconSize.x + \"px; height:\" + this.options.iconSize.y + \"px;\"\n\n      var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" class=\"' + className + '\" style=\"' + style + '\">' + path + circle + text + '</svg>'\n\n      return svg\n  },\n  _createText: function() {\n      var fontSize = this.options.fontSize + \"px\"\n      var fontWeight = this.options.fontWeight\n      var lineHeight = Number(this.options.fontSize)\n\n      var x = this.options.circleAnchor.x\n      var y = this.options.circleAnchor.y + (lineHeight * 0.35) //35% was found experimentally\n      var circleText = this.options.circleText\n      var textColor = this.options.fontColor.replace(\"rgb(\", \"rgba(\").replace(\")\", \",\" + this.options.fontOpacity + \")\")\n\n      var text = '<text text-anchor=\"middle\" x=\"' + x + '\" y=\"' + y + '\" style=\"font-size: ' + fontSize + '; font-weight: ' + fontWeight +'\" fill=\"' + textColor + '\">' + circleText + '</text>'\n\n      return text\n  }\n})\n\nL.divIcon.svgIcon = function(options) {\n  return new L.DivIcon.SVGIcon(options)\n}\n\nL.Marker.SVGMarker = L.Marker.extend({\n  options: {\n      \"iconFactory\": L.divIcon.svgIcon,\n      \"iconOptions\": {}\n  },\n  initialize: function(latlng, options) {\n      options = L.Util.setOptions(this, options)\n      options.icon = options.iconFactory(options.iconOptions)\n      this._latlng = latlng\n  },\n  onAdd: function(map) {\n      L.Marker.prototype.onAdd.call(this, map)\n  },\n  setStyle: function(style) {\n      if (this._icon) {\n          var svg = this._icon.children[0]\n          var iconBody = this._icon.children[0].children[0]\n          var iconCircle = this._icon.children[0].children[1]\n\n          if (style.color && !style.iconOptions) {\n              var stroke = style.color.replace(\"rgb\",\"rgba\").replace(\")\", \",\"+this.options.icon.options.opacity+\")\")\n              var fill = style.color.replace(\"rgb\",\"rgba\").replace(\")\", \",\"+this.options.icon.options.fillOpacity+\")\")\n              iconBody.setAttribute(\"stroke\", stroke)\n              iconBody.setAttribute(\"fill\", fill)\n              iconCircle.setAttribute(\"stroke\", stroke)\n\n              this.options.icon.fillColor = fill\n              this.options.icon.color = stroke\n              this.options.icon.circleColor = stroke\n          }\n          if (style.opacity) {\n              this.setOpacity(style.opacity)\n          }\n          if (style.iconOptions) {\n              if (style.color) { style.iconOptions.color = style.color }\n              var iconOptions = L.Util.setOptions(this.options.icon, style.iconOptions)\n              this.setIcon(L.divIcon.svgIcon(iconOptions))\n          }\n      }\n  }\n})\n\nL.marker.svgMarker = function(latlng, options) {\n  return new L.Marker.SVGMarker(latlng, options)\n}\n","import moment from 'moment-timezone';\nimport qs from 'qs';\n\nconst { REACT_APP_NUCLEAR_MONITOR_API } = process.env;\n\nexport async function getRivers() {\n  return Promise.all(\n    ['garonne', 'loire', 'meuse', 'moselle', 'rhin', 'rhone', 'seine'].map(\n      river => fetch(`./rivers/${river}.json`).then(res => res.json()),\n    ),\n  );\n}\n\nexport async function getPlants() {\n  const res = await fetch(`${REACT_APP_NUCLEAR_MONITOR_API}/plants`);\n  const data = await res.json();\n\n  return data;\n}\n\nexport async function getReactors() {\n  const res = await fetch(`${REACT_APP_NUCLEAR_MONITOR_API}/reactors`);\n  const data = await res.json();\n\n  return data;\n}\n\nexport async function getProductions() {\n  const res = await fetch(`${REACT_APP_NUCLEAR_MONITOR_API}/productions`);\n  const data = await res.json();\n\n  return data;\n}\n\nexport async function getUnavailabilities() {\n  const res = await fetch(`${REACT_APP_NUCLEAR_MONITOR_API}/unavailabilities`);\n  const data = await res.json();\n\n  return data;\n}\n\nconst START_URL =\n  'https://opendata.reseaux-energies.fr/api/records/1.0/search/?';\nconst DATE_FORMAT = 'YYYY-MM-DD';\nexport async function getMix() {\n  const res = await fetch(\n    `${START_URL}${qs.stringify({\n      dataset: 'eco2mix-national-tr',\n      rows: 96,\n      sort: '-date_heure',\n      'refine.date': moment()\n        .tz('Europe/Paris')\n        .format(DATE_FORMAT),\n    })}`,\n  );\n  const data = await res.json();\n\n  const mix = data.records.map(({ fields }) => ({\n    isOk: !!fields.nucleaire,\n    datetime: moment(fields.date_heure).unix(),\n    wind: Number(fields.eolien),\n    solar: Number(fields.solaire),\n    nuclear: Number(fields.nucleaire),\n    gas: Number(fields.gaz),\n    oil: Number(fields.fioul),\n    coal: Number(fields.charbon),\n    consumption: Number(fields.consommation),\n    biomass: Number(fields.bioenergies),\n    hydroPumped: Number(fields.pompage),\n    hydro: Number(fields.hydraulique),\n    imports: Math.max(0, Number(fields.ech_physiques)),\n    exports: Math.min(0, Number(fields.ech_physiques)),\n  }));\n\n  return mix;\n}\n","import { values, indexBy, prop } from 'ramda';\n\nimport { getPlants } from '../api';\n\nexport const PLANTS_LOAD_ACTION = 'PLANTS_LOAD_ACTION';\nexport const PLANTS_RECEIVE_ACTION = 'PLANTS_RECEIVE_ACTION';\n\nfunction loadPlantsAction() {\n  return { type: PLANTS_LOAD_ACTION };\n}\n\nfunction receivePlantsAction({ data, errors }) {\n  return { type: PLANTS_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllPlants() {\n  return function dispatchLoadAllPlants(dispatch) {\n    dispatch(loadPlantsAction());\n    return getPlants()\n      .then(data =>\n        dispatch(\n          receivePlantsAction({\n            data: indexBy(prop('id'), data),\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) && dispatch(receivePlantsAction({ errors })),\n      );\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction plantsReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case PLANTS_LOAD_ACTION:\n      return { ...state, loading: true };\n    case PLANTS_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function plantsLoadedSelector(state) {\n  return state.plants.loaded;\n}\n\nexport function plantsSelector(state) {\n  return values(state.plants.data);\n}\n\nexport function plantSelector(plantId, state) {\n  return state.plants.data[plantId];\n}\n\nexport default plantsReducer;\n","import { values, indexBy, prop } from 'ramda';\n\nimport { getProductions } from '../api';\n\nexport const PRODUCTIONS_LOAD_ACTION = 'PRODUCTIONS_LOAD_ACTION';\nexport const PRODUCTIONS_RECEIVE_ACTION = 'PRODUCTIONS_RECEIVE_ACTION';\n\nfunction loadProductionsAction() {\n  return { type: PRODUCTIONS_LOAD_ACTION };\n}\n\nfunction receiveProductionsAction({ data, errors }) {\n  return { type: PRODUCTIONS_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllProductions() {\n  return function dispatchLoadAllProductions(dispatch) {\n    dispatch(loadProductionsAction());\n    return getProductions()\n      .then(data =>\n        dispatch(\n          receiveProductionsAction({\n            data: indexBy(prop('eicCode'), data),\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) &&\n          dispatch(receiveProductionsAction({ errors })),\n      );\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction productionsReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case PRODUCTIONS_LOAD_ACTION:\n      return { ...state, loading: true };\n    case PRODUCTIONS_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function productionsLoadedSelector(state) {\n  return state.productions.loaded;\n}\n\nexport function productionsSelector(state) {\n  return values(state.productions.data);\n}\n\nexport function productionSelector(eicCode, state) {\n  return state.productions.data[eicCode].values;\n}\n\nexport default productionsReducer;\n","import { values, indexBy, prop } from 'ramda';\n\nimport { getUnavailabilities } from '../api';\n\nexport const UNAVAILABILITIES_LOAD_ACTION = 'UNAVAILABILITIES_LOAD_ACTION';\nexport const UNAVAILABILITIES_RECEIVE_ACTION =\n  'UNAVAILABILITIES_RECEIVE_ACTION';\n\nfunction loadUnavailabilitiesAction() {\n  return { type: UNAVAILABILITIES_LOAD_ACTION };\n}\n\nfunction receiveUnavailabilitiesAction({ data, errors }) {\n  return { type: UNAVAILABILITIES_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllUnavailabilities() {\n  return function dispatchLoadAllUnavailabilities(dispatch) {\n    dispatch(loadUnavailabilitiesAction());\n    return getUnavailabilities()\n      .then(data =>\n        dispatch(\n          receiveUnavailabilitiesAction({\n            data: indexBy(prop('eicCode'), data),\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) &&\n          dispatch(receiveUnavailabilitiesAction({ errors })),\n      );\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction unavailabilitiesReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case UNAVAILABILITIES_LOAD_ACTION:\n      return { ...state, loading: true };\n    case UNAVAILABILITIES_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function unavailabilitiesLoadedSelector(state) {\n  return state.unavailabilities.loaded;\n}\n\nexport function unavailabilitiesSelector(state) {\n  return values(state.unavailabilities.data);\n}\n\nexport function unavalabilitySelector(eicCode, state) {\n  return state.unavailabilities.data[eicCode];\n}\n\nexport default unavailabilitiesReducer;\n","import { values, indexBy, prop, sortBy } from 'ramda';\n\nimport { getReactors } from '../api';\n\nimport { productionSelector } from './productions';\nimport { unavalabilitySelector } from './unavailabilities';\n\nexport const REACTORS_LOAD_ACTION = 'REACTORS_LOAD_ACTION';\nexport const REACTORS_RECEIVE_ACTION = 'REACTORS_RECEIVE_ACTION';\n\nfunction loadReactorsAction() {\n  return { type: REACTORS_LOAD_ACTION };\n}\n\nfunction receiveReactorsAction({ data, errors }) {\n  return { type: REACTORS_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllReactors() {\n  return function dispatchLoadAllReactors(dispatch) {\n    dispatch(loadReactorsAction());\n    return getReactors()\n      .then(data =>\n        dispatch(\n          receiveReactorsAction({\n            data: indexBy(prop('eicCode'), data),\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) && dispatch(receiveReactorsAction({ errors })),\n      );\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction reactorsReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case REACTORS_LOAD_ACTION:\n      return { ...state, loading: true };\n    case REACTORS_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function reactorsLoadedSelector(state) {\n  return state.reactors.loaded;\n}\n\nfunction getStatus(unavailability) {\n  if (unavailability) {\n    if (unavailability.availablePower_MW === 0) {\n      if (unavailability.type === 'PLANNED_MAINTENANCE') {\n        return 'PLANNED_STOP';\n      }\n      return 'AUTO_STOP';\n    }\n    return 'LIMITED';\n  }\n  return 'RUNNING';\n}\n\nexport function reactorSelector(eicCode, state) {\n  const reactor = state.reactors.data[eicCode];\n  const dayProductions = productionSelector(eicCode, state);\n  const unavailability = unavalabilitySelector(eicCode, state);\n\n  return {\n    ...reactor,\n    status: getStatus(unavailability),\n    dayProductions,\n    unavailability,\n  };\n}\n\nexport function reactorsSelector(state) {\n  return values(state.reactors.data).map(reactor =>\n    reactorSelector(reactor.eicCode, state),\n  );\n}\n\nexport function reactorsOfPlantSelector(plantId, state) {\n  const reactors = Object.values(state.reactors.data)\n    .filter(reactor => reactor.plantId === plantId)\n    .map(reactor => reactorSelector(reactor.eicCode, state));\n\n  return sortBy(prop('reactorIndex'), reactors);\n}\n\nconst INIT_DATA = {\n  availablePower: 0,\n  totalPower: 0,\n  availableCount: 0,\n  partiallyUnavailableCount: 0,\n  totallyUnavailableCount: 0,\n};\nexport function reactorSetIndicatorsSelector(hourOfDay, state) {\n  const reactors = reactorsSelector(state);\n\n  return reactors.reduce((res, reactor) => {\n    const res2 = {\n      availablePower: 0,\n      availableCount: 0,\n      partially: 0,\n      totally: 0,\n    };\n\n    if (reactor.unavailability) {\n      if (reactor.unavailability.availablePower_MW === 0) {\n        res2.totally = 1;\n      } else {\n        res2.partially = 1;\n      }\n      res2.availablePower = reactor.unavailability.availablePower_MW;\n    } else {\n      res2.availableCount = 1;\n      res2.availablePower = reactor.power_MW;\n    }\n\n    return {\n      totalPower: res.totalPower + reactor.power_MW,\n      availablePower: res.availablePower + res2.availablePower,\n      availableCount: res.availableCount + res2.availableCount,\n      totallyUnavailableCount: res.totallyUnavailableCount + res2.totally,\n      partiallyUnavailableCount: res.partiallyUnavailableCount + res2.partially,\n    };\n  }, INIT_DATA);\n}\n\nexport function reactorByPlantAndIndexSelector(\n  { plantId, reactorIndex },\n  state,\n) {\n  const reacto = Object.values(state.reactors.data).find(\n    reactor =>\n      reactor.plantId === plantId && reactor.reactorIndex === reactorIndex,\n  );\n  return reacto && reactorSelector(reacto.eicCode, state);\n}\n\nexport default reactorsReducer;\n","import { getMix } from '../api';\n\nexport const MIX_LOAD_ACTION = 'MIX_LOAD_ACTION';\nexport const MIX_RECEIVE_ACTION = 'MIX_RECEIVE_ACTION';\n\nfunction loadMixAction() {\n  return { type: MIX_LOAD_ACTION };\n}\n\nfunction receiveMixAction({ data, errors }) {\n  return { type: MIX_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllMix() {\n  return function dispatchLoadAllMix(dispatch) {\n    dispatch(loadMixAction());\n    return getMix()\n      .then(data =>\n        dispatch(\n          receiveMixAction({\n            data,\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) && dispatch(receiveMixAction({ errors })),\n      );\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction mixReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case MIX_LOAD_ACTION:\n      return { ...state, loading: true };\n    case MIX_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function mixLoadedSelector(state) {\n  return state.mix.loaded;\n}\n\nexport function mixSelector(state) {\n  return state.mix.data;\n}\n\nexport default mixReducer;\n","import { getRivers } from '../api';\n\nexport const RIVERS_LOAD_ACTION = 'RIVERS_LOAD_ACTION';\nexport const RIVERS_RECEIVE_ACTION = 'RIVERS_RECEIVE_ACTION';\n\nfunction loadRiversAction() {\n  return { type: RIVERS_LOAD_ACTION };\n}\n\nfunction receiveRiversAction({ data, errors }) {\n  return { type: RIVERS_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllRivers() {\n  return function dispatchLoadAllRivers(dispatch) {\n    dispatch(loadRiversAction());\n    return getRivers()\n      .then(data =>\n        dispatch(\n          receiveRiversAction({\n            data,\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) && dispatch(receiveRiversAction({ errors })),\n      );\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction riversReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case RIVERS_LOAD_ACTION:\n      return { ...state, loading: true };\n    case RIVERS_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function riversLoadedSelector(state) {\n  return state.rivers.loaded;\n}\n\nexport function riversSelector(state) {\n  return state.rivers.data;\n}\n\nexport default riversReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport plantsReducer from './plants';\nimport reactorsReducer from './reactors';\nimport productionsReducer from './productions';\nimport mixReducer from './mix';\nimport unavailabilitiesReducer from './unavailabilities';\nimport riversReducer from './rivers';\n\nconst rootReducer = combineReducers({\n  // ...reducers,\n  plants: plantsReducer,\n  reactors: reactorsReducer,\n  productions: productionsReducer,\n  mix: mixReducer,\n  unavailabilities: unavailabilitiesReducer,\n  rivers: riversReducer,\n});\n\nconst enhancers = [applyMiddleware(thunk)];\nconst composeEnhancers = composeWithDevTools({\n  // actionSanitizer,\n  // stateSanitizer,\n});\nconst enhancer = composeEnhancers(...enhancers);\n\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","// eslint-disable-next-line import/prefer-default-export\nexport function testScreenType(size) {\n  const windowWidth = window.innerWidth;\n\n  switch (size) {\n    case 'xs':\n      return windowWidth < 576;\n    case 'sm':\n      return windowWidth >= 576;\n    case 'md':\n      return windowWidth >= 768;\n    case 'lg':\n      return windowWidth >= 992;\n    case 'xl':\n      return windowWidth >= 1200;\n    case 'xxl':\n      return windowWidth >= 1600;\n    default:\n      return false;\n  }\n}\n\nexport function getWindowHeight() {\n  const { body } = document;\n  const html = document.documentElement;\n  return Math.max(\n    body.scrollHeight,\n    body.offsetHeight,\n    html.clientHeight,\n    html.scrollHeight,\n    html.offsetHeight,\n  );\n}\n\nexport function format(v) {\n  // eslint-disable-next-line no-restricted-globals\n  return isNaN(v) ? '-' : `${v}`;\n}\n\nexport const HEADER_HEIGHT = 64;\nexport const DRAWER_WIDTH = 400;\n","export const META = {\n  hydroPumped: {\n    label: 'POMPAGE',\n    color: '#114774',\n    stackId: '2',\n  },\n  biomass: {\n    label: 'BIOENERG.',\n    color: '#166a57',\n  },\n  wind: {\n    label: 'EOLIEN',\n    color: '#74cdb9',\n  },\n  solar: {\n    label: 'SOLAIRE',\n    color: '#f27406',\n  },\n  nuclear: {\n    label: 'NUCLEAIRE',\n    color: '#f5b300',\n  },\n  hydro: {\n    label: 'HYDRAU.',\n    color: '#2772b2',\n  },\n  gas: {\n    label: 'GAS',\n    color: '#f30a0a',\n  },\n  coal: {\n    label: 'CHARBON',\n    color: '#ac8c35',\n  },\n  oil: {\n    label: 'FIOUL',\n    color: '#8356a2',\n  },\n  exports: {\n    label: 'EXPORTS',\n    color: '#969696',\n    stackId: '2',\n  },\n  imports: {\n    label: 'IMPORTS',\n    color: '#969696',\n  },\n};\n\nexport const GRAPH_ORDER = [\n  'hydroPumped',\n  'exports',\n  'biomass',\n  'nuclear',\n  'hydro',\n  'gas',\n  'coal',\n  'oil',\n  'wind',\n  'solar',\n  'imports',\n];\n\nexport const HEADER_ORDER = [\n  'oil',\n  'coal',\n  'gas',\n  'hydro',\n  'nuclear',\n  'solar',\n  'wind',\n  'biomass',\n  'hydroPumped',\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport debounce from 'lodash.debounce';\nimport moment from 'moment';\n\nimport { Slider } from 'antd';\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  Line,\n  ReferenceLine,\n  YAxis,\n  Area,\n} from 'recharts';\n\nimport { MixType } from '../../../utils/types';\n\nimport { META, HEADER_ORDER, GRAPH_ORDER } from './config';\n\nfunction format(v) {\n  // eslint-disable-next-line no-restricted-globals\n  return isNaN(v) ? '-' : `${v}`;\n}\n\nfunction MixComponent({ mix, slotIndex, setSlotIndex }) {\n  return (\n    <div className=\"MixComponent\">\n      <div className=\"MixComponent__header\">\n        {HEADER_ORDER.map(key => (\n          <div\n            key={key}\n            className=\"MixComponent__header__item\"\n            style={{\n              backgroundColor: META[key].color,\n            }}\n          >\n            {format(Math.abs(mix[slotIndex][key]))}\n            <span className=\"MixComponent__header__item__small\"> MW</span>\n            <br />\n            <span className=\"MixComponent__header__item__small\">\n              {META[key].label}\n            </span>\n          </div>\n        ))}\n        <div\n          className=\"MixComponent__header__item\"\n          style={{\n            backgroundColor: META.imports.color,\n          }}\n        >\n          {format(Math.max(mix[slotIndex].imports, -mix[slotIndex].exports))}\n          <span className=\"MixComponent__header__item__small\"> MW</span>\n          <br />\n          <span className=\"MixComponent__header__item__small\">\n            {mix[slotIndex].exports < 0\n              ? META.exports.label\n              : META.imports.label}\n          </span>\n        </div>\n        <div className=\"MixComponent__header__item\" />\n        <div\n          className=\"MixComponent__header__item\"\n          style={{ backgroundColor: 'black' }}\n        >\n          {format(mix[slotIndex].consumption)}\n          <span className=\"MixComponent__header__item__small\"> MW</span>\n          <br />\n          <span className=\"MixComponent__header__item__small\">CONSO</span>\n        </div>\n      </div>\n\n      <div className=\"MixComponent__chart\">\n        <ResponsiveContainer>\n          <ComposedChart data={mix}>\n            <YAxis axisLine mirror />\n            {GRAPH_ORDER.map(key => (\n              <Area\n                key={key}\n                dataKey={key}\n                type=\"monotone\"\n                activeDot={false}\n                stroke=\"none\"\n                fill={META[key].color}\n                stackId={META[key].stackId || '1'}\n              />\n            ))}\n            <Line\n              dataKey=\"consumption\"\n              dot={false}\n              activeDot={false}\n              type=\"monotone\"\n              stroke=\"black\"\n            />\n            <ReferenceLine x={slotIndex} stroke=\"#4b4e52\" />\n          </ComposedChart>\n        </ResponsiveContainer>\n      </div>\n      <div className=\"MixComponent__sliderContainer\">\n        <Slider\n          min={0}\n          max={95}\n          style={{ width: '100%' }}\n          defaultValue={slotIndex}\n          // value={slotIndex}\n          onChange={debounce(setSlotIndex, 400)}\n          tipFormatter={\n            value =>\n              moment()\n                .startOf('day')\n                .add(value * 15, 'minutes')\n                .format('HH:mm')\n            // eslint-disable-next-line react/jsx-curly-newline\n          }\n        />\n      </div>\n    </div>\n  );\n}\n\nMixComponent.propTypes = {\n  mix: PropTypes.arrayOf(MixType).isRequired,\n  slotIndex: PropTypes.number.isRequired,\n  setSlotIndex: PropTypes.func.isRequired,\n};\n\nexport default MixComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { withState, compose } from 'recompose';\n\nimport { Row, Col } from 'antd';\n\nimport moment from 'moment-timezone';\n\nimport { format } from '../../utils/index';\nimport { MixType } from '../../utils/types';\nimport { mixSelector } from '../../store/mix';\nimport { reactorSetIndicatorsSelector } from '../../store/reactors';\n\nimport './index.css';\nimport MixComponent from './components/MixComponent';\n\nfunction MixView(props) {\n  const { mix, slotIndex, setSlotIndex, reactorSetIndicators } = props;\n  const total = Math.floor(reactorSetIndicators.totalPower / 1000);\n  const available = Math.floor(reactorSetIndicators.availablePower);\n  const availabilityRate = Math.floor(\n    (100 * reactorSetIndicators.availablePower) /\n      reactorSetIndicators.totalPower,\n  );\n  const prodAvailableRate = Math.floor(\n    (100 * mix[slotIndex].nuclear) / reactorSetIndicators.availablePower,\n  );\n  const date = moment()\n    .tz('Europe/Paris')\n    .hour(Math.floor(slotIndex / 4))\n    .minutes(15 * (slotIndex % 4))\n    .format('DD/MM/YYYY HH:mm');\n\n  return (\n    <div className=\"MixView\">\n      <Row>\n        <Col span={24}>\n          <MixComponent\n            mix={mix}\n            slotIndex={slotIndex}\n            setSlotIndex={setSlotIndex}\n          />\n          <div className=\"MixView__date\">{date}</div>\n          <div className=\"MixView__nuclear\">\n            <strong>{`Parc nucléaire (${total} GW):`}</strong>\n            <div className=\"MixView__nuclear__indicator\">\n              <div\n                className=\"MixView__nuclear__indicator__prod\"\n                style={{\n                  width: `${((mix[slotIndex].nuclear || 0) /\n                    reactorSetIndicators.totalPower) *\n                    100}%`,\n                }}\n              >\n                <div>{`Prod: ${format(mix[slotIndex].nuclear)} MW`}</div>\n                <div>{`${format(prodAvailableRate)}% du dispo.`}</div>\n              </div>\n              <div\n                className=\"MixView__nuclear__indicator__available\"\n                style={{\n                  width: `${((reactorSetIndicators.availablePower -\n                    (mix[slotIndex].nuclear || 0)) /\n                    reactorSetIndicators.totalPower) *\n                    100}%`,\n                }}\n              />\n            </div>\n            <div className=\"MixView__nuclear__available\">\n              {`${reactorSetIndicators.availableCount} réacteurs disponibles: ${available} MW (${availabilityRate}%)`}\n            </div>\n            <div>\n              {`dont ${reactorSetIndicators.partiallyUnavailableCount} partiellement indisponible(s)`}\n            </div>\n            <div className=\"MixView__nuclear__stopped\">\n              {`${reactorSetIndicators.totallyUnavailableCount} réacteur(s) arrêté(s)`}\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nMixView.propTypes = {\n  mix: PropTypes.arrayOf(MixType).isRequired,\n  slotIndex: PropTypes.number.isRequired,\n  setSlotIndex: PropTypes.func.isRequired,\n  reactorSetIndicators: PropTypes.shape({\n    availablePower: PropTypes.number.isRequired,\n    totalPower: PropTypes.number.isRequired,\n    availableCount: PropTypes.number.isRequired,\n    totallyUnavailableCount: PropTypes.number.isRequired,\n    partiallyUnavailableCount: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nconst withStateEnhancer = withState('slotIndex', 'setSlotIndex', () =>\n  Math.max(\n    Math.floor(moment().diff(moment().startOf('day'), 'minutes') / 15) - 8,\n    0,\n  ),\n);\n\nconst connectEnhancer = connect((state, props) => ({\n  mix: mixSelector(state),\n  reactorSetIndicators: reactorSetIndicatorsSelector(\n    Math.floor(props.slotIndex / 4),\n    state,\n  ),\n}));\n\nexport default compose(\n  withStateEnhancer,\n  connectEnhancer,\n)(MixView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\n\nconst { ReactorType } = require('../../../utils/types');\n\nfunction StatusIndicator(props) {\n  const style = { fontSize: 16 };\n  switch (props.status) {\n    case 'PLANNED_STOP':\n      return (\n        <Icon\n          type=\"tool\"\n          theme=\"filled\"\n          style={{ ...style, color: '#404040' }}\n        />\n      );\n    case 'AUTO_STOP':\n      return (\n        <Icon\n          type=\"exclamation-circle\"\n          theme=\"twoTone\"\n          twoToneColor=\"red\"\n          style={style}\n        />\n      );\n    case 'LIMITED':\n      return <Icon type=\"info-circle\" theme=\"twoTone\" style={style} />;\n    default:\n      return null;\n  }\n}\nStatusIndicator.propTypes = {\n  status: PropTypes.string.isRequired,\n};\n\nfunction ReactorIndicator(props) {\n  const { reactor } = props;\n  const prods = reactor.dayProductions;\n  const currentProd = prods[prods.length - 1];\n  const absLoad = Math.max(0, currentProd.value);\n  const part = Math.floor((absLoad / reactor.power_MW) * 100);\n\n  return (\n    <div\n      className=\"ReactIndicator\"\n      style={{\n        background: `linear-gradient(0deg, #26a65b 0%, #26a65b ${part}%, rgba(255,255,255,1) ${part}%)`,\n      }}\n    >\n      <div className=\"ReactIndicator__status\">\n        <StatusIndicator status={reactor.status} />\n      </div>\n      <div className=\"ReactIndicator__prod\">\n        <strong>{Math.floor(absLoad)}</strong>\n      </div>\n      <div className=\"ReactIndicator__number\">{reactor.reactorIndex}</div>\n    </div>\n  );\n}\n\nReactorIndicator.propTypes = {\n  reactor: ReactorType.isRequired,\n};\n\nexport default ReactorIndicator;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { Descriptions, Icon } from 'antd';\nimport moment from 'moment-timezone';\n\nimport { ReactorType } from '../../../utils/types';\n\nfunction ReactorDetails({ reactor }) {\n  return (\n    <div className=\"ReactorDetails\">\n      <Descriptions\n        title={\n          // eslint-disable-next-line react/jsx-wrap-multilines\n          <div className=\"ReactorDetails__header\">\n            <div>{reactor.name}</div>\n            <div>\n              <Link to={`/plant/${reactor.plantId}`}>\n                <Icon type=\"caret-up\" theme=\"filled\" />\n              </Link>\n            </div>\n          </div>\n        }\n        size=\"small\"\n        bordered\n        column={1}\n      >\n        <Descriptions.Item label=\"Début d'exploitation\">\n          {reactor.exploitationStartYear}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Puissance nominale\">\n          {`${reactor.power_MW} MWe (${reactor.stage})`}\n        </Descriptions.Item>\n      </Descriptions>\n\n      {reactor.unavailability && (\n        <Descriptions\n          title=\"Indisponibilité\"\n          size=\"small\"\n          bordered\n          column={1}\n          style={{ marginTop: 10 }}\n        >\n          <Descriptions.Item label=\"Début\">\n            {moment(reactor.unavailability.startDate)\n              .tz('Europe/Paris')\n              .format('DD/MM/YYYY HH:mm')}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Fin\">\n            {moment(reactor.unavailability.endDate)\n              .tz('Europe/Paris')\n              .format('DD/MM/YYYY HH:mm')}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Type\">\n            {reactor.unavailability.type === 'PLANNED_MAINTENANCE'\n              ? 'Plannifiée'\n              : 'Fortuite'}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Puissance disponible\">\n            {`${reactor.unavailability.availablePower_MW} MW`}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Description\">\n            {reactor.unavailability.reason}\n          </Descriptions.Item>\n        </Descriptions>\n      )}\n    </div>\n  );\n}\n\nReactorDetails.propTypes = {\n  reactor: ReactorType.isRequired,\n};\n\nexport default ReactorDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n  Route, // as BaseRoute,\n  Switch,\n  Link,\n  Redirect,\n} from 'react-router-dom';\nimport { Row, Col, Select, Tag } from 'antd';\n\nimport { plantSelector, plantsSelector } from '../../store/plants';\nimport { PlantType, ReactorType } from '../../utils/types';\nimport ReactorIndicator from './components/ReactorIndicator';\nimport {\n  reactorsOfPlantSelector,\n  reactorByPlantAndIndexSelector,\n} from '../../store/reactors';\nimport ReactorDetails from './components/ReactorDetails';\n\nimport './index.css';\n\nconst ReactorDetailsContainer = connect((state, props) => {\n  return {\n    reactor: reactorByPlantAndIndexSelector(\n      {\n        plantId: props.match.params.plantId,\n        reactorIndex: Number(props.match.params.reactorIndex),\n      },\n      state,\n    ),\n  };\n})(ReactorDetails);\n\nfunction PlantView(props) {\n  const { plants, currentPlant, reactors, goTo } = props;\n\n  if (!currentPlant) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"PlantView\">\n      <Row>\n        <Col span={24}>\n          <div className=\"PlantView__firstRow\">\n            <div className=\"PlantView__firstRow__left\">\n              <Select\n                value={currentPlant.id}\n                size=\"large\"\n                onChange={id => goTo(`/plant/${id}`)}\n                style={{ width: '9em' }}\n              >\n                {plants.map(plant => (\n                  <Select.Option key={plant.id} value={plant.id}>\n                    {plant.name}\n                  </Select.Option>\n                ))}\n              </Select>\n              <span>\n                <Tag style={{ marginLeft: '8px' }}>\n                  {currentPlant.coolingType === 'SEA' ? 'Mer' : 'Fleuve'}\n                </Tag>\n              </span>\n            </div>\n            <div className=\"PlantView__firstRow__right\">\n              <a\n                href={currentPlant.wikiLink}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <img className=\"PlantView__wiki\" src=\"wiki.svg\" alt=\"wiki\" />\n              </a>\n              <a\n                href={currentPlant.asnLink}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <img className=\"PlantView__asn\" src=\"logo-asn.png\" alt=\"asn\" />\n              </a>\n            </div>\n          </div>\n\n          <div className=\"PlantView__schema\">\n            <div>Production (MW)</div>\n            <div className=\"PlantView__reactors\">\n              {reactors.map(reactor => (\n                <Link\n                  key={reactor.eicCode}\n                  to={`/plant/${currentPlant.id}/${reactor.reactorIndex}`}\n                >\n                  <ReactorIndicator reactor={reactor} />\n                </Link>\n              ))}\n            </div>\n            <div\n              className=\"PlantView__cooling\"\n              style={{ width: reactors.length * 50 }}\n            >\n              {currentPlant.coolingPlace}\n            </div>\n          </div>\n          <div className=\"PlantView__footer\">\n            <Switch>\n              <Route\n                path=\"/plant/:plantId/:reactorIndex\"\n                component={ReactorDetailsContainer}\n              />\n              <Route\n                component={() => (\n                  <small>(Cliquer sur un réacteur pour plus de détails)</small>\n                )}\n              />\n            </Switch>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nPlantView.propTypes = {\n  plants: PropTypes.arrayOf(PlantType).isRequired,\n  currentPlant: PlantType.isRequired,\n  reactors: PropTypes.arrayOf(ReactorType).isRequired,\n  goTo: PropTypes.func.isRequired,\n};\n\nexport default connect((state, props) => {\n  const { plantId } = props.match.params;\n  const reactors = reactorsOfPlantSelector(plantId, state);\n\n  return {\n    plants: plantsSelector(state),\n    currentPlant: plantSelector(plantId, state),\n    goTo: url => props.history.push(url),\n    reactors,\n  };\n})(PlantView);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { omit, equals } from 'ramda';\n\nclass Loader extends Component {\n  componentDidMount() {\n    const { load, ...otherProps } = this.props;\n\n    load(otherProps);\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevOtherProps = omit(['load'], prevProps);\n    const { load, ...otherProps } = this.props;\n\n    if (!equals(prevOtherProps, otherProps)) {\n      load(otherProps);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nLoader.propTypes = {\n  load: PropTypes.func.isRequired,\n};\n\nfunction buildLoader(loadFunction) {\n  return connect(\n    null,\n    { load: loadFunction },\n  )(Loader);\n}\n\nexport default buildLoader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Map, TileLayer, Marker, ZoomControl, GeoJSON } from 'react-leaflet';\n\nimport Leaflet from 'leaflet';\n\nimport {\n  testScreenType,\n  getWindowHeight,\n  HEADER_HEIGHT,\n  DRAWER_WIDTH,\n} from '../utils';\nimport { PlantType } from '../utils/types';\n\nconst NORMAL_ICON = new Leaflet.DivIcon.SVGIcon({\n  fillOpacity: 1,\n  iconSize: [24, 38],\n});\nconst SELECTED_ICON = new Leaflet.DivIcon.SVGIcon({\n  color: 'red',\n  fillOpacity: 1,\n  iconSize: [24, 38],\n});\n\nfunction PlantMap(props) {\n  const { plants, currentPlantId, onPlantClick, drawerHeight, rivers } = props;\n  const isSmallScreen = !testScreenType('sm');\n  const height = getWindowHeight();\n  return (\n    <Map\n      center={[48.3, 2]}\n      zoom={isSmallScreen ? 5 : 6}\n      style={{\n        height: isSmallScreen\n          ? height - HEADER_HEIGHT - drawerHeight\n          : height - HEADER_HEIGHT,\n        marginTop: isSmallScreen ? HEADER_HEIGHT + drawerHeight : HEADER_HEIGHT, // TODO\n        marginLeft: isSmallScreen ? 0 : DRAWER_WIDTH,\n      }}\n      zoomControl={false}\n    >\n      <ZoomControl position=\"bottomright\" />\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      {plants.map(plant => (\n        <Marker\n          key={plant.id}\n          title={plant.name}\n          position={plant.coords}\n          icon={plant.id === currentPlantId ? SELECTED_ICON : NORMAL_ICON}\n          onClick={() => onPlantClick(plant)}\n        />\n      ))}\n      {rivers.map(river => (\n        <GeoJSON data={river} />\n      ))}\n    </Map>\n  );\n}\n\nPlantMap.propTypes = {\n  plants: PropTypes.arrayOf(PlantType).isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  rivers: PropTypes.array.isRequired,\n  currentPlantId: PropTypes.string,\n  onPlantClick: PropTypes.func.isRequired,\n  drawerHeight: PropTypes.number.isRequired,\n};\n\nPlantMap.defaultProps = {\n  currentPlantId: null,\n};\n\nexport default PlantMap;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nfunction HomeView() {\n  return (\n    <div className=\"HomeView\">\n      <Title level={2}>Bienvenue</Title>\n      <div>\n        <strong>Nuclear monitor</strong>\n        {' vous permet de consulter:'}\n        <ul>\n          <li>\n            {'le '}\n            <Link to=\"/mix\">mix</Link>\n            {\" de production d'électricité\"}\n          </li>\n          <li>\n            {\"l'état d'une \"}\n            <Link to=\"/plant/GRAVELINES\">centrale</Link>\n            {\" ou d'un \"}\n            <Link to=\"/plant/BLAYAIS/3\">réacteur</Link>\n          </li>\n        </ul>\n      </div>\n      <div className=\"HomeView__marker\">\n        Cliquer sur une centrale pour en savoir plus...\n      </div>\n    </div>\n  );\n}\n\nexport default HomeView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n  Route, // as BaseRoute,\n  Switch,\n  Redirect,\n  withRouter,\n  Link,\n  matchPath,\n} from 'react-router-dom';\nimport { Layout, Spin, Row, Col, Drawer, Menu } from 'antd';\n\nimport MixView from '../views/MixView';\nimport PlantView from '../views/PlantView';\n\nimport buildLoader from '../HOC/buildLoader';\nimport {\n  loadAllPlants,\n  plantsLoadedSelector,\n  plantsSelector,\n} from '../store/plants';\n\nimport { loadAllReactors, reactorsLoadedSelector } from '../store/reactors';\nimport {\n  loadAllProductions,\n  productionsLoadedSelector,\n} from '../store/productions';\nimport { loadAllMix, mixLoadedSelector } from '../store/mix';\n\nimport {\n  testScreenType,\n  HEADER_HEIGHT,\n  DRAWER_WIDTH,\n  getWindowHeight,\n} from '../utils';\nimport { PlantType } from '../utils/types';\nimport PlantMap from './PlantMap';\nimport {\n  loadAllUnavailabilities,\n  unavailabilitiesLoadedSelector,\n} from '../store/unavailabilities';\nimport {\n  loadAllRivers,\n  riversLoadedSelector,\n  riversSelector,\n} from '../store/rivers';\nimport HomeView from '../views/HomeView';\n\nconst PlantsLoader = buildLoader(loadAllPlants);\nconst ReactorsLoader = buildLoader(loadAllReactors);\nconst ProductionsLoader = buildLoader(loadAllProductions);\nconst MixLoader = buildLoader(loadAllMix);\nconst UnavailabilitiesLoader = buildLoader(loadAllUnavailabilities);\nconst RiversLoader = buildLoader(loadAllRivers);\n\nfunction AppLayout(props) {\n  const { isLoaded, plants, goTo, currentPlantId, isFullPage, rivers } = props;\n  const isSmallScreen = !testScreenType('sm');\n  const drawerHeight = isFullPage ? getWindowHeight() - HEADER_HEIGHT : 220;\n\n  return (\n    <div className=\"AppLayout\">\n      <PlantsLoader />\n      <ReactorsLoader />\n      <ProductionsLoader />\n      <MixLoader />\n      <UnavailabilitiesLoader />\n      <RiversLoader />\n      <Spin\n        size=\"large\"\n        spinning={!isLoaded}\n        indicator={\n          // eslint-disable-next-line react/jsx-wrap-multilines\n          <div>\n            <img\n              className=\"AppLayout__loadingIcon\"\n              src=\"loading_icon.svg\"\n              alt=\"\"\n            />\n          </div>\n        }\n      >\n        {!isLoaded && <div className=\"AppLayout__splash\" />}\n        {isLoaded && (\n          <Layout>\n            <Drawer\n              title={null}\n              visible\n              placement={isSmallScreen ? 'top' : 'left'}\n              style={{ marginTop: HEADER_HEIGHT }}\n              mask={false}\n              closable={false}\n              width={DRAWER_WIDTH}\n              height={drawerHeight}\n              bodyStyle={{ padding: 0 }}\n              drawerStyle={{ transition: 'height 2s ease' }}\n            >\n              <Switch>\n                <Route path=\"/home\" exact component={HomeView} />\n                <Route path=\"/mix\" exact component={MixView} />\n                <Route path=\"/plant/:plantId\" component={PlantView} />\n                <Route\n                  component={() => <Redirect to={{ pathname: '/home' }} />}\n                />\n              </Switch>\n            </Drawer>\n            <Row>\n              <Col span={24}>\n                <Layout.Header className=\"AppLayout__header\">\n                  <Menu\n                    theme=\"dark\"\n                    mode=\"horizontal\"\n                    className=\"AppLayout__menu\"\n                    selectable={false}\n                  >\n                    <Menu.Item>\n                      <Link to=\"/home\">\n                        <strong>Nuclear monitor</strong>\n                      </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"mix\">\n                      <Link to=\"/mix\">Mix</Link>\n                    </Menu.Item>\n                  </Menu>\n                </Layout.Header>\n\n                <Layout.Content className=\"AppLayout__content\">\n                  <PlantMap\n                    plants={plants}\n                    rivers={rivers}\n                    currentPlantId={currentPlantId}\n                    onPlantClick={plant => goTo(`/plant/${plant.id}`)}\n                    drawerHeight={drawerHeight}\n                  />\n                </Layout.Content>\n              </Col>\n            </Row>\n          </Layout>\n        )}\n      </Spin>\n    </div>\n  );\n}\n\nAppLayout.propTypes = {\n  isLoaded: PropTypes.bool.isRequired,\n  plants: PropTypes.arrayOf(PlantType).isRequired,\n  goTo: PropTypes.func.isRequired,\n  isFullPage: PropTypes.bool.isRequired,\n  currentPlantId: PropTypes.string,\n  // eslint-disable-next-line react/forbid-prop-types\n  rivers: PropTypes.array.isRequired,\n};\n\nAppLayout.defaultProps = {\n  currentPlantId: null,\n};\n\n// withRouter needed to prevent blocking\nexport default withRouter(\n  connect((state, props) => {\n    const matchPlantPath = matchPath(props.location.pathname, {\n      path: '/plant/:id',\n      exact: false,\n    });\n    return {\n      isLoaded:\n        plantsLoadedSelector(state) &&\n        reactorsLoadedSelector(state) &&\n        productionsLoadedSelector(state) &&\n        mixLoadedSelector(state) &&\n        unavailabilitiesLoadedSelector(state) &&\n        riversLoadedSelector(state),\n      plants: plantsSelector(state),\n      rivers: riversSelector(state),\n      goTo: url => props.history.push(url),\n      currentPlantId: matchPlantPath && matchPlantPath.params.id,\n      isFullPage: !!matchPath(props.location.pathname, {\n        path: ['/plant/:id/:reactorIndex', '/mix'],\n      }),\n    };\n  })(AppLayout),\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport store from './store';\n\nimport AppLayout from './components/AppLayout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <Route path=\"/\">\n            <AppLayout />\n          </Route>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './utils/svg-icons';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// eslint-disable-next-line react/jsx-filename-extension\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import PropTypes from 'prop-types';\n\nexport const ProductionType = PropTypes.shape({\n  startDate: PropTypes.string.isRequired,\n  endDate: PropTypes.string.isRequired,\n  updatedDate: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n});\n\nexport const PlantType = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  coords: PropTypes.arrayOf(PropTypes.number).isRequired,\n  coolingType: PropTypes.string.isRequired,\n  coolingPlace: PropTypes.string.isRequired,\n  hasCoolingTower: PropTypes.bool.isRequired,\n  wikiLink: PropTypes.string.isRequired,\n  asnLink: PropTypes.string.isRequired,\n});\n\nexport const ReactorType = PropTypes.shape({\n  eicCode: PropTypes.string.isRequired,\n  plantId: PropTypes.string.isRequired,\n  reactorIndex: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  stage: PropTypes.string.isRequired,\n  power_MW: PropTypes.number.isRequired,\n  buildStartYear: PropTypes.number.isRequired,\n  gridLinkYear: PropTypes.number.isRequired,\n  exploitationStartYear: PropTypes.number.isRequired,\n  dayProductions: PropTypes.arrayOf(ProductionType).isRequired,\n});\n\nexport const MixType = PropTypes.shape({\n  isOk: PropTypes.bool.isRequired,\n  datetime: PropTypes.number.isRequired,\n  wind: PropTypes.number.isRequired,\n  solar: PropTypes.number.isRequired,\n  nuclear: PropTypes.number.isRequired,\n  gas: PropTypes.number.isRequired,\n  oil: PropTypes.number.isRequired,\n  coal: PropTypes.number.isRequired,\n  consumption: PropTypes.number.isRequired,\n  biomass: PropTypes.number.isRequired,\n  hydroPumped: PropTypes.number.isRequired,\n  hydro: PropTypes.number.isRequired,\n  imports: PropTypes.number.isRequired,\n  exports: PropTypes.number.isRequired,\n});\n"],"sourceRoot":""}