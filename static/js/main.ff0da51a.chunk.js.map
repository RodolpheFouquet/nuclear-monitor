{"version":3,"sources":["utils/svg-icons.js","api/index.js","store/plants.js","store/reactors.js","store/productions.js","store/mix.js","store/index.js","views/MixView.jsx","views/PlantView/components/ReactorIndicator.jsx","views/PlantView/index.jsx","HOC/buildLoader.js","utils/index.js","components/PlantMap.jsx","components/AppLayout.jsx","App.jsx","serviceWorker.js","index.js","utils/types.js"],"names":["L","DivIcon","SVGIcon","extend","options","point","initialize","Util","setOptions","this","iconSize","circleAnchor","Number","x","circleColor","color","circleFillOpacity","opacity","circleOpacity","circleWeight","weight","fillColor","fontSize","iconAnchor","y","popupAnchor","html","_createSVG","_createCircle","cx","cy","radius","circleRatio","fill","circleFillColor","fillOpacity","stroke","strokeOpacity","strokeWidth","className","_createPathDescription","height","width","margin","_createPath","pathDescription","path","circle","text","_createText","fontWeight","lineHeight","circleText","fontColor","replace","fontOpacity","divIcon","svgIcon","Marker","SVGMarker","latlng","icon","iconFactory","iconOptions","_latlng","onAdd","map","prototype","call","setStyle","style","_icon","children","iconBody","iconCircle","setAttribute","setOpacity","setIcon","marker","svgMarker","REACT_APP_NUCLEAR_MONITOR_API","process","a","Promise","resolve","setTimeout","fetch","res","json","data","START_URL","DATE_FORMAT","qs","stringify","dataset","rows","sort","moment","tz","format","mix","records","fields","isOk","nucleaire","datetime","date_heure","unix","wind","eolien","solar","solaire","nuclear","gas","gaz","oil","fioul","coal","charbon","consumption","consommation","biomass","bioenergies","hydroPumped","pompage","hydro","hydraulique","imports","Math","max","ech_physiques","exports","min","PLANTS_LOAD_ACTION","PLANTS_RECEIVE_ACTION","receivePlantsAction","errors","type","initialState","loading","loaded","plantsLoadedSelector","state","plants","plantsSelector","values","plantSelector","plantId","plantsReducer","action","REACTORS_LOAD_ACTION","REACTORS_RECEIVE_ACTION","receiveReactorsAction","reactorsLoadedSelector","reactors","reactorsReducer","PRODUCTIONS_LOAD_ACTION","PRODUCTIONS_RECEIVE_ACTION","receiveProductionsAction","productionsLoadedSelector","productions","actualProdOfReactor","eicCode","t","length","productionsReducer","MIX_LOAD_ACTION","MIX_RECEIVE_ACTION","receiveMixAction","mixLoadedSelector","mixSelector","mixReducer","rootReducer","combineReducers","enhancers","applyMiddleware","thunk","enhancer","composeWithDevTools","store","createStore","META","label","stackId","GRAPH_ORDER","HEADER_ORDER","v","isNaN","connect","props","withState","floor","diff","startOf","slotIndex","setSlotIndex","span","key","backgroundColor","abs","axisLine","mirror","dataKey","activeDot","dot","defaultValue","onChange","debounce","tooltipVisible","tipFormatter","value","add","require","ReactorType","ReactorIndicator","reactor","absLoad","actualProd","part","power_MW","background","reactorIndex","match","params","Object","filter","reactorsOfPlantSelector","currentPlant","goTo","url","history","push","id","plant","Option","name","marginLeft","coolingType","href","wikiLink","target","rel","src","alt","asnLink","coolingPlace","Loader","load","prevProps","prevOtherProps","omit","otherProps","equals","Component","buildLoader","loadFunction","testScreenType","size","windowWidth","window","innerWidth","HEADER_HEIGHT","DRAWER_WIDTH","NORMAL_ICON","Leaflet","SELECTED_ICON","PlantMap","currentPlantId","onPlantClick","drawerHeight","isSmallScreen","body","document","documentElement","scrollHeight","offsetHeight","clientHeight","getWindowHeight","Map","center","zoom","marginTop","zoomControl","ZoomControl","position","TileLayer","attribution","title","coords","onClick","PlantsLoader","dispatch","getPlants","then","indexBy","prop","catch","console","error","ReactorsLoader","getReactors","ProductionsLoader","getProductions","MixLoader","getMix","AppLayout","isLoaded","spinning","indicator","to","visible","placement","mask","closable","bodyStyle","padding","exact","component","MixView","PlantView","pathname","Header","Content","defaultProps","withRouter","location","split","pop","App","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","PlantType","PropTypes","shape","string","isRequired","arrayOf","number","hasCoolingTower","bool","stage","buildStartYear","gridLinkYear","exploitationStartYear","MixType"],"mappings":"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","file":"static/js/main.ff0da51a.chunk.js","sourcesContent":["/* eslint-disable */\n//Leaflet-SVGIcon\n//SVG icon for any marker class\n//Ilya Atkin\n//ilya.atkin@unh.edu\nimport Leaflet from 'leaflet';\n\nL.DivIcon.SVGIcon = L.DivIcon.extend({\n  options: {\n      \"circleText\": \"\",\n      \"className\": \"svg-icon\",\n      \"circleAnchor\": null, //defaults to [iconSize.x/2, iconSize.x/2]\n      \"circleColor\": null, //defaults to color\n      \"circleOpacity\": null, // defaults to opacity\n      \"circleFillColor\": \"rgb(255,255,255)\",\n      \"circleFillOpacity\": null, //default to opacity\n      \"circleRatio\": 0.5,\n      \"circleWeight\": null, //defaults to weight\n      \"color\": \"rgb(0,102,255)\",\n      \"fillColor\": null, // defaults to color\n      \"fillOpacity\": 0.4,\n      \"fontColor\": \"rgb(0, 0, 0)\",\n      \"fontOpacity\": \"1\",\n      \"fontSize\": null, // defaults to iconSize.x/4\n      \"fontWeight\": \"normal\",\n      \"iconAnchor\": null, //defaults to [iconSize.x/2, iconSize.y] (point tip)\n      \"iconSize\": L.point(32,48),\n      \"opacity\": 1,\n      \"popupAnchor\": null,\n      \"weight\": 2\n  },\n  initialize: function(options) {\n      options = L.Util.setOptions(this, options)\n\n      //iconSize needs to be converted to a Point object if it is not passed as one\n      options.iconSize = L.point(options.iconSize)\n\n      //in addition to setting option dependant defaults, Point-based options are converted to Point objects\n      if (!options.circleAnchor) {\n          options.circleAnchor = L.point(Number(options.iconSize.x)/2, Number(options.iconSize.x)/2)\n      }\n      else {\n          options.circleAnchor = L.point(options.circleAnchor)\n      }\n      if (!options.circleColor) {\n          options.circleColor = options.color\n      }\n      if (!options.circleFillOpacity) {\n          options.circleFillOpacity = options.opacity\n      }\n      if (!options.circleOpacity) {\n          options.circleOpacity = options.opacity\n      }\n      if (!options.circleWeight) {\n          options.circleWeight = options.weight\n      }\n      if (!options.fillColor) {\n          options.fillColor = options.color\n      }\n      if (!options.fontSize) {\n          options.fontSize = Number(options.iconSize.x/4)\n      }\n      if (!options.iconAnchor) {\n          options.iconAnchor = L.point(Number(options.iconSize.x)/2, Number(options.iconSize.y))\n      }\n      else {\n          options.iconAnchor = L.point(options.iconAnchor)\n      }\n      if (!options.popupAnchor) {\n          options.popupAnchor = L.point(0, (-0.75)*(options.iconSize.y))\n      }\n      else {\n          options.popupAnchor = L.point(options.popupAnchor)\n      }\n\n      options.html = this._createSVG()\n  },\n  _createCircle: function() {\n      var cx = Number(this.options.circleAnchor.x)\n      var cy = Number(this.options.circleAnchor.y)\n      var radius = this.options.iconSize.x/2 * Number(this.options.circleRatio)\n      var fill = this.options.circleFillColor\n      var fillOpacity = this.options.circleFillOpacity\n      var stroke = this.options.circleColor\n      var strokeOpacity = this.options.circleOpacity\n      var strokeWidth = this.options.circleWeight\n      var className = this.options.className + \"-circle\"\n\n      var circle = '<circle class=\"' + className + '\" cx=\"' + cx + '\" cy=\"' + cy + '\" r=\"' + radius +\n          '\" fill=\"' + fill + '\" fill-opacity=\"'+ fillOpacity +\n          '\" stroke=\"' + stroke + '\" stroke-opacity=' + strokeOpacity + '\" stroke-width=\"' + strokeWidth + '\"/>'\n\n      return circle\n  },\n  _createPathDescription: function() {\n      var height = Number(this.options.iconSize.y)\n      var width = Number(this.options.iconSize.x)\n      var weight = Number(this.options.weight)\n      var margin = weight / 2\n\n      var startPoint = \"M \" + margin + \" \" + (width/2) + \" \"\n      var leftLine = \"L \" + (width/2) + \" \" + (height - weight) + \" \"\n      var rightLine = \"L \" + (width - margin) + \" \" + (width/2) + \" \"\n      var arc = \"A \" + (width/4) + \" \" + (width/4) + \" 0 0 0 \" + margin + \" \" + (width/2) + \" Z\"\n\n      var d = startPoint + leftLine + rightLine + arc\n\n      return d\n  },\n  _createPath: function() {\n      var pathDescription = this._createPathDescription()\n      var strokeWidth = this.options.weight\n      var stroke = this.options.color\n      var strokeOpacity = this.options.opacity\n      var fill = this.options.fillColor\n      var fillOpacity = this.options.fillOpacity\n      var className = this.options.className + \"-path\"\n\n      var path = '<path class=\"' + className + '\" d=\"' + pathDescription +\n          '\" stroke-width=\"' + strokeWidth + '\" stroke=\"' + stroke + '\" stroke-opacity=\"' + strokeOpacity +\n          '\" fill=\"' + fill + '\" fill-opacity=\"' + fillOpacity + '\"/>'\n\n      return path\n  },\n  _createSVG: function() {\n      var path = this._createPath()\n      var circle = this._createCircle()\n      var text = this._createText()\n      var className = this.options.className + \"-svg\"\n\n      var style = \"width:\" + this.options.iconSize.x + \"px; height:\" + this.options.iconSize.y + \"px;\"\n\n      var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" class=\"' + className + '\" style=\"' + style + '\">' + path + circle + text + '</svg>'\n\n      return svg\n  },\n  _createText: function() {\n      var fontSize = this.options.fontSize + \"px\"\n      var fontWeight = this.options.fontWeight\n      var lineHeight = Number(this.options.fontSize)\n\n      var x = this.options.circleAnchor.x\n      var y = this.options.circleAnchor.y + (lineHeight * 0.35) //35% was found experimentally\n      var circleText = this.options.circleText\n      var textColor = this.options.fontColor.replace(\"rgb(\", \"rgba(\").replace(\")\", \",\" + this.options.fontOpacity + \")\")\n\n      var text = '<text text-anchor=\"middle\" x=\"' + x + '\" y=\"' + y + '\" style=\"font-size: ' + fontSize + '; font-weight: ' + fontWeight +'\" fill=\"' + textColor + '\">' + circleText + '</text>'\n\n      return text\n  }\n})\n\nL.divIcon.svgIcon = function(options) {\n  return new L.DivIcon.SVGIcon(options)\n}\n\nL.Marker.SVGMarker = L.Marker.extend({\n  options: {\n      \"iconFactory\": L.divIcon.svgIcon,\n      \"iconOptions\": {}\n  },\n  initialize: function(latlng, options) {\n      options = L.Util.setOptions(this, options)\n      options.icon = options.iconFactory(options.iconOptions)\n      this._latlng = latlng\n  },\n  onAdd: function(map) {\n      L.Marker.prototype.onAdd.call(this, map)\n  },\n  setStyle: function(style) {\n      if (this._icon) {\n          var svg = this._icon.children[0]\n          var iconBody = this._icon.children[0].children[0]\n          var iconCircle = this._icon.children[0].children[1]\n\n          if (style.color && !style.iconOptions) {\n              var stroke = style.color.replace(\"rgb\",\"rgba\").replace(\")\", \",\"+this.options.icon.options.opacity+\")\")\n              var fill = style.color.replace(\"rgb\",\"rgba\").replace(\")\", \",\"+this.options.icon.options.fillOpacity+\")\")\n              iconBody.setAttribute(\"stroke\", stroke)\n              iconBody.setAttribute(\"fill\", fill)\n              iconCircle.setAttribute(\"stroke\", stroke)\n\n              this.options.icon.fillColor = fill\n              this.options.icon.color = stroke\n              this.options.icon.circleColor = stroke\n          }\n          if (style.opacity) {\n              this.setOpacity(style.opacity)\n          }\n          if (style.iconOptions) {\n              if (style.color) { style.iconOptions.color = style.color }\n              var iconOptions = L.Util.setOptions(this.options.icon, style.iconOptions)\n              this.setIcon(L.divIcon.svgIcon(iconOptions))\n          }\n      }\n  }\n})\n\nL.marker.svgMarker = function(latlng, options) {\n  return new L.Marker.SVGMarker(latlng, options)\n}\n","import moment from 'moment-timezone';\nimport qs from 'qs';\n\nconst { REACT_APP_NUCLEAR_MONITOR_API } = process.env;\n\nexport async function getPlants() {\n  await new Promise(resolve => setTimeout(resolve, 2000));\n\n  const res = await fetch(`${REACT_APP_NUCLEAR_MONITOR_API}/plants`);\n  const data = await res.json();\n\n  return data;\n}\n\nexport async function getReactors() {\n  const res = await fetch(`${REACT_APP_NUCLEAR_MONITOR_API}/reactors`);\n  const data = await res.json();\n\n  return data;\n}\n\nexport async function getProductions() {\n  const res = await fetch(`${REACT_APP_NUCLEAR_MONITOR_API}/productions`);\n  const data = await res.json();\n\n  return data;\n}\n\nconst START_URL =\n  'https://opendata.reseaux-energies.fr/api/records/1.0/search/?';\nconst DATE_FORMAT = 'YYYY-MM-DD';\nexport async function getMix() {\n  const res = await fetch(\n    `${START_URL}${qs.stringify({\n      dataset: 'eco2mix-national-tr',\n      rows: 96,\n      sort: '-date_heure',\n      'refine.date': moment()\n        .tz('Europe/Paris')\n        .format(DATE_FORMAT),\n    })}`,\n  );\n  const data = await res.json();\n\n  const mix = data.records.map(({ fields }) => ({\n    isOk: !!fields.nucleaire,\n    datetime: moment(fields.date_heure).unix(),\n    wind: Number(fields.eolien),\n    solar: Number(fields.solaire),\n    nuclear: Number(fields.nucleaire),\n    gas: Number(fields.gaz),\n    oil: Number(fields.fioul),\n    coal: Number(fields.charbon),\n    consumption: Number(fields.consommation),\n    biomass: Number(fields.bioenergies),\n    hydroPumped: Number(fields.pompage),\n    hydro: Number(fields.hydraulique),\n    imports: Math.max(0, Number(fields.ech_physiques)),\n    exports: Math.min(0, Number(fields.ech_physiques)),\n  }));\n\n  return mix;\n}\n","import { values, indexBy, prop } from 'ramda';\n\nimport { getPlants } from '../api';\n\nexport const PLANTS_LOAD_ACTION = 'PLANTS_LOAD_ACTION';\nexport const PLANTS_RECEIVE_ACTION = 'PLANTS_RECEIVE_ACTION';\n\nfunction loadPlantsAction() {\n  return { type: PLANTS_LOAD_ACTION };\n}\n\nfunction receivePlantsAction({ data, errors }) {\n  return { type: PLANTS_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllPlants() {\n  return function dispatchLoadAllPlants(dispatch) {\n    dispatch(loadPlantsAction());\n    return getPlants()\n      .then(data =>\n        dispatch(\n          receivePlantsAction({\n            data: indexBy(prop('id'), data),\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) && dispatch(receivePlantsAction({ errors })),\n      );\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction plantsReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case PLANTS_LOAD_ACTION:\n      return { ...state, loading: true };\n    case PLANTS_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function plantsLoadedSelector(state) {\n  return state.plants.loaded;\n}\n\nexport function plantsSelector(state) {\n  return values(state.plants.data);\n}\n\nexport function plantSelector(plantId, state) {\n  return state.plants.data[plantId];\n}\n\nexport default plantsReducer;\n","import { values, indexBy, prop } from 'ramda';\n\nimport { getReactors } from '../api';\n\nexport const REACTORS_LOAD_ACTION = 'REACTORS_LOAD_ACTION';\nexport const REACTORS_RECEIVE_ACTION = 'REACTORS_RECEIVE_ACTION';\n\nfunction loadReactorsAction() {\n  return { type: REACTORS_LOAD_ACTION };\n}\n\nfunction receiveReactorsAction({ data, errors }) {\n  return { type: REACTORS_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllReactors() {\n  return function dispatchLoadAllReactors(dispatch) {\n    dispatch(loadReactorsAction());\n    return getReactors()\n      .then(data =>\n        dispatch(\n          receiveReactorsAction({\n            data: indexBy(prop('eicCode'), data),\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) && dispatch(receiveReactorsAction({ errors })),\n      );\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction reactorsReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case REACTORS_LOAD_ACTION:\n      return { ...state, loading: true };\n    case REACTORS_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function reactorsLoadedSelector(state) {\n  return state.reactors.loaded;\n}\n\nexport function reactorsSelector(state) {\n  return values(state.reactors.data);\n}\n\nexport function reactorSelector(eicCode, state) {\n  return state.reactors.data[eicCode];\n}\n\nexport function reactorsOfPlantSelector(plantId, state) {\n  return Object.values(state.reactors.data).filter(\n    reactor => reactor.plantId === plantId,\n  );\n}\n\nexport default reactorsReducer;\n","import { values, indexBy, prop } from 'ramda';\n\nimport { getProductions } from '../api';\n\nexport const PRODUCTIONS_LOAD_ACTION = 'PRODUCTIONS_LOAD_ACTION';\nexport const PRODUCTIONS_RECEIVE_ACTION = 'PRODUCTIONS_RECEIVE_ACTION';\n\nfunction loadProductionsAction() {\n  return { type: PRODUCTIONS_LOAD_ACTION };\n}\n\nfunction receiveProductionsAction({ data, errors }) {\n  return { type: PRODUCTIONS_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllProductions() {\n  return function dispatchLoadAllProductions(dispatch) {\n    dispatch(loadProductionsAction());\n    return getProductions()\n      .then(data =>\n        dispatch(\n          receiveProductionsAction({\n            data: indexBy(prop('eicCode'), data),\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) &&\n          dispatch(receiveProductionsAction({ errors })),\n      );\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction productionsReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case PRODUCTIONS_LOAD_ACTION:\n      return { ...state, loading: true };\n    case PRODUCTIONS_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function productionsLoadedSelector(state) {\n  return state.productions.loaded;\n}\n\nexport function productionsSelector(state) {\n  return values(state.productions.data);\n}\n\nexport function productionSelector(eicCode, state) {\n  return state.productions.data[eicCode];\n}\n\nexport function actualProdOfReactor(eicCode, state) {\n  const t = state.productions.data[eicCode].values; // TODO\n  return t[t.length - 1];\n}\n\nexport default productionsReducer;\n","import { getMix } from '../api';\n\nexport const MIX_LOAD_ACTION = 'MIX_LOAD_ACTION';\nexport const MIX_RECEIVE_ACTION = 'MIX_RECEIVE_ACTION';\n\nfunction loadMixAction() {\n  return { type: MIX_LOAD_ACTION };\n}\n\nfunction receiveMixAction({ data, errors }) {\n  return { type: MIX_RECEIVE_ACTION, data, errors };\n}\n\nexport function loadAllMix() {\n  return function dispatchLoadAllMix(dispatch) {\n    dispatch(loadMixAction());\n    return getMix()\n      .then(data =>\n        dispatch(\n          receiveMixAction({\n            data,\n          }),\n        ),\n      )\n      .catch(\n        errors =>\n          console.error(errors) && dispatch(receiveMixAction({ errors })),\n      );\n  };\n}\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  errors: null,\n  data: {},\n};\n\nfunction mixReducer(state = initialState, action) {\n  const { type } = action;\n  switch (type) {\n    case MIX_LOAD_ACTION:\n      return { ...state, loading: true };\n    case MIX_RECEIVE_ACTION:\n      return {\n        ...state,\n        loading: false,\n        loaded: !action.errors,\n        errors: action.errors || null,\n        data: action.data || {},\n      };\n    default:\n      return state;\n  }\n}\n\nexport function mixLoadedSelector(state) {\n  return state.mix.loaded;\n}\n\nexport function mixSelector(state) {\n  return state.mix.data;\n}\n\nexport default mixReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\nimport plantsReducer from './plants';\nimport reactorsReducer from './reactors';\nimport productionsReducer from './productions';\nimport mixReducer from './mix';\n\nconst rootReducer = combineReducers({\n  // ...reducers,\n  plants: plantsReducer,\n  reactors: reactorsReducer,\n  productions: productionsReducer,\n  mix: mixReducer,\n});\n\nconst enhancers = [applyMiddleware(thunk)];\nconst composeEnhancers = composeWithDevTools({\n  // actionSanitizer,\n  // stateSanitizer,\n});\nconst enhancer = composeEnhancers(...enhancers);\n\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { withState } from 'recompose';\n\nimport { Row, Col, Slider } from 'antd';\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  Line,\n  ReferenceLine,\n  YAxis,\n  Area,\n} from 'recharts';\n\nimport moment from 'moment-timezone';\nimport debounce from 'lodash.debounce';\n\nimport { MixType } from '../utils/types';\nimport { mixSelector } from '../store/mix';\n\nconst META = {\n  hydroPumped: {\n    label: 'POMPAGE',\n    color: '#114774',\n    stackId: '2',\n  },\n  biomass: {\n    label: 'BIOENERG.',\n    color: '#166a57',\n  },\n  wind: {\n    label: 'EOLIEN',\n    color: '#74cdb9',\n  },\n  solar: {\n    label: 'SOLAIRE',\n    color: '#f27406',\n  },\n  nuclear: {\n    label: 'NUCLEAIRE',\n    color: '#f5b300',\n  },\n  hydro: {\n    label: 'HYDRAU.',\n    color: '#2772b2',\n  },\n  gas: {\n    label: 'GAS',\n    color: '#f30a0a',\n  },\n  coal: {\n    label: 'CHARBON',\n    color: '#ac8c35',\n  },\n  oil: {\n    label: 'FIOUL',\n    color: '#8356a2',\n  },\n  exports: {\n    label: 'EXPORTS',\n    color: '#969696',\n    stackId: '2',\n  },\n  imports: {\n    label: 'IMPORTS',\n    color: '#969696',\n  },\n};\nconst GRAPH_ORDER = [\n  'hydroPumped',\n  'exports',\n  'biomass',\n  'wind',\n  'solar',\n  'nuclear',\n  'hydro',\n  'gas',\n  'coal',\n  'oil',\n  'imports',\n];\nconst HEADER_ORDER = [\n  'oil',\n  'coal',\n  'gas',\n  'hydro',\n  'nuclear',\n  'solar',\n  'wind',\n  'biomass',\n  'hydroPumped',\n];\n\nfunction format(v) {\n  // eslint-disable-next-line no-restricted-globals\n  return isNaN(v) ? '-' : `${v}`;\n}\n\nfunction MixView(props) {\n  const { mix, slotIndex, setSlotIndex } = props;\n\n  return (\n    <div className=\"MixView\">\n      <Row>\n        <Col span={24}>\n          <div className=\"MixView__header\">\n            {HEADER_ORDER.map(key => (\n              <div\n                key={key}\n                className=\"MixView__header__item\"\n                style={{\n                  backgroundColor: META[key].color,\n                }}\n              >\n                {format(Math.abs(mix[slotIndex][key]))}\n                <span className=\"MixView__header__item__small\"> MW</span>\n                <br />\n                <span className=\"MixView__header__item__small\">\n                  {META[key].label}\n                </span>\n              </div>\n            ))}\n            <div\n              className=\"MixView__header__item\"\n              style={{\n                backgroundColor: META.imports.color,\n              }}\n            >\n              {format(\n                Math.max(mix[slotIndex].imports, -mix[slotIndex].exports),\n              )}\n              <span className=\"MixView__header__item__small\"> MW</span>\n              <br />\n              <span className=\"MixView__header__item__small\">\n                {mix[slotIndex].exports < 0\n                  ? META.exports.label\n                  : META.imports.label}\n              </span>\n            </div>\n            <div className=\"MixView__header__item\" />\n            <div\n              className=\"MixView__header__item\"\n              style={{ backgroundColor: 'black' }}\n            >\n              {format(mix[slotIndex].consumption)}\n              <span className=\"MixView__header__item__small\"> MW</span>\n              <br />\n              <span className=\"MixView__header__item__small\">CONSO</span>\n            </div>\n          </div>\n\n          <div className=\"MixView_chart\">\n            <ResponsiveContainer>\n              <ComposedChart data={mix}>\n                <YAxis axisLine mirror />\n                {GRAPH_ORDER.map(key => (\n                  <Area\n                    key={key}\n                    dataKey={key}\n                    type=\"monotone\"\n                    activeDot={false}\n                    stroke=\"none\"\n                    fill={META[key].color}\n                    stackId={META[key].stackId || '1'}\n                  />\n                ))}\n                <Line\n                  dataKey=\"consumption\"\n                  dot={false}\n                  activeDot={false}\n                  type=\"monotone\"\n                  stroke=\"black\"\n                />\n                <ReferenceLine x={slotIndex} stroke=\"#4b4e52\" />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </div>\n          <div className=\"MixView__sliderContainer\">\n            <Slider\n              min={0}\n              max={95}\n              style={{ width: '100%' }}\n              defaultValue={slotIndex}\n              // value={slotIndex}\n              onChange={debounce(setSlotIndex, 400)}\n              tooltipVisible\n              tipFormatter={\n                value =>\n                  moment()\n                    .startOf('day')\n                    .add(value * 15, 'minutes')\n                    .format('HH:mm')\n                // eslint-disable-next-line react/jsx-curly-newline\n              }\n              // marks={{ 0: '00:00', 48: '12:00', 95: '24:00' }}\n            />\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nMixView.propTypes = {\n  mix: PropTypes.arrayOf(MixType).isRequired,\n  slotIndex: PropTypes.number.isRequired,\n  setSlotIndex: PropTypes.func.isRequired,\n};\n\nexport default connect((state, props) => ({\n  mix: mixSelector(state),\n}))(\n  withState('slotIndex', 'setSlotIndex', () =>\n    Math.max(\n      Math.floor(moment().diff(moment().startOf('day'), 'minutes') / 15) - 2,\n      0,\n    ),\n  )(MixView),\n);\n","import React from 'react';\n\nconst { ReactorType } = require('../../../utils/types');\n\nfunction ReactorIndicator(props) {\n  const { reactor } = props;\n  const absLoad = Math.max(0, reactor.actualProd);\n  const part = Math.floor((absLoad / reactor.power_MW) * 100);\n\n  return (\n    <div\n      className=\"ReactIndicator\"\n      style={{\n        background: `linear-gradient(0deg, #26a65b 0%, #26a65b ${part}%, rgba(255,255,255,1) ${part}%)`,\n      }}\n    >\n      <strong>{Math.floor(absLoad)}</strong>\n      <br />\n      <strong>MW</strong>\n      <div className=\"ReactIndicator__number\">{reactor.reactorIndex}</div>\n    </div>\n  );\n}\n\nReactorIndicator.propTypes = {\n  reactor: ReactorType.isRequired,\n};\n\nexport default ReactorIndicator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Row, Col, Select, Tag } from 'antd';\nimport { plantSelector, plantsSelector } from '../../store/plants';\nimport { PlantType, ReactorType } from '../../utils/types';\nimport ReactorIndicator from './components/ReactorIndicator';\nimport { reactorsOfPlantSelector } from '../../store/reactors';\nimport { actualProdOfReactor } from '../../store/productions';\n\nfunction PlantView(props) {\n  const { plants, currentPlant, reactors, goTo } = props;\n  return (\n    <div className=\"PlantView\">\n      <Row>\n        <Col span={24}>\n          <div className=\"PlantView__firstRow\">\n            <div className=\"PlantView__firstRow__left\">\n              <Select\n                value={currentPlant.id}\n                onChange={id => goTo(`/plant/${id}`)}\n                style={{ width: '9em' }}\n              >\n                {plants.map(plant => (\n                  <Select.Option key={plant.id} value={plant.id}>\n                    {plant.name}\n                  </Select.Option>\n                ))}\n              </Select>\n              <span>\n                <Tag style={{ marginLeft: '8px' }}>\n                  {currentPlant.coolingType === 'SEA' ? 'Mer' : 'Fleuve'}\n                </Tag>\n              </span>\n            </div>\n            <div className=\"PlantView__firstRow__right\">\n              <a\n                href={currentPlant.wikiLink}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <img className=\"PlantView__wiki\" src=\"wiki.svg\" alt=\"wiki\" />\n              </a>\n              <a\n                href={currentPlant.asnLink}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <img className=\"PlantView__asn\" src=\"logo-asn.png\" alt=\"asn\" />\n              </a>\n            </div>\n          </div>\n\n          {/* {currentPlant.hasCoolingTower && (\n            <span>\n              {reactors.map(() => (\n                <img\n                  src=\"coolingTower.svg\"\n                  alt=\"cooling tower\"\n                  style={{ heigth: 15, width: 15, margin: 1 }}\n                />\n              ))}\n            </span>\n          )} */}\n\n          <div className=\"PlantView__schema\">\n            <div className=\"PlantView__reactors\">\n              {reactors.map(reactor => (\n                <ReactorIndicator key={reactor.eicCode} reactor={reactor} />\n              ))}\n            </div>\n            <div\n              className=\"PlantView__cooling\"\n              style={{ width: reactors.length * 50 }}\n            >\n              {currentPlant.coolingPlace}\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nPlantView.propTypes = {\n  plants: PropTypes.arrayOf(PlantType).isRequired,\n  currentPlant: PlantType.isRequired,\n  reactors: PropTypes.arrayOf(ReactorType).isRequired,\n  goTo: PropTypes.func.isRequired,\n};\n\nexport default connect((state, props) => {\n  const { plantId } = props.match.params;\n  const reactors = reactorsOfPlantSelector(plantId, state).map(reactor => ({\n    ...reactor,\n    actualProd: actualProdOfReactor(reactor.eicCode, state).value,\n  }));\n\n  return {\n    plants: plantsSelector(state),\n    currentPlant: plantSelector(plantId, state),\n    goTo: url => props.history.push(url),\n    reactors,\n  };\n})(PlantView);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { omit, equals } from 'ramda';\n\nclass Loader extends Component {\n  componentDidMount() {\n    const { load, ...otherProps } = this.props;\n\n    load(otherProps);\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevOtherProps = omit(['load'], prevProps);\n    const { load, ...otherProps } = this.props;\n\n    if (!equals(prevOtherProps, otherProps)) {\n      load(otherProps);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nLoader.propTypes = {\n  load: PropTypes.func.isRequired,\n};\n\nfunction buildLoader(loadFunction) {\n  return connect(\n    null,\n    { load: loadFunction },\n  )(Loader);\n}\n\nexport default buildLoader;\n","// eslint-disable-next-line import/prefer-default-export\nexport function testScreenType(size) {\n  const windowWidth = window.innerWidth;\n\n  switch (size) {\n    case 'xs':\n      return windowWidth < 576;\n    case 'sm':\n      return windowWidth >= 576;\n    case 'md':\n      return windowWidth >= 768;\n    case 'lg':\n      return windowWidth >= 992;\n    case 'xl':\n      return windowWidth >= 1200;\n    case 'xxl':\n      return windowWidth >= 1600;\n    default:\n      return false;\n  }\n}\n\nexport function getWindowHeight() {\n  const { body } = document;\n  const html = document.documentElement;\n  return Math.max(\n    body.scrollHeight,\n    body.offsetHeight,\n    html.clientHeight,\n    html.scrollHeight,\n    html.offsetHeight,\n  );\n}\n\nexport const HEADER_HEIGHT = 64;\nexport const DRAWER_WIDTH = 400;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Map, TileLayer, Marker, ZoomControl } from 'react-leaflet';\n\nimport Leaflet from 'leaflet';\n\nimport {\n  testScreenType,\n  getWindowHeight,\n  HEADER_HEIGHT,\n  DRAWER_WIDTH,\n} from '../utils';\nimport { PlantType } from '../utils/types';\n\nconst NORMAL_ICON = new Leaflet.DivIcon.SVGIcon({\n  fillOpacity: 1,\n  iconSize: [24, 38],\n});\nconst SELECTED_ICON = new Leaflet.DivIcon.SVGIcon({\n  color: 'red',\n  fillOpacity: 1,\n  iconSize: [24, 38],\n});\n\nfunction PlantMap(props) {\n  const { plants, currentPlantId, onPlantClick, drawerHeight } = props;\n  const isSmallScreen = !testScreenType('sm');\n  const height = getWindowHeight();\n  return (\n    <Map\n      center={[48.3, 2]}\n      zoom={isSmallScreen ? 5 : 6}\n      style={{\n        height: isSmallScreen ? height - HEADER_HEIGHT - drawerHeight : height,\n        marginTop: isSmallScreen ? HEADER_HEIGHT + drawerHeight : 0, // TODO\n        marginLeft: isSmallScreen ? 0 : DRAWER_WIDTH,\n      }}\n      zoomControl={false}\n    >\n      <ZoomControl position=\"bottomright\" />\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      {plants.map(plant => (\n        <Marker\n          key={plant.id}\n          title={plant.name}\n          position={plant.coords}\n          icon={plant.id === currentPlantId ? SELECTED_ICON : NORMAL_ICON}\n          onClick={() => onPlantClick(plant)}\n        />\n      ))}\n    </Map>\n  );\n}\n\nPlantMap.propTypes = {\n  plants: PropTypes.arrayOf(PlantType).isRequired,\n  currentPlantId: PropTypes.string.isRequired,\n  onPlantClick: PropTypes.func.isRequired,\n  drawerHeight: PropTypes.number.isRequired,\n};\n\nexport default PlantMap;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n  Route, // as BaseRoute,\n  Switch,\n  Redirect,\n  withRouter,\n  Link,\n} from 'react-router-dom';\nimport { Layout, Spin, Row, Col, Drawer } from 'antd';\n\nimport MixView from '../views/MixView';\nimport PlantView from '../views/PlantView';\n\nimport buildLoader from '../HOC/buildLoader';\nimport {\n  loadAllPlants,\n  plantsLoadedSelector,\n  plantsSelector,\n} from '../store/plants';\n\nimport { loadAllReactors, reactorsLoadedSelector } from '../store/reactors';\nimport {\n  loadAllProductions,\n  productionsLoadedSelector,\n} from '../store/productions';\nimport { loadAllMix, mixLoadedSelector } from '../store/mix';\n\nimport { testScreenType, HEADER_HEIGHT, DRAWER_WIDTH } from '../utils';\nimport { PlantType } from '../utils/types';\nimport PlantMap from './PlantMap';\n\nconst PlantsLoader = buildLoader(loadAllPlants);\nconst ReactorsLoader = buildLoader(loadAllReactors);\nconst ProductionsLoader = buildLoader(loadAllProductions);\nconst MixLoader = buildLoader(loadAllMix);\n\nfunction AppLayout(props) {\n  const { isLoaded, plants, goTo, currentPlantId } = props;\n  const isSmallScreen = !testScreenType('sm');\n  const drawerHeight = currentPlantId === 'mix' ? 310 : 200;\n\n  return (\n    <div className=\"AppLayout\">\n      <PlantsLoader />\n      <ReactorsLoader />\n      <ProductionsLoader />\n      <MixLoader />\n      <Spin\n        size=\"large\"\n        spinning={!isLoaded}\n        indicator={\n          // eslint-disable-next-line react/jsx-wrap-multilines\n          <div>\n            <img\n              className=\"AppLayout__loadingIcon\"\n              src=\"loading_icon.svg\"\n              alt=\"\"\n            />\n          </div>\n        }\n      >\n        {!isLoaded && <div className=\"AppLayout__splash\" />}\n        {isLoaded && (\n          <Layout>\n            <Drawer\n              title={isSmallScreen ? null : <Link to=\"/\">Nuclear monitor</Link>}\n              visible\n              placement={isSmallScreen ? 'top' : 'left'}\n              style={{ marginTop: isSmallScreen ? HEADER_HEIGHT : 0 }}\n              mask={false}\n              closable={false}\n              width={DRAWER_WIDTH}\n              height={drawerHeight}\n              bodyStyle={{ padding: 0 }}\n            >\n              <Switch>\n                <Route path=\"/mix\" exact component={MixView} />\n                <Route path=\"/plant/:plantId\" exact component={PlantView} />\n                <Route\n                  component={() => <Redirect to={{ pathname: '/mix' }} />}\n                />\n              </Switch>\n            </Drawer>\n            <Row>\n              <Col span={24}>\n                {isSmallScreen && (\n                  <Layout.Header className=\"AppLayout__header\">\n                    <Link to=\"/mix\">\n                      <strong>Nuclear monitor</strong>\n                    </Link>\n                  </Layout.Header>\n                )}\n                <Layout.Content className=\"AppLayout__content\">\n                  <PlantMap\n                    plants={plants}\n                    currentPlantId={currentPlantId}\n                    onPlantClick={plant => goTo(`/plant/${plant.id}`)}\n                    drawerHeight={drawerHeight}\n                  />\n                </Layout.Content>\n              </Col>\n            </Row>\n          </Layout>\n        )}\n      </Spin>\n    </div>\n  );\n}\n\nAppLayout.propTypes = {\n  isLoaded: PropTypes.bool.isRequired,\n  plants: PropTypes.arrayOf(PlantType).isRequired,\n  goTo: PropTypes.func.isRequired,\n  currentPlantId: PropTypes.string,\n};\n\nAppLayout.defaultProps = {\n  currentPlantId: null,\n};\n\n// withRouter needed to prevent blocking\nexport default withRouter(\n  connect((state, props) => ({\n    isLoaded:\n      plantsLoadedSelector(state) &&\n      reactorsLoadedSelector(state) &&\n      productionsLoadedSelector(state) &&\n      mixLoadedSelector(state),\n    plants: plantsSelector(state),\n    goTo: url => props.history.push(url),\n    currentPlantId: props.location.pathname.split('/').pop(),\n  }))(AppLayout),\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport store from './store';\n\nimport AppLayout from './components/AppLayout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <AppLayout />\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './utils/svg-icons';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// eslint-disable-next-line react/jsx-filename-extension\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import PropTypes from 'prop-types';\n\nexport const PlantType = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  coords: PropTypes.arrayOf(PropTypes.number).isRequired,\n  coolingType: PropTypes.string.isRequired,\n  coolingPlace: PropTypes.string.isRequired,\n  hasCoolingTower: PropTypes.bool.isRequired,\n  wikiLink: PropTypes.string.isRequired,\n  asnLink: PropTypes.string.isRequired,\n});\n\nexport const ReactorType = PropTypes.shape({\n  eicCode: PropTypes.string.isRequired,\n  plantId: PropTypes.string.isRequired,\n  reactorIndex: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  stage: PropTypes.string.isRequired,\n  power_MW: PropTypes.number.isRequired,\n  buildStartYear: PropTypes.number.isRequired,\n  gridLinkYear: PropTypes.number.isRequired,\n  exploitationStartYear: PropTypes.number.isRequired,\n  actualProd: PropTypes.number.isRequired, // TODO\n});\n\nexport const MixType = PropTypes.shape({\n  isOk: PropTypes.bool.isRequired,\n  datetime: PropTypes.number.isRequired,\n  wind: PropTypes.number.isRequired,\n  solar: PropTypes.number.isRequired,\n  nuclear: PropTypes.number.isRequired,\n  gas: PropTypes.number.isRequired,\n  oil: PropTypes.number.isRequired,\n  coal: PropTypes.number.isRequired,\n  consumption: PropTypes.number.isRequired,\n  biomass: PropTypes.number.isRequired,\n  hydroPumped: PropTypes.number.isRequired,\n  hydro: PropTypes.number.isRequired,\n  imports: PropTypes.number.isRequired,\n  exports: PropTypes.number.isRequired,\n});\n"],"sourceRoot":""}